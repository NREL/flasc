Search.setIndex({"alltitles": {"API Documentation": [[125, null]], "Assemble the pandas dataframes and add some noise to the wind speed and direction signals": [[132, "assemble-the-pandas-dataframes-and-add-some-noise-to-the-wind-speed-and-direction-signals"]], "Calculating Uplift": [[132, "calculating-uplift"]], "Calculating the change in energy production": [[127, null]], "Change uncertainty calculation": [[132, "change-uncertainty-calculation"]], "Citation": [[139, "citation"]], "Compute the energy ratio of turbine 2, with respect to turbine 0": [[132, "compute-the-energy-ratio-of-turbine-2-with-respect-to-turbine-0"]], "Computing the energy ratio": [[132, "computing-the-energy-ratio"]], "Converting Wide and Long": [[134, "converting-wide-and-long"]], "Creating a FlascDataFrame from User Data": [[134, "creating-a-flascdataframe-from-user-data"]], "Cross-Check Northing calibration": [[131, "cross-check-northing-calibration"]], "Data filtering": [[126, "data-filtering"]], "Demonstrate energy ratio options": [[133, null]], "Demonstrate energy ratio syntax": [[132, null]], "Energy Ratio Input": [[132, "energy-ratio-input"]], "Energy ratio analysis": [[128, null]], "EnergyRatioOutput": [[132, "energyratiooutput"]], "Example Tall data format for a three turbine wind farm": [[126, "id1"]], "Example Wide data format for a three turbine wind farm": [[126, "id2"]], "Examples demonstrating energy ratio usage": [[128, "examples-demonstrating-energy-ratio-usage"]], "Expected Power Analysis": [[127, "expected-power-analysis"]], "Exporting to wind-up format": [[134, "exporting-to-wind-up-format"]], "FLASC data format": [[134, null]], "FLASC documentation": [[136, null]], "FLASC examples": [[135, "flasc-examples"]], "FLASC package": [[139, "flasc-package"]], "FlascDataFrame": [[134, "flascdataframe"]], "Format data to a wide table format (if necessary)": [[126, "format-data-to-a-wide-table-format-if-necessary"]], "Generate data set to illustrate operations": [[131, "generate-data-set-to-illustrate-operations"]], "Generate dataset with FLORIS": [[132, "generate-dataset-with-floris"], [133, "generate-dataset-with-floris"]], "Getting started": [[135, null]], "Homegenization with HOGER": [[131, "homegenization-with-hoger"]], "Illustrating pre-computing reference wind speed, direction and power": [[133, "illustrating-pre-computing-reference-wind-speed-direction-and-power"]], "Import dependencies": [[129, null], [130, null]], "Install FLASC": [[135, "install-flasc"]], "Installation": [[137, null]], "Installation for developers": [[137, "installation-for-developers"]], "Licensing": [[138, null]], "Literature": [[139, "literature"]], "Load FLORIS model and show layout": [[131, "load-floris-model-and-show-layout"]], "Northing Calibration in FLASC": [[131, null]], "Northing calibration error": [[131, "northing-calibration-error"]], "Overview": [[139, null]], "Questions": [[139, "questions"]], "Raw data processing": [[126, null]], "Raw data retrieval": [[126, "raw-data-retrieval"]], "Recalculate which turbines are clean with respect to offset changes": [[131, "recalculate-which-turbines-are-clean-with-respect-to-offset-changes"]], "Remove steady offset from a single turbine": [[131, "remove-steady-offset-from-a-single-turbine"]], "Save postprocessed data to a local file": [[129, "save-postprocessed-data-to-a-local-file"]], "Show the final yaw angles": [[131, "show-the-final-yaw-angles"]], "Step 0: Initial data pulldown": [[129, "step-0-initial-data-pulldown"], [130, "step-0-initial-data-pulldown"]], "Step 1: Format to common FLASC format": [[129, "step-1-format-to-common-flasc-format"]], "Step 1: Initialize FLORIS": [[130, "step-1-initialize-floris"]], "Step 2: Cross-compare wind direction measurements": [[130, "step-2-cross-compare-wind-direction-measurements"]], "Step 2: Filter the data for outliers": [[129, "step-2-filter-the-data-for-outliers"]], "Step 3: Estimate the wind direction bias for a single wind turbine": [[130, "step-3-estimate-the-wind-direction-bias-for-a-single-wind-turbine"]], "Step 3: Plot faults vs. the layout": [[129, "step-3-plot-faults-vs-the-layout"]], "Step 4: Estimate the biases of the remaining turbines": [[130, "step-4-estimate-the-biases-of-the-remaining-turbines"], [131, "step-4-estimate-the-biases-of-the-remaining-turbines"]], "Step 5: Correct turbine wind directions for bias": [[130, "step-5-correct-turbine-wind-directions-for-bias"], [131, "step-5-correct-turbine-wind-directions-for-bias"]], "Step 6: Deal with inter-turbine faults": [[130, "step-6-deal-with-inter-turbine-faults"], [131, "step-6-deal-with-inter-turbine-faults"]], "Step 7: Save the processed data": [[130, "step-7-save-the-processed-data"]], "Total Uplift Power Ratio": [[127, "total-uplift-power-ratio"]], "Using FlascDataFrame": [[134, "using-flascdataframe"]], "WETO software": [[136, "weto-software"]], "Wind-Up": [[127, "wind-up"]], "a_00_initial_download.py": [[126, "a-00-initial-download-py"]], "a_01_to_common_format_df.py": [[126, "a-01-to-common-format-df-py"]], "a_02_basic_filters.py": [[126, "a-02-basic-filters-py"]], "a_03_check_sensor_stuck_faults.py": [[126, "a-03-check-sensor-stuck-faults-py"]], "a_04_wspowercurve_filtering_code.py": [[126, "a-04-wspowercurve-filtering-code-py"]], "a_04_wspowercurve_filtering_gui.py (optional)": [[126, "a-04-wspowercurve-filtering-gui-py-optional"]], "a_05a_plot_faults_with_layout.py (optional)": [[126, "a-05a-plot-faults-with-layout-py-optional"]], "a_05b_cross_compare_wd_measurement_calibrations.py (optional)": [[126, "a-05b-cross-compare-wd-measurement-calibrations-py-optional"]], "a_06a_determine_timeshift_datasources.py (optional)": [[126, "a-06a-determine-timeshift-datasources-py-optional"]], "a_06b_apply_timeshift_dfs.py (optional)": [[126, "a-06b-apply-timeshift-dfs-py-optional"]], "a_07a_estimate_wd_bias_per_turbine.py": [[126, "a-07a-estimate-wd-bias-per-turbine-py"]], "a_07b_wd_bias_to_df.py": [[126, "a-07b-wd-bias-to-df-py"]], "a_08_plot_energy_ratios.py": [[126, "a-08-plot-energy-ratios-py"]], "flasc.analysis": [[0, null], [139, "flasc-analysis"]], "flasc.analysis.analysis_input": [[1, null]], "flasc.analysis.analysis_input.AnalysisInput": [[2, null]], "flasc.analysis.analysis_input.generate_block_list": [[3, null]], "flasc.analysis.energy_ratio": [[4, null]], "flasc.analysis.energy_ratio.compute_energy_ratio": [[5, null]], "flasc.analysis.energy_ratio_heterogeneity_mapper": [[6, null]], "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper": [[7, null]], "flasc.analysis.energy_ratio_input": [[8, null]], "flasc.analysis.energy_ratio_input.EnergyRatioInput": [[9, null]], "flasc.analysis.energy_ratio_output": [[10, null]], "flasc.analysis.energy_ratio_output.EnergyRatioOutput": [[11, null]], "flasc.analysis.expected_power_analysis": [[12, null]], "flasc.analysis.expected_power_analysis.total_uplift_expected_power": [[13, null]], "flasc.analysis.expected_power_analysis.total_uplift_expected_power_sweep_ws_min": [[14, null]], "flasc.analysis.expected_power_analysis_by": [[15, null]], "flasc.analysis.expected_power_analysis_by.total_uplift_expected_power_by_wd": [[16, null]], "flasc.analysis.expected_power_analysis_by.total_uplift_expected_power_by_wd_shift_ws_min": [[17, null]], "flasc.analysis.expected_power_analysis_by.total_uplift_expected_power_by_ws": [[18, null]], "flasc.analysis.expected_power_analysis_output": [[19, null]], "flasc.analysis.expected_power_analysis_output.ExpectedPowerAnalysisOutput": [[20, null]], "flasc.analysis.expected_power_analysis_utilities": [[21, null]], "flasc.analysis.total_uplift_power_ratio": [[22, null]], "flasc.analysis.total_uplift_power_ratio.compute_total_uplift": [[23, null]], "flasc.analysis.total_uplift_power_ratio.total_uplift_power_ratio": [[24, null]], "flasc.data_processing": [[25, null], [139, "flasc-data-processing"]], "flasc.data_processing.dataframe_manipulations": [[26, null]], "flasc.data_processing.dataframe_manipulations.df_drop_nan_rows": [[27, null]], "flasc.data_processing.dataframe_manipulations.df_find_and_fill_data_gaps_with_missing": [[28, null]], "flasc.data_processing.dataframe_manipulations.df_reduce_precision": [[29, null]], "flasc.data_processing.dataframe_manipulations.df_sort_and_find_duplicates": [[30, null]], "flasc.data_processing.dataframe_manipulations.df_sort_and_fix_duplicates": [[31, null]], "flasc.data_processing.dataframe_manipulations.filter_df_by_ti": [[32, null]], "flasc.data_processing.dataframe_manipulations.filter_df_by_wd": [[33, null]], "flasc.data_processing.dataframe_manipulations.filter_df_by_ws": [[34, null]], "flasc.data_processing.dataframe_manipulations.get_column_mean": [[35, null]], "flasc.data_processing.dataframe_manipulations.get_num_turbines": [[36, null]], "flasc.data_processing.dataframe_manipulations.is_day_or_night": [[37, null]], "flasc.data_processing.dataframe_manipulations.plot_sun_altitude_with_day_night_color": [[38, null]], "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_n_closest_upstream_turbines": [[39, null]], "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_turbines": [[40, null]], "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines": [[41, null]], "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines_in_radius": [[42, null]], "flasc.data_processing.dataframe_manipulations.set_ti_by_all_turbines": [[43, null]], "flasc.data_processing.dataframe_manipulations.set_ti_by_turbines": [[44, null]], "flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines": [[45, null]], "flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines_in_radius": [[46, null]], "flasc.data_processing.dataframe_manipulations.set_wd_by_all_turbines": [[47, null]], "flasc.data_processing.dataframe_manipulations.set_wd_by_radius_from_turbine": [[48, null]], "flasc.data_processing.dataframe_manipulations.set_wd_by_turbines": [[49, null]], "flasc.data_processing.dataframe_manipulations.set_wd_by_upstream_turbines": [[50, null]], "flasc.data_processing.dataframe_manipulations.set_wd_by_upstream_turbines_in_radius": [[51, null]], "flasc.data_processing.dataframe_manipulations.set_ws_by_all_turbines": [[52, null]], "flasc.data_processing.dataframe_manipulations.set_ws_by_n_closest_upstream_turbines": [[53, null]], "flasc.data_processing.dataframe_manipulations.set_ws_by_turbines": [[54, null]], "flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines": [[55, null]], "flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines_in_radius": [[56, null]], "flasc.data_processing.energy_ratio_wd_bias_estimation": [[57, null]], "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation": [[58, null]], "flasc.data_processing.filtering": [[59, null]], "flasc.data_processing.filtering.FlascFilter": [[60, null]], "flasc.data_processing.filtering.df_get_no_faulty_measurements": [[61, null]], "flasc.data_processing.filtering.df_mark_turbdata_as_faulty": [[62, null]], "flasc.data_processing.filtering.filter_df_by_faulty_impacting_turbines": [[63, null]], "flasc.data_processing.find_sensor_faults": [[64, null]], "flasc.data_processing.find_sensor_faults.find_sensor_stuck_faults": [[65, null]], "flasc.data_processing.northing_offset": [[66, null]], "flasc.data_processing.northing_offset.crosscheck_northing_offset_consistency": [[67, null]], "flasc.data_processing.northing_offset_change_hoger": [[68, null]], "flasc.data_processing.northing_offset_change_hoger.homogenize_hoger": [[69, null]], "flasc.data_processing.time_operations": [[70, null]], "flasc.data_processing.time_operations.df_downsample": [[71, null]], "flasc.data_processing.time_operations.df_movingaverage": [[72, null]], "flasc.data_processing.time_operations.df_resample_by_interpolation": [[73, null]], "flasc.data_processing.time_operations.flatten_cols": [[74, null]], "flasc.flasc_dataframe": [[75, null]], "flasc.flasc_dataframe.FlascDataFrame": [[76, null]], "flasc.utilities": [[77, null], [139, "flasc-utilities"]], "flasc.utilities.circular_statistics": [[78, null]], "flasc.utilities.circular_statistics.calc_wd_mean_radial": [[79, null]], "flasc.utilities.circular_statistics.calculate_wd_statistics": [[80, null]], "flasc.utilities.energy_ratio_utilities": [[81, null]], "flasc.utilities.energy_ratio_utilities.add_bin_weights": [[82, null]], "flasc.utilities.energy_ratio_utilities.add_power_ref": [[83, null]], "flasc.utilities.energy_ratio_utilities.add_power_test": [[84, null]], "flasc.utilities.energy_ratio_utilities.add_reflected_rows": [[85, null]], "flasc.utilities.energy_ratio_utilities.add_wd": [[86, null]], "flasc.utilities.energy_ratio_utilities.add_wd_bin": [[87, null]], "flasc.utilities.energy_ratio_utilities.add_ws": [[88, null]], "flasc.utilities.energy_ratio_utilities.add_ws_bin": [[89, null]], "flasc.utilities.energy_ratio_utilities.bin_and_group_dataframe": [[90, null]], "flasc.utilities.energy_ratio_utilities.bin_column": [[91, null]], "flasc.utilities.energy_ratio_utilities.check_compute_analysis_inputs": [[92, null]], "flasc.utilities.energy_ratio_utilities.cut": [[93, null]], "flasc.utilities.energy_ratio_utilities.filter_all_nulls": [[94, null]], "flasc.utilities.energy_ratio_utilities.filter_any_nulls": [[95, null]], "flasc.utilities.floris_tools": [[96, null]], "flasc.utilities.floris_tools.add_gaussian_blending_to_floris_approx_table": [[97, null]], "flasc.utilities.floris_tools.calc_floris_approx_table": [[98, null]], "flasc.utilities.floris_tools.estimate_ws_with_floris": [[99, null]], "flasc.utilities.floris_tools.get_all_dependent_turbines": [[100, null]], "flasc.utilities.floris_tools.get_all_impacting_turbines": [[101, null]], "flasc.utilities.floris_tools.get_all_impacting_turbines_geometrical": [[102, null]], "flasc.utilities.floris_tools.get_dependent_turbines_by_wd": [[103, null]], "flasc.utilities.floris_tools.get_turbs_in_radius": [[104, null]], "flasc.utilities.floris_tools.get_upstream_turbs_floris": [[105, null]], "flasc.utilities.floris_tools.interpolate_floris_from_df_approx": [[106, null]], "flasc.utilities.lookup_table_tools": [[107, null]], "flasc.utilities.lookup_table_tools.get_yaw_angles_interpolant": [[108, null]], "flasc.utilities.optimization": [[109, null]], "flasc.utilities.optimization.estimate_ti": [[110, null]], "flasc.utilities.optimization.find_timeshift_between_dfs": [[111, null]], "flasc.utilities.optimization.match_y_curves_by_offset": [[112, null]], "flasc.utilities.tuner_utilities": [[113, null]], "flasc.utilities.tuner_utilities.nested_get": [[114, null]], "flasc.utilities.tuner_utilities.nested_set": [[115, null]], "flasc.utilities.tuner_utilities.replicate_nan_values": [[116, null]], "flasc.utilities.tuner_utilities.resim_floris": [[117, null]], "flasc.utilities.utilities": [[118, null]], "flasc.utilities.utilities.estimate_dt": [[119, null]], "flasc.utilities.utilities.get_num_turbines": [[120, null]], "flasc.utilities.utilities.interp_with_max_gap": [[121, null]], "flasc.utilities.utilities_examples": [[122, null]], "flasc.utilities.utilities_examples.load_floris_artificial": [[123, null]], "flasc.utilities.utilities_examples.load_floris_smarteole": [[124, null]]}, "docnames": ["_autosummary/flasc.analysis", "_autosummary/flasc.analysis.analysis_input", "_autosummary/flasc.analysis.analysis_input.AnalysisInput", "_autosummary/flasc.analysis.analysis_input.generate_block_list", "_autosummary/flasc.analysis.energy_ratio", "_autosummary/flasc.analysis.energy_ratio.compute_energy_ratio", "_autosummary/flasc.analysis.energy_ratio_heterogeneity_mapper", "_autosummary/flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper", "_autosummary/flasc.analysis.energy_ratio_input", "_autosummary/flasc.analysis.energy_ratio_input.EnergyRatioInput", "_autosummary/flasc.analysis.energy_ratio_output", "_autosummary/flasc.analysis.energy_ratio_output.EnergyRatioOutput", "_autosummary/flasc.analysis.expected_power_analysis", "_autosummary/flasc.analysis.expected_power_analysis.total_uplift_expected_power", "_autosummary/flasc.analysis.expected_power_analysis.total_uplift_expected_power_sweep_ws_min", "_autosummary/flasc.analysis.expected_power_analysis_by", "_autosummary/flasc.analysis.expected_power_analysis_by.total_uplift_expected_power_by_wd", "_autosummary/flasc.analysis.expected_power_analysis_by.total_uplift_expected_power_by_wd_shift_ws_min", "_autosummary/flasc.analysis.expected_power_analysis_by.total_uplift_expected_power_by_ws", "_autosummary/flasc.analysis.expected_power_analysis_output", "_autosummary/flasc.analysis.expected_power_analysis_output.ExpectedPowerAnalysisOutput", "_autosummary/flasc.analysis.expected_power_analysis_utilities", "_autosummary/flasc.analysis.total_uplift_power_ratio", "_autosummary/flasc.analysis.total_uplift_power_ratio.compute_total_uplift", "_autosummary/flasc.analysis.total_uplift_power_ratio.total_uplift_power_ratio", "_autosummary/flasc.data_processing", "_autosummary/flasc.data_processing.dataframe_manipulations", "_autosummary/flasc.data_processing.dataframe_manipulations.df_drop_nan_rows", "_autosummary/flasc.data_processing.dataframe_manipulations.df_find_and_fill_data_gaps_with_missing", "_autosummary/flasc.data_processing.dataframe_manipulations.df_reduce_precision", "_autosummary/flasc.data_processing.dataframe_manipulations.df_sort_and_find_duplicates", "_autosummary/flasc.data_processing.dataframe_manipulations.df_sort_and_fix_duplicates", "_autosummary/flasc.data_processing.dataframe_manipulations.filter_df_by_ti", "_autosummary/flasc.data_processing.dataframe_manipulations.filter_df_by_wd", "_autosummary/flasc.data_processing.dataframe_manipulations.filter_df_by_ws", "_autosummary/flasc.data_processing.dataframe_manipulations.get_column_mean", "_autosummary/flasc.data_processing.dataframe_manipulations.get_num_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.is_day_or_night", "_autosummary/flasc.data_processing.dataframe_manipulations.plot_sun_altitude_with_day_night_color", "_autosummary/flasc.data_processing.dataframe_manipulations.set_pow_ref_by_n_closest_upstream_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_pow_ref_by_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines_in_radius", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ti_by_all_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ti_by_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines_in_radius", "_autosummary/flasc.data_processing.dataframe_manipulations.set_wd_by_all_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_wd_by_radius_from_turbine", "_autosummary/flasc.data_processing.dataframe_manipulations.set_wd_by_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_wd_by_upstream_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_wd_by_upstream_turbines_in_radius", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_all_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_n_closest_upstream_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines_in_radius", "_autosummary/flasc.data_processing.energy_ratio_wd_bias_estimation", "_autosummary/flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation", "_autosummary/flasc.data_processing.filtering", "_autosummary/flasc.data_processing.filtering.FlascFilter", "_autosummary/flasc.data_processing.filtering.df_get_no_faulty_measurements", "_autosummary/flasc.data_processing.filtering.df_mark_turbdata_as_faulty", "_autosummary/flasc.data_processing.filtering.filter_df_by_faulty_impacting_turbines", "_autosummary/flasc.data_processing.find_sensor_faults", "_autosummary/flasc.data_processing.find_sensor_faults.find_sensor_stuck_faults", "_autosummary/flasc.data_processing.northing_offset", "_autosummary/flasc.data_processing.northing_offset.crosscheck_northing_offset_consistency", "_autosummary/flasc.data_processing.northing_offset_change_hoger", "_autosummary/flasc.data_processing.northing_offset_change_hoger.homogenize_hoger", "_autosummary/flasc.data_processing.time_operations", "_autosummary/flasc.data_processing.time_operations.df_downsample", "_autosummary/flasc.data_processing.time_operations.df_movingaverage", "_autosummary/flasc.data_processing.time_operations.df_resample_by_interpolation", "_autosummary/flasc.data_processing.time_operations.flatten_cols", "_autosummary/flasc.flasc_dataframe", "_autosummary/flasc.flasc_dataframe.FlascDataFrame", "_autosummary/flasc.utilities", "_autosummary/flasc.utilities.circular_statistics", "_autosummary/flasc.utilities.circular_statistics.calc_wd_mean_radial", "_autosummary/flasc.utilities.circular_statistics.calculate_wd_statistics", "_autosummary/flasc.utilities.energy_ratio_utilities", "_autosummary/flasc.utilities.energy_ratio_utilities.add_bin_weights", "_autosummary/flasc.utilities.energy_ratio_utilities.add_power_ref", "_autosummary/flasc.utilities.energy_ratio_utilities.add_power_test", "_autosummary/flasc.utilities.energy_ratio_utilities.add_reflected_rows", "_autosummary/flasc.utilities.energy_ratio_utilities.add_wd", "_autosummary/flasc.utilities.energy_ratio_utilities.add_wd_bin", "_autosummary/flasc.utilities.energy_ratio_utilities.add_ws", "_autosummary/flasc.utilities.energy_ratio_utilities.add_ws_bin", "_autosummary/flasc.utilities.energy_ratio_utilities.bin_and_group_dataframe", "_autosummary/flasc.utilities.energy_ratio_utilities.bin_column", "_autosummary/flasc.utilities.energy_ratio_utilities.check_compute_analysis_inputs", "_autosummary/flasc.utilities.energy_ratio_utilities.cut", "_autosummary/flasc.utilities.energy_ratio_utilities.filter_all_nulls", "_autosummary/flasc.utilities.energy_ratio_utilities.filter_any_nulls", "_autosummary/flasc.utilities.floris_tools", "_autosummary/flasc.utilities.floris_tools.add_gaussian_blending_to_floris_approx_table", "_autosummary/flasc.utilities.floris_tools.calc_floris_approx_table", "_autosummary/flasc.utilities.floris_tools.estimate_ws_with_floris", "_autosummary/flasc.utilities.floris_tools.get_all_dependent_turbines", "_autosummary/flasc.utilities.floris_tools.get_all_impacting_turbines", "_autosummary/flasc.utilities.floris_tools.get_all_impacting_turbines_geometrical", "_autosummary/flasc.utilities.floris_tools.get_dependent_turbines_by_wd", "_autosummary/flasc.utilities.floris_tools.get_turbs_in_radius", "_autosummary/flasc.utilities.floris_tools.get_upstream_turbs_floris", "_autosummary/flasc.utilities.floris_tools.interpolate_floris_from_df_approx", "_autosummary/flasc.utilities.lookup_table_tools", "_autosummary/flasc.utilities.lookup_table_tools.get_yaw_angles_interpolant", "_autosummary/flasc.utilities.optimization", "_autosummary/flasc.utilities.optimization.estimate_ti", "_autosummary/flasc.utilities.optimization.find_timeshift_between_dfs", "_autosummary/flasc.utilities.optimization.match_y_curves_by_offset", "_autosummary/flasc.utilities.tuner_utilities", "_autosummary/flasc.utilities.tuner_utilities.nested_get", "_autosummary/flasc.utilities.tuner_utilities.nested_set", "_autosummary/flasc.utilities.tuner_utilities.replicate_nan_values", "_autosummary/flasc.utilities.tuner_utilities.resim_floris", "_autosummary/flasc.utilities.utilities", "_autosummary/flasc.utilities.utilities.estimate_dt", "_autosummary/flasc.utilities.utilities.get_num_turbines", "_autosummary/flasc.utilities.utilities.interp_with_max_gap", "_autosummary/flasc.utilities.utilities_examples", "_autosummary/flasc.utilities.utilities_examples.load_floris_artificial", "_autosummary/flasc.utilities.utilities_examples.load_floris_smarteole", "api", "data_processing", "energy_change", "energy_ratio", "examples/01_raw_data_processing/00_filter_ws_power_curves", "examples/01_raw_data_processing/01_northing_calibration", "examples/01_raw_data_processing/03_northing_calibration_hoger", "examples/03_energy_ratio/00_demo_energy_ratio_syntax", "examples/03_energy_ratio/01_demo_energy_ratio_options", "flasc_data_format", "getting_started", "index", "installation", "licensing", "overview"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/flasc.analysis.rst", "_autosummary/flasc.analysis.analysis_input.rst", "_autosummary/flasc.analysis.analysis_input.AnalysisInput.rst", "_autosummary/flasc.analysis.analysis_input.generate_block_list.rst", "_autosummary/flasc.analysis.energy_ratio.rst", "_autosummary/flasc.analysis.energy_ratio.compute_energy_ratio.rst", "_autosummary/flasc.analysis.energy_ratio_heterogeneity_mapper.rst", "_autosummary/flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.rst", "_autosummary/flasc.analysis.energy_ratio_input.rst", "_autosummary/flasc.analysis.energy_ratio_input.EnergyRatioInput.rst", "_autosummary/flasc.analysis.energy_ratio_output.rst", "_autosummary/flasc.analysis.energy_ratio_output.EnergyRatioOutput.rst", "_autosummary/flasc.analysis.expected_power_analysis.rst", "_autosummary/flasc.analysis.expected_power_analysis.total_uplift_expected_power.rst", "_autosummary/flasc.analysis.expected_power_analysis.total_uplift_expected_power_sweep_ws_min.rst", "_autosummary/flasc.analysis.expected_power_analysis_by.rst", "_autosummary/flasc.analysis.expected_power_analysis_by.total_uplift_expected_power_by_wd.rst", "_autosummary/flasc.analysis.expected_power_analysis_by.total_uplift_expected_power_by_wd_shift_ws_min.rst", "_autosummary/flasc.analysis.expected_power_analysis_by.total_uplift_expected_power_by_ws.rst", "_autosummary/flasc.analysis.expected_power_analysis_output.rst", "_autosummary/flasc.analysis.expected_power_analysis_output.ExpectedPowerAnalysisOutput.rst", "_autosummary/flasc.analysis.expected_power_analysis_utilities.rst", "_autosummary/flasc.analysis.total_uplift_power_ratio.rst", "_autosummary/flasc.analysis.total_uplift_power_ratio.compute_total_uplift.rst", "_autosummary/flasc.analysis.total_uplift_power_ratio.total_uplift_power_ratio.rst", "_autosummary/flasc.data_processing.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.df_drop_nan_rows.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.df_find_and_fill_data_gaps_with_missing.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.df_reduce_precision.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.df_sort_and_find_duplicates.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.df_sort_and_fix_duplicates.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.filter_df_by_ti.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.filter_df_by_wd.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.filter_df_by_ws.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.get_column_mean.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.get_num_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.is_day_or_night.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.plot_sun_altitude_with_day_night_color.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_pow_ref_by_n_closest_upstream_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_pow_ref_by_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines_in_radius.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ti_by_all_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ti_by_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines_in_radius.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_wd_by_all_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_wd_by_radius_from_turbine.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_wd_by_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_wd_by_upstream_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_wd_by_upstream_turbines_in_radius.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_all_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_n_closest_upstream_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines_in_radius.rst", "_autosummary/flasc.data_processing.energy_ratio_wd_bias_estimation.rst", "_autosummary/flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation.rst", "_autosummary/flasc.data_processing.filtering.rst", "_autosummary/flasc.data_processing.filtering.FlascFilter.rst", "_autosummary/flasc.data_processing.filtering.df_get_no_faulty_measurements.rst", "_autosummary/flasc.data_processing.filtering.df_mark_turbdata_as_faulty.rst", "_autosummary/flasc.data_processing.filtering.filter_df_by_faulty_impacting_turbines.rst", "_autosummary/flasc.data_processing.find_sensor_faults.rst", "_autosummary/flasc.data_processing.find_sensor_faults.find_sensor_stuck_faults.rst", "_autosummary/flasc.data_processing.northing_offset.rst", "_autosummary/flasc.data_processing.northing_offset.crosscheck_northing_offset_consistency.rst", "_autosummary/flasc.data_processing.northing_offset_change_hoger.rst", "_autosummary/flasc.data_processing.northing_offset_change_hoger.homogenize_hoger.rst", "_autosummary/flasc.data_processing.time_operations.rst", "_autosummary/flasc.data_processing.time_operations.df_downsample.rst", "_autosummary/flasc.data_processing.time_operations.df_movingaverage.rst", "_autosummary/flasc.data_processing.time_operations.df_resample_by_interpolation.rst", "_autosummary/flasc.data_processing.time_operations.flatten_cols.rst", "_autosummary/flasc.flasc_dataframe.rst", "_autosummary/flasc.flasc_dataframe.FlascDataFrame.rst", "_autosummary/flasc.utilities.rst", "_autosummary/flasc.utilities.circular_statistics.rst", "_autosummary/flasc.utilities.circular_statistics.calc_wd_mean_radial.rst", "_autosummary/flasc.utilities.circular_statistics.calculate_wd_statistics.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.add_bin_weights.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.add_power_ref.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.add_power_test.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.add_reflected_rows.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.add_wd.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.add_wd_bin.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.add_ws.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.add_ws_bin.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.bin_and_group_dataframe.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.bin_column.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.check_compute_analysis_inputs.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.cut.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.filter_all_nulls.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.filter_any_nulls.rst", "_autosummary/flasc.utilities.floris_tools.rst", "_autosummary/flasc.utilities.floris_tools.add_gaussian_blending_to_floris_approx_table.rst", "_autosummary/flasc.utilities.floris_tools.calc_floris_approx_table.rst", "_autosummary/flasc.utilities.floris_tools.estimate_ws_with_floris.rst", "_autosummary/flasc.utilities.floris_tools.get_all_dependent_turbines.rst", "_autosummary/flasc.utilities.floris_tools.get_all_impacting_turbines.rst", "_autosummary/flasc.utilities.floris_tools.get_all_impacting_turbines_geometrical.rst", "_autosummary/flasc.utilities.floris_tools.get_dependent_turbines_by_wd.rst", "_autosummary/flasc.utilities.floris_tools.get_turbs_in_radius.rst", "_autosummary/flasc.utilities.floris_tools.get_upstream_turbs_floris.rst", "_autosummary/flasc.utilities.floris_tools.interpolate_floris_from_df_approx.rst", "_autosummary/flasc.utilities.lookup_table_tools.rst", "_autosummary/flasc.utilities.lookup_table_tools.get_yaw_angles_interpolant.rst", "_autosummary/flasc.utilities.optimization.rst", "_autosummary/flasc.utilities.optimization.estimate_ti.rst", "_autosummary/flasc.utilities.optimization.find_timeshift_between_dfs.rst", "_autosummary/flasc.utilities.optimization.match_y_curves_by_offset.rst", "_autosummary/flasc.utilities.tuner_utilities.rst", "_autosummary/flasc.utilities.tuner_utilities.nested_get.rst", "_autosummary/flasc.utilities.tuner_utilities.nested_set.rst", "_autosummary/flasc.utilities.tuner_utilities.replicate_nan_values.rst", "_autosummary/flasc.utilities.tuner_utilities.resim_floris.rst", "_autosummary/flasc.utilities.utilities.rst", "_autosummary/flasc.utilities.utilities.estimate_dt.rst", "_autosummary/flasc.utilities.utilities.get_num_turbines.rst", "_autosummary/flasc.utilities.utilities.interp_with_max_gap.rst", "_autosummary/flasc.utilities.utilities_examples.rst", "_autosummary/flasc.utilities.utilities_examples.load_floris_artificial.rst", "_autosummary/flasc.utilities.utilities_examples.load_floris_smarteole.rst", "api.rst", "data_processing.rst", "energy_change.md", "energy_ratio.md", "examples/01_raw_data_processing/00_filter_ws_power_curves.ipynb", "examples/01_raw_data_processing/01_northing_calibration.ipynb", "examples/01_raw_data_processing/03_northing_calibration_hoger.ipynb", "examples/03_energy_ratio/00_demo_energy_ratio_syntax.ipynb", "examples/03_energy_ratio/01_demo_energy_ratio_options.ipynb", "flasc_data_format.ipynb", "getting_started.md", "index.md", "installation.md", "licensing.rst", "overview.md"], "indexentries": {"_add_wd_ws_bins() (in module flasc.analysis.expected_power_analysis_utilities)": [[21, "flasc.analysis.expected_power_analysis_utilities._add_wd_ws_bins", false]], "_attrs (flasc.flasc_dataframe.flascdataframe attribute)": [[76, "flasc.flasc_dataframe.FlascDataFrame._attrs", false]], "_bin_and_group_dataframe_expected_power() (in module flasc.analysis.expected_power_analysis_utilities)": [[21, "flasc.analysis.expected_power_analysis_utilities._bin_and_group_dataframe_expected_power", false]], "_cache (flasc.flasc_dataframe.flascdataframe attribute)": [[76, "flasc.flasc_dataframe.FlascDataFrame._cache", false]], "_compute_covariance() (in module flasc.analysis.expected_power_analysis_utilities)": [[21, "flasc.analysis.expected_power_analysis_utilities._compute_covariance", false]], "_compute_energy_ratio_bootstrap() (in module flasc.analysis.energy_ratio)": [[4, "flasc.analysis.energy_ratio._compute_energy_ratio_bootstrap", false]], "_compute_energy_ratio_single() (in module flasc.analysis.energy_ratio)": [[4, "flasc.analysis.energy_ratio._compute_energy_ratio_single", false]], "_compute_ws_counts() (flasc.analysis.energy_ratio_output.energyratiooutput method)": [[10, "flasc.analysis.energy_ratio_output.EnergyRatioOutput._compute_ws_counts", false], [11, "flasc.analysis.energy_ratio_output.EnergyRatioOutput._compute_ws_counts", false]], "_constructor (flasc.flasc_dataframe.flascdataframe property)": [[75, "flasc.flasc_dataframe.FlascDataFrame._constructor", false], [76, "flasc.flasc_dataframe.FlascDataFrame._constructor", false]], "_convert_long_to_wide() (flasc.flasc_dataframe.flascdataframe method)": [[75, "flasc.flasc_dataframe.FlascDataFrame._convert_long_to_wide", false], [76, "flasc.flasc_dataframe.FlascDataFrame._convert_long_to_wide", false]], "_convert_wide_to_long() (flasc.flasc_dataframe.flascdataframe method)": [[75, "flasc.flasc_dataframe.FlascDataFrame._convert_wide_to_long", false], [76, "flasc.flasc_dataframe.FlascDataFrame._convert_wide_to_long", false]], "_discretize() (in module flasc.data_processing.northing_offset_change_hoger)": [[68, "flasc.data_processing.northing_offset_change_hoger._discretize", false]], "_fi_set_ws_wd_ti() (in module flasc.utilities.floris_tools)": [[96, "flasc.utilities.floris_tools._fi_set_ws_wd_ti", false]], "_fill_cov_with_var() (in module flasc.analysis.expected_power_analysis_utilities)": [[21, "flasc.analysis.expected_power_analysis_utilities._fill_cov_with_var", false]], "_find_sensor_stuck_single_timearray() (in module flasc.data_processing.find_sensor_faults)": [[64, "flasc.data_processing.find_sensor_faults._find_sensor_stuck_single_timearray", false]], "_get_all_unique_flags() (flasc.data_processing.filtering.flascfilter method)": [[59, "flasc.data_processing.filtering.FlascFilter._get_all_unique_flags", false], [60, "flasc.data_processing.filtering.FlascFilter._get_all_unique_flags", false]], "_get_energy_ratio() (in module flasc.analysis.energy_ratio_heterogeneity_mapper)": [[6, "flasc.analysis.energy_ratio_heterogeneity_mapper._get_energy_ratio", false]], "_get_energy_ratios_allbins() (flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation method)": [[57, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation._get_energy_ratios_allbins", false], [58, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation._get_energy_ratios_allbins", false]], "_get_leaves_and_knots() (in module flasc.data_processing.northing_offset_change_hoger)": [[68, "flasc.data_processing.northing_offset_change_hoger._get_leaves_and_knots", false]], "_get_mean_power_curves() (flasc.data_processing.filtering.flascfilter method)": [[59, "flasc.data_processing.filtering.FlascFilter._get_mean_power_curves", false], [60, "flasc.data_processing.filtering.FlascFilter._get_mean_power_curves", false]], "_get_num_points_pair() (in module flasc.analysis.expected_power_analysis_utilities)": [[21, "flasc.analysis.expected_power_analysis_utilities._get_num_points_pair", false]], "_interpolate_with_max_gap() (in module flasc.utilities.utilities)": [[118, "flasc.utilities.utilities._interpolate_with_max_gap", false]], "_load_a_input_for_wd_bias() (flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation method)": [[57, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation._load_a_input_for_wd_bias", false], [58, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation._load_a_input_for_wd_bias", false]], "_metadata (flasc.flasc_dataframe.flascdataframe attribute)": [[75, "flasc.flasc_dataframe.FlascDataFrame._metadata", false], [76, "flasc.flasc_dataframe.FlascDataFrame._metadata", false]], "_mgr (flasc.flasc_dataframe.flascdataframe attribute)": [[76, "flasc.flasc_dataframe.FlascDataFrame._mgr", false]], "_plot_regression() (in module flasc.data_processing.northing_offset_change_hoger)": [[68, "flasc.data_processing.northing_offset_change_hoger._plot_regression", false]], "_plot_top_sensor_faults() (in module flasc.data_processing.find_sensor_faults)": [[64, "flasc.data_processing.find_sensor_faults._plot_top_sensor_faults", false]], "_process_single_wd() (flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper method)": [[6, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper._process_single_wd", false], [7, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper._process_single_wd", false]], "_repr_html_() (flasc.flasc_dataframe.flascdataframe method)": [[75, "flasc.flasc_dataframe.FlascDataFrame._repr_html_", false], [76, "flasc.flasc_dataframe.FlascDataFrame._repr_html_", false]], "_reset_mean_power_curves() (flasc.data_processing.filtering.flascfilter method)": [[59, "flasc.data_processing.filtering.FlascFilter._reset_mean_power_curves", false], [60, "flasc.data_processing.filtering.FlascFilter._reset_mean_power_curves", false]], "_return_uplift_string() (flasc.analysis.expected_power_analysis_output.expectedpoweranalysisoutput method)": [[19, "flasc.analysis.expected_power_analysis_output.ExpectedPowerAnalysisOutput._return_uplift_string", false], [20, "flasc.analysis.expected_power_analysis_output.ExpectedPowerAnalysisOutput._return_uplift_string", false]], "_set_col_by_n_closest_upstream_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations._set_col_by_n_closest_upstream_turbines", false]], "_set_col_by_radius_from_turbine() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations._set_col_by_radius_from_turbine", false]], "_set_col_by_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations._set_col_by_turbines", false]], "_set_col_by_upstream_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations._set_col_by_upstream_turbines", false]], "_set_col_by_upstream_turbines_in_radius() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations._set_col_by_upstream_turbines_in_radius", false]], "_set_cov_to_zero() (in module flasc.analysis.expected_power_analysis_utilities)": [[21, "flasc.analysis.expected_power_analysis_utilities._set_cov_to_zero", false]], "_set_legend_alpha_to_one() (flasc.data_processing.filtering.flascfilter method)": [[59, "flasc.data_processing.filtering.FlascFilter._set_legend_alpha_to_one", false], [60, "flasc.data_processing.filtering.FlascFilter._set_legend_alpha_to_one", false]], "_shorth_mode() (in module flasc.data_processing.northing_offset_change_hoger)": [[68, "flasc.data_processing.northing_offset_change_hoger._shorth_mode", false]], "_synchronize_nulls() (in module flasc.analysis.expected_power_analysis_utilities)": [[21, "flasc.analysis.expected_power_analysis_utilities._synchronize_nulls", false]], "_synchronize_var_nulls_back_to_mean() (in module flasc.analysis.expected_power_analysis_utilities)": [[21, "flasc.analysis.expected_power_analysis_utilities._synchronize_var_nulls_back_to_mean", false]], "_total_uplift_expected_power_by_ (class in flasc.analysis.expected_power_analysis_by)": [[15, "flasc.analysis.expected_power_analysis_by._total_uplift_expected_power_by_", false]], "_total_uplift_expected_power_single() (in module flasc.analysis.expected_power_analysis)": [[12, "flasc.analysis.expected_power_analysis._total_uplift_expected_power_single", false]], "_total_uplift_expected_power_with_bootstrapping() (in module flasc.analysis.expected_power_analysis)": [[12, "flasc.analysis.expected_power_analysis._total_uplift_expected_power_with_bootstrapping", false]], "_total_uplift_expected_power_with_standard_error() (in module flasc.analysis.expected_power_analysis)": [[12, "flasc.analysis.expected_power_analysis._total_uplift_expected_power_with_standard_error", false]], "_total_uplift_power_ratio_bootstrap() (in module flasc.analysis.total_uplift_power_ratio)": [[22, "flasc.analysis.total_uplift_power_ratio._total_uplift_power_ratio_bootstrap", false]], "_total_uplift_power_ratio_single() (in module flasc.analysis.total_uplift_power_ratio)": [[22, "flasc.analysis.total_uplift_power_ratio._total_uplift_power_ratio_single", false]], "add_bin_weights() (in module flasc.utilities.energy_ratio_utilities)": [[81, "flasc.utilities.energy_ratio_utilities.add_bin_weights", false], [82, "flasc.utilities.energy_ratio_utilities.add_bin_weights", false]], "add_gaussian_blending_to_floris_approx_table() (in module flasc.utilities.floris_tools)": [[96, "flasc.utilities.floris_tools.add_gaussian_blending_to_floris_approx_table", false], [97, "flasc.utilities.floris_tools.add_gaussian_blending_to_floris_approx_table", false]], "add_power_ref() (in module flasc.utilities.energy_ratio_utilities)": [[81, "flasc.utilities.energy_ratio_utilities.add_power_ref", false], [83, "flasc.utilities.energy_ratio_utilities.add_power_ref", false]], "add_power_test() (in module flasc.utilities.energy_ratio_utilities)": [[81, "flasc.utilities.energy_ratio_utilities.add_power_test", false], [84, "flasc.utilities.energy_ratio_utilities.add_power_test", false]], "add_reflected_rows() (in module flasc.utilities.energy_ratio_utilities)": [[81, "flasc.utilities.energy_ratio_utilities.add_reflected_rows", false], [85, "flasc.utilities.energy_ratio_utilities.add_reflected_rows", false]], "add_wd() (in module flasc.utilities.energy_ratio_utilities)": [[81, "flasc.utilities.energy_ratio_utilities.add_wd", false], [86, "flasc.utilities.energy_ratio_utilities.add_wd", false]], "add_wd_bin() (in module flasc.utilities.energy_ratio_utilities)": [[81, "flasc.utilities.energy_ratio_utilities.add_wd_bin", false], [87, "flasc.utilities.energy_ratio_utilities.add_wd_bin", false]], "add_ws() (in module flasc.utilities.energy_ratio_utilities)": [[81, "flasc.utilities.energy_ratio_utilities.add_ws", false], [88, "flasc.utilities.energy_ratio_utilities.add_ws", false]], "add_ws_bin() (in module flasc.utilities.energy_ratio_utilities)": [[81, "flasc.utilities.energy_ratio_utilities.add_ws_bin", false], [89, "flasc.utilities.energy_ratio_utilities.add_ws_bin", false]], "analysisinput (class in flasc.analysis.analysis_input)": [[1, "flasc.analysis.analysis_input.AnalysisInput", false], [2, "flasc.analysis.analysis_input.AnalysisInput", false]], "bias_estimation (class in flasc.data_processing.energy_ratio_wd_bias_estimation)": [[57, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation", false], [58, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation", false]], "bin_and_group_dataframe() (in module flasc.utilities.energy_ratio_utilities)": [[81, "flasc.utilities.energy_ratio_utilities.bin_and_group_dataframe", false], [90, "flasc.utilities.energy_ratio_utilities.bin_and_group_dataframe", false]], "bin_column() (in module flasc.utilities.energy_ratio_utilities)": [[81, "flasc.utilities.energy_ratio_utilities.bin_column", false], [91, "flasc.utilities.energy_ratio_utilities.bin_column", false]], "calc_floris_approx_table() (in module flasc.utilities.floris_tools)": [[96, "flasc.utilities.floris_tools.calc_floris_approx_table", false], [98, "flasc.utilities.floris_tools.calc_floris_approx_table", false]], "calc_wd_mean_radial() (in module flasc.utilities.circular_statistics)": [[78, "flasc.utilities.circular_statistics.calc_wd_mean_radial", false], [79, "flasc.utilities.circular_statistics.calc_wd_mean_radial", false]], "calculate_baseline() (flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation method)": [[57, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation.calculate_baseline", false], [58, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation.calculate_baseline", false]], "calculate_wd_statistics() (in module flasc.utilities.circular_statistics)": [[78, "flasc.utilities.circular_statistics.calculate_wd_statistics", false], [80, "flasc.utilities.circular_statistics.calculate_wd_statistics", false]], "check_compute_analysis_inputs() (in module flasc.utilities.energy_ratio_utilities)": [[81, "flasc.utilities.energy_ratio_utilities.check_compute_analysis_inputs", false], [92, "flasc.utilities.energy_ratio_utilities.check_compute_analysis_inputs", false]], "check_flasc_format() (flasc.flasc_dataframe.flascdataframe method)": [[75, "flasc.flasc_dataframe.FlascDataFrame.check_flasc_format", false], [76, "flasc.flasc_dataframe.FlascDataFrame.check_flasc_format", false]], "compute_energy_ratio() (in module flasc.analysis.energy_ratio)": [[4, "flasc.analysis.energy_ratio.compute_energy_ratio", false], [5, "flasc.analysis.energy_ratio.compute_energy_ratio", false]], "compute_total_uplift() (in module flasc.analysis.total_uplift_power_ratio)": [[22, "flasc.analysis.total_uplift_power_ratio.compute_total_uplift", false], [23, "flasc.analysis.total_uplift_power_ratio.compute_total_uplift", false]], "convert_time_to_datetime() (flasc.flasc_dataframe.flascdataframe method)": [[75, "flasc.flasc_dataframe.FlascDataFrame.convert_time_to_datetime", false], [76, "flasc.flasc_dataframe.FlascDataFrame.convert_time_to_datetime", false]], "convert_to_flasc_format() (flasc.flasc_dataframe.flascdataframe method)": [[75, "flasc.flasc_dataframe.FlascDataFrame.convert_to_flasc_format", false], [76, "flasc.flasc_dataframe.FlascDataFrame.convert_to_flasc_format", false]], "convert_to_user_format() (flasc.flasc_dataframe.flascdataframe method)": [[75, "flasc.flasc_dataframe.FlascDataFrame.convert_to_user_format", false], [76, "flasc.flasc_dataframe.FlascDataFrame.convert_to_user_format", false]], "copy_metadata() (flasc.flasc_dataframe.flascdataframe method)": [[75, "flasc.flasc_dataframe.FlascDataFrame.copy_metadata", false], [76, "flasc.flasc_dataframe.FlascDataFrame.copy_metadata", false]], "crosscheck_northing_offset_consistency() (in module flasc.data_processing.northing_offset)": [[66, "flasc.data_processing.northing_offset.crosscheck_northing_offset_consistency", false], [67, "flasc.data_processing.northing_offset.crosscheck_northing_offset_consistency", false]], "cut() (in module flasc.utilities.energy_ratio_utilities)": [[81, "flasc.utilities.energy_ratio_utilities.cut", false], [93, "flasc.utilities.energy_ratio_utilities.cut", false]], "df_downsample() (in module flasc.data_processing.time_operations)": [[70, "flasc.data_processing.time_operations.df_downsample", false], [71, "flasc.data_processing.time_operations.df_downsample", false]], "df_drop_nan_rows() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.df_drop_nan_rows", false], [27, "flasc.data_processing.dataframe_manipulations.df_drop_nan_rows", false]], "df_find_and_fill_data_gaps_with_missing() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.df_find_and_fill_data_gaps_with_missing", false], [28, "flasc.data_processing.dataframe_manipulations.df_find_and_fill_data_gaps_with_missing", false]], "df_get_no_faulty_measurements() (in module flasc.data_processing.filtering)": [[59, "flasc.data_processing.filtering.df_get_no_faulty_measurements", false], [61, "flasc.data_processing.filtering.df_get_no_faulty_measurements", false]], "df_mark_turbdata_as_faulty() (in module flasc.data_processing.filtering)": [[59, "flasc.data_processing.filtering.df_mark_turbdata_as_faulty", false], [62, "flasc.data_processing.filtering.df_mark_turbdata_as_faulty", false]], "df_movingaverage() (in module flasc.data_processing.time_operations)": [[70, "flasc.data_processing.time_operations.df_movingaverage", false], [72, "flasc.data_processing.time_operations.df_movingaverage", false]], "df_reduce_precision() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.df_reduce_precision", false], [29, "flasc.data_processing.dataframe_manipulations.df_reduce_precision", false]], "df_resample_by_interpolation() (in module flasc.data_processing.time_operations)": [[70, "flasc.data_processing.time_operations.df_resample_by_interpolation", false], [73, "flasc.data_processing.time_operations.df_resample_by_interpolation", false]], "df_sort_and_find_duplicates() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.df_sort_and_find_duplicates", false], [30, "flasc.data_processing.dataframe_manipulations.df_sort_and_find_duplicates", false]], "df_sort_and_fix_duplicates() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.df_sort_and_fix_duplicates", false], [31, "flasc.data_processing.dataframe_manipulations.df_sort_and_fix_duplicates", false]], "energyratioinput (class in flasc.analysis.energy_ratio_input)": [[8, "flasc.analysis.energy_ratio_input.EnergyRatioInput", false], [9, "flasc.analysis.energy_ratio_input.EnergyRatioInput", false]], "energyratiooutput (class in flasc.analysis.energy_ratio_output)": [[10, "flasc.analysis.energy_ratio_output.EnergyRatioOutput", false], [11, "flasc.analysis.energy_ratio_output.EnergyRatioOutput", false]], "estimate_dt() (in module flasc.utilities.utilities)": [[118, "flasc.utilities.utilities.estimate_dt", false], [119, "flasc.utilities.utilities.estimate_dt", false]], "estimate_heterogeneity() (flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper method)": [[6, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.estimate_heterogeneity", false], [7, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.estimate_heterogeneity", false]], "estimate_ti() (in module flasc.utilities.optimization)": [[109, "flasc.utilities.optimization.estimate_ti", false], [110, "flasc.utilities.optimization.estimate_ti", false]], "estimate_wd_bias() (flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation method)": [[57, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation.estimate_wd_bias", false], [58, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation.estimate_wd_bias", false]], "estimate_ws_with_floris() (in module flasc.utilities.floris_tools)": [[96, "flasc.utilities.floris_tools.estimate_ws_with_floris", false], [99, "flasc.utilities.floris_tools.estimate_ws_with_floris", false]], "expectedpoweranalysisoutput (class in flasc.analysis.expected_power_analysis_output)": [[19, "flasc.analysis.expected_power_analysis_output.ExpectedPowerAnalysisOutput", false], [20, "flasc.analysis.expected_power_analysis_output.ExpectedPowerAnalysisOutput", false]], "export_to_windup_format() (flasc.flasc_dataframe.flascdataframe method)": [[75, "flasc.flasc_dataframe.FlascDataFrame.export_to_windup_format", false], [76, "flasc.flasc_dataframe.FlascDataFrame.export_to_windup_format", false]], "filter_all_nulls() (in module flasc.utilities.energy_ratio_utilities)": [[81, "flasc.utilities.energy_ratio_utilities.filter_all_nulls", false], [94, "flasc.utilities.energy_ratio_utilities.filter_all_nulls", false]], "filter_any_nulls() (in module flasc.utilities.energy_ratio_utilities)": [[81, "flasc.utilities.energy_ratio_utilities.filter_any_nulls", false], [95, "flasc.utilities.energy_ratio_utilities.filter_any_nulls", false]], "filter_by_condition() (flasc.data_processing.filtering.flascfilter method)": [[59, "flasc.data_processing.filtering.FlascFilter.filter_by_condition", false], [60, "flasc.data_processing.filtering.FlascFilter.filter_by_condition", false]], "filter_by_floris_power_curve() (flasc.data_processing.filtering.flascfilter method)": [[59, "flasc.data_processing.filtering.FlascFilter.filter_by_floris_power_curve", false], [60, "flasc.data_processing.filtering.FlascFilter.filter_by_floris_power_curve", false]], "filter_by_power_curve() (flasc.data_processing.filtering.flascfilter method)": [[59, "flasc.data_processing.filtering.FlascFilter.filter_by_power_curve", false], [60, "flasc.data_processing.filtering.FlascFilter.filter_by_power_curve", false]], "filter_by_sensor_stuck_faults() (flasc.data_processing.filtering.flascfilter method)": [[59, "flasc.data_processing.filtering.FlascFilter.filter_by_sensor_stuck_faults", false], [60, "flasc.data_processing.filtering.FlascFilter.filter_by_sensor_stuck_faults", false]], "filter_df_by_faulty_impacting_turbines() (in module flasc.data_processing.filtering)": [[59, "flasc.data_processing.filtering.filter_df_by_faulty_impacting_turbines", false], [63, "flasc.data_processing.filtering.filter_df_by_faulty_impacting_turbines", false]], "filter_df_by_ti() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.filter_df_by_ti", false], [32, "flasc.data_processing.dataframe_manipulations.filter_df_by_ti", false]], "filter_df_by_wd() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.filter_df_by_wd", false], [33, "flasc.data_processing.dataframe_manipulations.filter_df_by_wd", false]], "filter_df_by_ws() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.filter_df_by_ws", false], [34, "flasc.data_processing.dataframe_manipulations.filter_df_by_ws", false]], "find_sensor_stuck_faults() (in module flasc.data_processing.find_sensor_faults)": [[64, "flasc.data_processing.find_sensor_faults.find_sensor_stuck_faults", false], [65, "flasc.data_processing.find_sensor_faults.find_sensor_stuck_faults", false]], "find_timeshift_between_dfs() (in module flasc.utilities.optimization)": [[109, "flasc.utilities.optimization.find_timeshift_between_dfs", false], [111, "flasc.utilities.optimization.find_timeshift_between_dfs", false]], "flasc.analysis": [[0, "module-flasc.analysis", false]], "flasc.analysis.analysis_input": [[1, "module-flasc.analysis.analysis_input", false]], "flasc.analysis.energy_ratio": [[4, "module-flasc.analysis.energy_ratio", false]], "flasc.analysis.energy_ratio_heterogeneity_mapper": [[6, "module-flasc.analysis.energy_ratio_heterogeneity_mapper", false]], "flasc.analysis.energy_ratio_input": [[8, "module-flasc.analysis.energy_ratio_input", false]], "flasc.analysis.energy_ratio_output": [[10, "module-flasc.analysis.energy_ratio_output", false]], "flasc.analysis.expected_power_analysis": [[12, "module-flasc.analysis.expected_power_analysis", false]], "flasc.analysis.expected_power_analysis_by": [[15, "module-flasc.analysis.expected_power_analysis_by", false]], "flasc.analysis.expected_power_analysis_output": [[19, "module-flasc.analysis.expected_power_analysis_output", false]], "flasc.analysis.expected_power_analysis_utilities": [[21, "module-flasc.analysis.expected_power_analysis_utilities", false]], "flasc.analysis.total_uplift_power_ratio": [[22, "module-flasc.analysis.total_uplift_power_ratio", false]], "flasc.data_processing": [[25, "module-flasc.data_processing", false]], "flasc.data_processing.dataframe_manipulations": [[26, "module-flasc.data_processing.dataframe_manipulations", false]], "flasc.data_processing.energy_ratio_wd_bias_estimation": [[57, "module-flasc.data_processing.energy_ratio_wd_bias_estimation", false]], "flasc.data_processing.filtering": [[59, "module-flasc.data_processing.filtering", false]], "flasc.data_processing.find_sensor_faults": [[64, "module-flasc.data_processing.find_sensor_faults", false]], "flasc.data_processing.northing_offset": [[66, "module-flasc.data_processing.northing_offset", false]], "flasc.data_processing.northing_offset_change_hoger": [[68, "module-flasc.data_processing.northing_offset_change_hoger", false]], "flasc.data_processing.time_operations": [[70, "module-flasc.data_processing.time_operations", false]], "flasc.flasc_dataframe": [[75, "module-flasc.flasc_dataframe", false]], "flasc.utilities": [[77, "module-flasc.utilities", false]], "flasc.utilities.circular_statistics": [[78, "module-flasc.utilities.circular_statistics", false]], "flasc.utilities.energy_ratio_utilities": [[81, "module-flasc.utilities.energy_ratio_utilities", false]], "flasc.utilities.floris_tools": [[96, "module-flasc.utilities.floris_tools", false]], "flasc.utilities.lookup_table_tools": [[107, "module-flasc.utilities.lookup_table_tools", false]], "flasc.utilities.optimization": [[109, "module-flasc.utilities.optimization", false]], "flasc.utilities.tuner_utilities": [[113, "module-flasc.utilities.tuner_utilities", false]], "flasc.utilities.utilities": [[118, "module-flasc.utilities.utilities", false]], "flasc.utilities.utilities_examples": [[122, "module-flasc.utilities.utilities_examples", false]], "flascdataframe (class in flasc.flasc_dataframe)": [[75, "flasc.flasc_dataframe.FlascDataFrame", false], [76, "flasc.flasc_dataframe.FlascDataFrame", false]], "flascfilter (class in flasc.data_processing.filtering)": [[59, "flasc.data_processing.filtering.FlascFilter", false], [60, "flasc.data_processing.filtering.FlascFilter", false]], "flatten_cols() (in module flasc.data_processing.time_operations)": [[70, "flasc.data_processing.time_operations.flatten_cols", false], [74, "flasc.data_processing.time_operations.flatten_cols", false]], "generate_block_list() (in module flasc.analysis.analysis_input)": [[1, "flasc.analysis.analysis_input.generate_block_list", false], [3, "flasc.analysis.analysis_input.generate_block_list", false]], "generate_floris_hetmap() (flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper method)": [[6, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.generate_floris_hetmap", false], [7, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.generate_floris_hetmap", false]], "get_all_dependent_turbines() (in module flasc.utilities.floris_tools)": [[96, "flasc.utilities.floris_tools.get_all_dependent_turbines", false], [100, "flasc.utilities.floris_tools.get_all_dependent_turbines", false]], "get_all_impacting_turbines() (in module flasc.utilities.floris_tools)": [[96, "flasc.utilities.floris_tools.get_all_impacting_turbines", false], [101, "flasc.utilities.floris_tools.get_all_impacting_turbines", false]], "get_all_impacting_turbines_geometrical() (in module flasc.utilities.floris_tools)": [[96, "flasc.utilities.floris_tools.get_all_impacting_turbines_geometrical", false], [102, "flasc.utilities.floris_tools.get_all_impacting_turbines_geometrical", false]], "get_column_mean() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.get_column_mean", false], [35, "flasc.data_processing.dataframe_manipulations.get_column_mean", false]], "get_dependent_turbines_by_wd() (in module flasc.utilities.floris_tools)": [[96, "flasc.utilities.floris_tools.get_dependent_turbines_by_wd", false], [103, "flasc.utilities.floris_tools.get_dependent_turbines_by_wd", false]], "get_df() (flasc.analysis.analysis_input.analysisinput method)": [[1, "flasc.analysis.analysis_input.AnalysisInput.get_df", false], [2, "flasc.analysis.analysis_input.AnalysisInput.get_df", false]], "get_df() (flasc.data_processing.filtering.flascfilter method)": [[59, "flasc.data_processing.filtering.FlascFilter.get_df", false], [60, "flasc.data_processing.filtering.FlascFilter.get_df", false]], "get_num_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.get_num_turbines", false], [36, "flasc.data_processing.dataframe_manipulations.get_num_turbines", false]], "get_num_turbines() (in module flasc.utilities.utilities)": [[118, "flasc.utilities.utilities.get_num_turbines", false], [120, "flasc.utilities.utilities.get_num_turbines", false]], "get_power_curve() (flasc.data_processing.filtering.flascfilter method)": [[59, "flasc.data_processing.filtering.FlascFilter.get_power_curve", false], [60, "flasc.data_processing.filtering.FlascFilter.get_power_curve", false]], "get_turbs_in_radius() (in module flasc.utilities.floris_tools)": [[96, "flasc.utilities.floris_tools.get_turbs_in_radius", false], [104, "flasc.utilities.floris_tools.get_turbs_in_radius", false]], "get_upstream_turbs_floris() (in module flasc.utilities.floris_tools)": [[96, "flasc.utilities.floris_tools.get_upstream_turbs_floris", false], [105, "flasc.utilities.floris_tools.get_upstream_turbs_floris", false]], "get_yaw_angles_interpolant() (in module flasc.utilities.lookup_table_tools)": [[107, "flasc.utilities.lookup_table_tools.get_yaw_angles_interpolant", false], [108, "flasc.utilities.lookup_table_tools.get_yaw_angles_interpolant", false]], "heterogeneity_mapper (class in flasc.analysis.energy_ratio_heterogeneity_mapper)": [[6, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper", false], [7, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper", false]], "homogenize_hoger() (in module flasc.data_processing.northing_offset_change_hoger)": [[68, "flasc.data_processing.northing_offset_change_hoger.homogenize_hoger", false], [69, "flasc.data_processing.northing_offset_change_hoger.homogenize_hoger", false]], "in_flasc_format (flasc.flasc_dataframe.flascdataframe property)": [[75, "flasc.flasc_dataframe.FlascDataFrame.in_flasc_format", false], [76, "flasc.flasc_dataframe.FlascDataFrame.in_flasc_format", false]], "interp_with_max_gap() (in module flasc.utilities.utilities)": [[118, "flasc.utilities.utilities.interp_with_max_gap", false], [121, "flasc.utilities.utilities.interp_with_max_gap", false]], "interpolate_floris_from_df_approx() (in module flasc.utilities.floris_tools)": [[96, "flasc.utilities.floris_tools.interpolate_floris_from_df_approx", false], [106, "flasc.utilities.floris_tools.interpolate_floris_from_df_approx", false]], "is_day_or_night() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.is_day_or_night", false], [37, "flasc.data_processing.dataframe_manipulations.is_day_or_night", false]], "load_floris_artificial() (in module flasc.utilities.utilities_examples)": [[122, "flasc.utilities.utilities_examples.load_floris_artificial", false], [123, "flasc.utilities.utilities_examples.load_floris_artificial", false]], "load_floris_smarteole() (in module flasc.utilities.utilities_examples)": [[122, "flasc.utilities.utilities_examples.load_floris_smarteole", false], [124, "flasc.utilities.utilities_examples.load_floris_smarteole", false]], "match_y_curves_by_offset() (in module flasc.utilities.optimization)": [[109, "flasc.utilities.optimization.match_y_curves_by_offset", false], [112, "flasc.utilities.optimization.match_y_curves_by_offset", false]], "module": [[0, "module-flasc.analysis", false], [1, "module-flasc.analysis.analysis_input", false], [4, "module-flasc.analysis.energy_ratio", false], [6, "module-flasc.analysis.energy_ratio_heterogeneity_mapper", false], [8, "module-flasc.analysis.energy_ratio_input", false], [10, "module-flasc.analysis.energy_ratio_output", false], [12, "module-flasc.analysis.expected_power_analysis", false], [15, "module-flasc.analysis.expected_power_analysis_by", false], [19, "module-flasc.analysis.expected_power_analysis_output", false], [21, "module-flasc.analysis.expected_power_analysis_utilities", false], [22, "module-flasc.analysis.total_uplift_power_ratio", false], [25, "module-flasc.data_processing", false], [26, "module-flasc.data_processing.dataframe_manipulations", false], [57, "module-flasc.data_processing.energy_ratio_wd_bias_estimation", false], [59, "module-flasc.data_processing.filtering", false], [64, "module-flasc.data_processing.find_sensor_faults", false], [66, "module-flasc.data_processing.northing_offset", false], [68, "module-flasc.data_processing.northing_offset_change_hoger", false], [70, "module-flasc.data_processing.time_operations", false], [75, "module-flasc.flasc_dataframe", false], [77, "module-flasc.utilities", false], [78, "module-flasc.utilities.circular_statistics", false], [81, "module-flasc.utilities.energy_ratio_utilities", false], [96, "module-flasc.utilities.floris_tools", false], [107, "module-flasc.utilities.lookup_table_tools", false], [109, "module-flasc.utilities.optimization", false], [113, "module-flasc.utilities.tuner_utilities", false], [118, "module-flasc.utilities.utilities", false], [122, "module-flasc.utilities.utilities_examples", false]], "n_turbines (flasc.flasc_dataframe.flascdataframe property)": [[75, "flasc.flasc_dataframe.FlascDataFrame.n_turbines", false], [76, "flasc.flasc_dataframe.FlascDataFrame.n_turbines", false]], "nested_get() (in module flasc.utilities.tuner_utilities)": [[113, "flasc.utilities.tuner_utilities.nested_get", false], [114, "flasc.utilities.tuner_utilities.nested_get", false]], "nested_set() (in module flasc.utilities.tuner_utilities)": [[113, "flasc.utilities.tuner_utilities.nested_set", false], [115, "flasc.utilities.tuner_utilities.nested_set", false]], "plot() (flasc.analysis.expected_power_analysis_by._total_uplift_expected_power_by_ method)": [[15, "flasc.analysis.expected_power_analysis_by._total_uplift_expected_power_by_.plot", false]], "plot_energy_ratios() (flasc.analysis.energy_ratio_output.energyratiooutput method)": [[10, "flasc.analysis.energy_ratio_output.EnergyRatioOutput.plot_energy_ratios", false], [11, "flasc.analysis.energy_ratio_output.EnergyRatioOutput.plot_energy_ratios", false]], "plot_energy_ratios() (flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation method)": [[57, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation.plot_energy_ratios", false], [58, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation.plot_energy_ratios", false]], "plot_farm_mean_power_curve() (flasc.data_processing.filtering.flascfilter method)": [[59, "flasc.data_processing.filtering.FlascFilter.plot_farm_mean_power_curve", false], [60, "flasc.data_processing.filtering.FlascFilter.plot_farm_mean_power_curve", false]], "plot_filters_custom_scatter() (flasc.data_processing.filtering.flascfilter method)": [[59, "flasc.data_processing.filtering.FlascFilter.plot_filters_custom_scatter", false], [60, "flasc.data_processing.filtering.FlascFilter.plot_filters_custom_scatter", false]], "plot_filters_custom_scatter_bokeh() (flasc.data_processing.filtering.flascfilter method)": [[59, "flasc.data_processing.filtering.FlascFilter.plot_filters_custom_scatter_bokeh", false], [60, "flasc.data_processing.filtering.FlascFilter.plot_filters_custom_scatter_bokeh", false]], "plot_filters_in_time() (flasc.data_processing.filtering.flascfilter method)": [[59, "flasc.data_processing.filtering.FlascFilter.plot_filters_in_time", false], [60, "flasc.data_processing.filtering.FlascFilter.plot_filters_in_time", false]], "plot_filters_in_time_bokeh() (flasc.data_processing.filtering.flascfilter method)": [[59, "flasc.data_processing.filtering.FlascFilter.plot_filters_in_time_bokeh", false], [60, "flasc.data_processing.filtering.FlascFilter.plot_filters_in_time_bokeh", false]], "plot_filters_in_ws_power_curve() (flasc.data_processing.filtering.flascfilter method)": [[59, "flasc.data_processing.filtering.FlascFilter.plot_filters_in_ws_power_curve", false], [60, "flasc.data_processing.filtering.FlascFilter.plot_filters_in_ws_power_curve", false]], "plot_graphs() (flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper method)": [[6, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.plot_graphs", false], [7, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.plot_graphs", false]], "plot_layout() (flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper method)": [[6, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.plot_layout", false], [7, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.plot_layout", false]], "plot_postprocessed_in_ws_power_curve() (flasc.data_processing.filtering.flascfilter method)": [[59, "flasc.data_processing.filtering.FlascFilter.plot_postprocessed_in_ws_power_curve", false], [60, "flasc.data_processing.filtering.FlascFilter.plot_postprocessed_in_ws_power_curve", false]], "plot_sun_altitude_with_day_night_color() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.plot_sun_altitude_with_day_night_color", false], [38, "flasc.data_processing.dataframe_manipulations.plot_sun_altitude_with_day_night_color", false]], "plot_uplift() (flasc.analysis.energy_ratio_output.energyratiooutput method)": [[10, "flasc.analysis.energy_ratio_output.EnergyRatioOutput.plot_uplift", false], [11, "flasc.analysis.energy_ratio_output.EnergyRatioOutput.plot_uplift", false]], "plot_with_distributions() (flasc.analysis.expected_power_analysis_by._total_uplift_expected_power_by_ method)": [[15, "flasc.analysis.expected_power_analysis_by._total_uplift_expected_power_by_.plot_with_distributions", false]], "print_uplift() (flasc.analysis.expected_power_analysis_output.expectedpoweranalysisoutput method)": [[19, "flasc.analysis.expected_power_analysis_output.ExpectedPowerAnalysisOutput.print_uplift", false], [20, "flasc.analysis.expected_power_analysis_output.ExpectedPowerAnalysisOutput.print_uplift", false]], "replicate_nan_values() (in module flasc.utilities.tuner_utilities)": [[113, "flasc.utilities.tuner_utilities.replicate_nan_values", false], [116, "flasc.utilities.tuner_utilities.replicate_nan_values", false]], "resample_energy_table() (flasc.analysis.analysis_input.analysisinput method)": [[1, "flasc.analysis.analysis_input.AnalysisInput.resample_energy_table", false], [2, "flasc.analysis.analysis_input.AnalysisInput.resample_energy_table", false]], "reset_filters() (flasc.data_processing.filtering.flascfilter method)": [[59, "flasc.data_processing.filtering.FlascFilter.reset_filters", false], [60, "flasc.data_processing.filtering.FlascFilter.reset_filters", false]], "resim_floris() (in module flasc.utilities.tuner_utilities)": [[113, "flasc.utilities.tuner_utilities.resim_floris", false], [117, "flasc.utilities.tuner_utilities.resim_floris", false]], "set_pow_ref_by_n_closest_upstream_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_n_closest_upstream_turbines", false], [39, "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_n_closest_upstream_turbines", false]], "set_pow_ref_by_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_turbines", false], [40, "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_turbines", false]], "set_pow_ref_by_upstream_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines", false], [41, "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines", false]], "set_pow_ref_by_upstream_turbines_in_radius() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines_in_radius", false], [42, "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines_in_radius", false]], "set_ti_by_all_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.set_ti_by_all_turbines", false], [43, "flasc.data_processing.dataframe_manipulations.set_ti_by_all_turbines", false]], "set_ti_by_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.set_ti_by_turbines", false], [44, "flasc.data_processing.dataframe_manipulations.set_ti_by_turbines", false]], "set_ti_by_upstream_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines", false], [45, "flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines", false]], "set_ti_by_upstream_turbines_in_radius() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines_in_radius", false], [46, "flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines_in_radius", false]], "set_wd_by_all_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.set_wd_by_all_turbines", false], [47, "flasc.data_processing.dataframe_manipulations.set_wd_by_all_turbines", false]], "set_wd_by_radius_from_turbine() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.set_wd_by_radius_from_turbine", false], [48, "flasc.data_processing.dataframe_manipulations.set_wd_by_radius_from_turbine", false]], "set_wd_by_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.set_wd_by_turbines", false], [49, "flasc.data_processing.dataframe_manipulations.set_wd_by_turbines", false]], "set_wd_by_upstream_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.set_wd_by_upstream_turbines", false], [50, "flasc.data_processing.dataframe_manipulations.set_wd_by_upstream_turbines", false]], "set_wd_by_upstream_turbines_in_radius() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.set_wd_by_upstream_turbines_in_radius", false], [51, "flasc.data_processing.dataframe_manipulations.set_wd_by_upstream_turbines_in_radius", false]], "set_ws_by_all_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.set_ws_by_all_turbines", false], [52, "flasc.data_processing.dataframe_manipulations.set_ws_by_all_turbines", false]], "set_ws_by_n_closest_upstream_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.set_ws_by_n_closest_upstream_turbines", false], [53, "flasc.data_processing.dataframe_manipulations.set_ws_by_n_closest_upstream_turbines", false]], "set_ws_by_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.set_ws_by_turbines", false], [54, "flasc.data_processing.dataframe_manipulations.set_ws_by_turbines", false]], "set_ws_by_upstream_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines", false], [55, "flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines", false]], "set_ws_by_upstream_turbines_in_radius() (in module flasc.data_processing.dataframe_manipulations)": [[26, "flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines_in_radius", false], [56, "flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines_in_radius", false]], "to_feather() (flasc.flasc_dataframe.flascdataframe method)": [[75, "flasc.flasc_dataframe.FlascDataFrame.to_feather", false], [76, "flasc.flasc_dataframe.FlascDataFrame.to_feather", false]], "total_uplift_expected_power() (in module flasc.analysis.expected_power_analysis)": [[12, "flasc.analysis.expected_power_analysis.total_uplift_expected_power", false], [13, "flasc.analysis.expected_power_analysis.total_uplift_expected_power", false]], "total_uplift_expected_power_by_wd (class in flasc.analysis.expected_power_analysis_by)": [[15, "flasc.analysis.expected_power_analysis_by.total_uplift_expected_power_by_wd", false], [16, "flasc.analysis.expected_power_analysis_by.total_uplift_expected_power_by_wd", false]], "total_uplift_expected_power_by_wd_shift_ws_min() (in module flasc.analysis.expected_power_analysis_by)": [[15, "flasc.analysis.expected_power_analysis_by.total_uplift_expected_power_by_wd_shift_ws_min", false], [17, "flasc.analysis.expected_power_analysis_by.total_uplift_expected_power_by_wd_shift_ws_min", false]], "total_uplift_expected_power_by_ws (class in flasc.analysis.expected_power_analysis_by)": [[15, "flasc.analysis.expected_power_analysis_by.total_uplift_expected_power_by_ws", false], [18, "flasc.analysis.expected_power_analysis_by.total_uplift_expected_power_by_ws", false]], "total_uplift_expected_power_sweep_ws_min() (in module flasc.analysis.expected_power_analysis)": [[12, "flasc.analysis.expected_power_analysis.total_uplift_expected_power_sweep_ws_min", false], [14, "flasc.analysis.expected_power_analysis.total_uplift_expected_power_sweep_ws_min", false]], "total_uplift_power_ratio() (in module flasc.analysis.total_uplift_power_ratio)": [[22, "flasc.analysis.total_uplift_power_ratio.total_uplift_power_ratio", false], [24, "flasc.analysis.total_uplift_power_ratio.total_uplift_power_ratio", false]]}, "objects": {"flasc": [[0, 0, 0, "-", "analysis"], [25, 0, 0, "-", "data_processing"], [75, 0, 0, "-", "flasc_dataframe"], [77, 0, 0, "-", "utilities"]], "flasc.analysis": [[1, 0, 0, "-", "analysis_input"], [4, 0, 0, "-", "energy_ratio"], [6, 0, 0, "-", "energy_ratio_heterogeneity_mapper"], [8, 0, 0, "-", "energy_ratio_input"], [10, 0, 0, "-", "energy_ratio_output"], [12, 0, 0, "-", "expected_power_analysis"], [15, 0, 0, "-", "expected_power_analysis_by"], [19, 0, 0, "-", "expected_power_analysis_output"], [21, 0, 0, "-", "expected_power_analysis_utilities"], [22, 0, 0, "-", "total_uplift_power_ratio"]], "flasc.analysis.analysis_input": [[2, 1, 1, "", "AnalysisInput"], [3, 3, 1, "", "generate_block_list"]], "flasc.analysis.analysis_input.AnalysisInput": [[2, 2, 1, "", "get_df"], [2, 2, 1, "", "resample_energy_table"]], "flasc.analysis.energy_ratio": [[4, 3, 1, "", "_compute_energy_ratio_bootstrap"], [4, 3, 1, "", "_compute_energy_ratio_single"], [5, 3, 1, "", "compute_energy_ratio"]], "flasc.analysis.energy_ratio_heterogeneity_mapper": [[6, 3, 1, "", "_get_energy_ratio"], [7, 1, 1, "", "heterogeneity_mapper"]], "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper": [[7, 2, 1, "", "_process_single_wd"], [7, 2, 1, "", "estimate_heterogeneity"], [7, 2, 1, "", "generate_floris_hetmap"], [7, 2, 1, "", "plot_graphs"], [7, 2, 1, "", "plot_layout"]], "flasc.analysis.energy_ratio_input": [[9, 1, 1, "", "EnergyRatioInput"]], "flasc.analysis.energy_ratio_output": [[11, 1, 1, "", "EnergyRatioOutput"]], "flasc.analysis.energy_ratio_output.EnergyRatioOutput": [[11, 2, 1, "", "_compute_ws_counts"], [11, 2, 1, "", "plot_energy_ratios"], [11, 2, 1, "", "plot_uplift"]], "flasc.analysis.expected_power_analysis": [[12, 3, 1, "", "_total_uplift_expected_power_single"], [12, 3, 1, "", "_total_uplift_expected_power_with_bootstrapping"], [12, 3, 1, "", "_total_uplift_expected_power_with_standard_error"], [13, 3, 1, "", "total_uplift_expected_power"], [14, 3, 1, "", "total_uplift_expected_power_sweep_ws_min"]], "flasc.analysis.expected_power_analysis_by": [[15, 1, 1, "", "_total_uplift_expected_power_by_"], [16, 1, 1, "", "total_uplift_expected_power_by_wd"], [17, 3, 1, "", "total_uplift_expected_power_by_wd_shift_ws_min"], [18, 1, 1, "", "total_uplift_expected_power_by_ws"]], "flasc.analysis.expected_power_analysis_by._total_uplift_expected_power_by_": [[15, 2, 1, "", "plot"], [15, 2, 1, "", "plot_with_distributions"]], "flasc.analysis.expected_power_analysis_output": [[20, 1, 1, "", "ExpectedPowerAnalysisOutput"]], "flasc.analysis.expected_power_analysis_output.ExpectedPowerAnalysisOutput": [[20, 2, 1, "", "_return_uplift_string"], [20, 2, 1, "", "print_uplift"]], "flasc.analysis.expected_power_analysis_utilities": [[21, 3, 1, "", "_add_wd_ws_bins"], [21, 3, 1, "", "_bin_and_group_dataframe_expected_power"], [21, 3, 1, "", "_compute_covariance"], [21, 3, 1, "", "_fill_cov_with_var"], [21, 3, 1, "", "_get_num_points_pair"], [21, 3, 1, "", "_set_cov_to_zero"], [21, 3, 1, "", "_synchronize_nulls"], [21, 3, 1, "", "_synchronize_var_nulls_back_to_mean"]], "flasc.analysis.total_uplift_power_ratio": [[22, 3, 1, "", "_total_uplift_power_ratio_bootstrap"], [22, 3, 1, "", "_total_uplift_power_ratio_single"], [23, 3, 1, "", "compute_total_uplift"], [24, 3, 1, "", "total_uplift_power_ratio"]], "flasc.data_processing": [[26, 0, 0, "-", "dataframe_manipulations"], [57, 0, 0, "-", "energy_ratio_wd_bias_estimation"], [59, 0, 0, "-", "filtering"], [64, 0, 0, "-", "find_sensor_faults"], [66, 0, 0, "-", "northing_offset"], [68, 0, 0, "-", "northing_offset_change_hoger"], [70, 0, 0, "-", "time_operations"]], "flasc.data_processing.dataframe_manipulations": [[26, 3, 1, "", "_set_col_by_n_closest_upstream_turbines"], [26, 3, 1, "", "_set_col_by_radius_from_turbine"], [26, 3, 1, "", "_set_col_by_turbines"], [26, 3, 1, "", "_set_col_by_upstream_turbines"], [26, 3, 1, "", "_set_col_by_upstream_turbines_in_radius"], [27, 3, 1, "", "df_drop_nan_rows"], [28, 3, 1, "", "df_find_and_fill_data_gaps_with_missing"], [29, 3, 1, "", "df_reduce_precision"], [30, 3, 1, "", "df_sort_and_find_duplicates"], [31, 3, 1, "", "df_sort_and_fix_duplicates"], [32, 3, 1, "", "filter_df_by_ti"], [33, 3, 1, "", "filter_df_by_wd"], [34, 3, 1, "", "filter_df_by_ws"], [35, 3, 1, "", "get_column_mean"], [36, 3, 1, "", "get_num_turbines"], [37, 3, 1, "", "is_day_or_night"], [38, 3, 1, "", "plot_sun_altitude_with_day_night_color"], [39, 3, 1, "", "set_pow_ref_by_n_closest_upstream_turbines"], [40, 3, 1, "", "set_pow_ref_by_turbines"], [41, 3, 1, "", "set_pow_ref_by_upstream_turbines"], [42, 3, 1, "", "set_pow_ref_by_upstream_turbines_in_radius"], [43, 3, 1, "", "set_ti_by_all_turbines"], [44, 3, 1, "", "set_ti_by_turbines"], [45, 3, 1, "", "set_ti_by_upstream_turbines"], [46, 3, 1, "", "set_ti_by_upstream_turbines_in_radius"], [47, 3, 1, "", "set_wd_by_all_turbines"], [48, 3, 1, "", "set_wd_by_radius_from_turbine"], [49, 3, 1, "", "set_wd_by_turbines"], [50, 3, 1, "", "set_wd_by_upstream_turbines"], [51, 3, 1, "", "set_wd_by_upstream_turbines_in_radius"], [52, 3, 1, "", "set_ws_by_all_turbines"], [53, 3, 1, "", "set_ws_by_n_closest_upstream_turbines"], [54, 3, 1, "", "set_ws_by_turbines"], [55, 3, 1, "", "set_ws_by_upstream_turbines"], [56, 3, 1, "", "set_ws_by_upstream_turbines_in_radius"]], "flasc.data_processing.energy_ratio_wd_bias_estimation": [[58, 1, 1, "", "bias_estimation"]], "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation": [[58, 2, 1, "", "_get_energy_ratios_allbins"], [58, 2, 1, "", "_load_a_input_for_wd_bias"], [58, 2, 1, "", "calculate_baseline"], [58, 2, 1, "", "estimate_wd_bias"], [58, 2, 1, "", "plot_energy_ratios"]], "flasc.data_processing.filtering": [[60, 1, 1, "", "FlascFilter"], [61, 3, 1, "", "df_get_no_faulty_measurements"], [62, 3, 1, "", "df_mark_turbdata_as_faulty"], [63, 3, 1, "", "filter_df_by_faulty_impacting_turbines"]], "flasc.data_processing.filtering.FlascFilter": [[60, 2, 1, "", "_get_all_unique_flags"], [60, 2, 1, "", "_get_mean_power_curves"], [60, 2, 1, "", "_reset_mean_power_curves"], [60, 2, 1, "", "_set_legend_alpha_to_one"], [60, 2, 1, "", "filter_by_condition"], [60, 2, 1, "", "filter_by_floris_power_curve"], [60, 2, 1, "", "filter_by_power_curve"], [60, 2, 1, "", "filter_by_sensor_stuck_faults"], [60, 2, 1, "", "get_df"], [60, 2, 1, "", "get_power_curve"], [60, 2, 1, "", "plot_farm_mean_power_curve"], [60, 2, 1, "", "plot_filters_custom_scatter"], [60, 2, 1, "", "plot_filters_custom_scatter_bokeh"], [60, 2, 1, "", "plot_filters_in_time"], [60, 2, 1, "", "plot_filters_in_time_bokeh"], [60, 2, 1, "", "plot_filters_in_ws_power_curve"], [60, 2, 1, "", "plot_postprocessed_in_ws_power_curve"], [60, 2, 1, "", "reset_filters"]], "flasc.data_processing.find_sensor_faults": [[64, 3, 1, "", "_find_sensor_stuck_single_timearray"], [64, 3, 1, "", "_plot_top_sensor_faults"], [65, 3, 1, "", "find_sensor_stuck_faults"]], "flasc.data_processing.northing_offset": [[67, 3, 1, "", "crosscheck_northing_offset_consistency"]], "flasc.data_processing.northing_offset_change_hoger": [[68, 3, 1, "", "_discretize"], [68, 3, 1, "", "_get_leaves_and_knots"], [68, 3, 1, "", "_plot_regression"], [68, 3, 1, "", "_shorth_mode"], [69, 3, 1, "", "homogenize_hoger"]], "flasc.data_processing.time_operations": [[71, 3, 1, "", "df_downsample"], [72, 3, 1, "", "df_movingaverage"], [73, 3, 1, "", "df_resample_by_interpolation"], [74, 3, 1, "", "flatten_cols"]], "flasc.flasc_dataframe": [[76, 1, 1, "", "FlascDataFrame"]], "flasc.flasc_dataframe.FlascDataFrame": [[76, 4, 1, "", "_attrs"], [76, 4, 1, "", "_cache"], [76, 5, 1, "", "_constructor"], [76, 2, 1, "", "_convert_long_to_wide"], [76, 2, 1, "", "_convert_wide_to_long"], [76, 4, 1, "", "_metadata"], [76, 4, 1, "", "_mgr"], [76, 2, 1, "", "_repr_html_"], [76, 2, 1, "", "check_flasc_format"], [76, 2, 1, "", "convert_time_to_datetime"], [76, 2, 1, "", "convert_to_flasc_format"], [76, 2, 1, "", "convert_to_user_format"], [76, 2, 1, "", "copy_metadata"], [76, 2, 1, "", "export_to_windup_format"], [76, 5, 1, "", "in_flasc_format"], [76, 5, 1, "", "n_turbines"], [76, 2, 1, "", "to_feather"]], "flasc.utilities": [[78, 0, 0, "-", "circular_statistics"], [81, 0, 0, "-", "energy_ratio_utilities"], [96, 0, 0, "-", "floris_tools"], [107, 0, 0, "-", "lookup_table_tools"], [109, 0, 0, "-", "optimization"], [113, 0, 0, "-", "tuner_utilities"], [118, 0, 0, "-", "utilities"], [122, 0, 0, "-", "utilities_examples"]], "flasc.utilities.circular_statistics": [[79, 3, 1, "", "calc_wd_mean_radial"], [80, 3, 1, "", "calculate_wd_statistics"]], "flasc.utilities.energy_ratio_utilities": [[82, 3, 1, "", "add_bin_weights"], [83, 3, 1, "", "add_power_ref"], [84, 3, 1, "", "add_power_test"], [85, 3, 1, "", "add_reflected_rows"], [86, 3, 1, "", "add_wd"], [87, 3, 1, "", "add_wd_bin"], [88, 3, 1, "", "add_ws"], [89, 3, 1, "", "add_ws_bin"], [90, 3, 1, "", "bin_and_group_dataframe"], [91, 3, 1, "", "bin_column"], [92, 3, 1, "", "check_compute_analysis_inputs"], [93, 3, 1, "", "cut"], [94, 3, 1, "", "filter_all_nulls"], [95, 3, 1, "", "filter_any_nulls"]], "flasc.utilities.floris_tools": [[96, 3, 1, "", "_fi_set_ws_wd_ti"], [97, 3, 1, "", "add_gaussian_blending_to_floris_approx_table"], [98, 3, 1, "", "calc_floris_approx_table"], [99, 3, 1, "", "estimate_ws_with_floris"], [100, 3, 1, "", "get_all_dependent_turbines"], [101, 3, 1, "", "get_all_impacting_turbines"], [102, 3, 1, "", "get_all_impacting_turbines_geometrical"], [103, 3, 1, "", "get_dependent_turbines_by_wd"], [104, 3, 1, "", "get_turbs_in_radius"], [105, 3, 1, "", "get_upstream_turbs_floris"], [106, 3, 1, "", "interpolate_floris_from_df_approx"]], "flasc.utilities.lookup_table_tools": [[108, 3, 1, "", "get_yaw_angles_interpolant"]], "flasc.utilities.optimization": [[110, 3, 1, "", "estimate_ti"], [111, 3, 1, "", "find_timeshift_between_dfs"], [112, 3, 1, "", "match_y_curves_by_offset"]], "flasc.utilities.tuner_utilities": [[114, 3, 1, "", "nested_get"], [115, 3, 1, "", "nested_set"], [116, 3, 1, "", "replicate_nan_values"], [117, 3, 1, "", "resim_floris"]], "flasc.utilities.utilities": [[118, 3, 1, "", "_interpolate_with_max_gap"], [119, 3, 1, "", "estimate_dt"], [120, 3, 1, "", "get_num_turbines"], [121, 3, 1, "", "interp_with_max_gap"]], "flasc.utilities.utilities_examples": [[123, 3, 1, "", "load_floris_artificial"], [124, 3, 1, "", "load_floris_smarteole"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property"}, "terms": {"": [26, 28, 37, 59, 60, 62, 63, 96, 98, 100, 101, 103, 105, 106, 107, 108, 122, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139], "0": [1, 3, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 37, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 78, 79, 80, 81, 82, 85, 87, 89, 90, 96, 97, 98, 100, 101, 102, 103, 105, 106, 109, 111, 122, 123, 124, 126, 131, 133, 134, 139], "00": [96, 106, 130, 131], "000": [129, 130, 131, 134], "00000e": 131, "00001": [96, 102], "00019531250018189894": 129, "00025": 131, "000786": 131, "001": [59, 60, 64, 65, 96, 98, 100, 101, 103, 129, 130, 131], "001622": 131, "002": [129, 130, 131], "002468": 134, "003": [129, 130, 131], "004": [129, 130, 131], "005": [129, 130, 131], "006": [129, 130, 131], "006674": 131, "007": 134, "00_setup_floris_model": 130, "01": [57, 58, 59, 60, 96, 98, 106, 126, 130, 131], "010": 130, "011852": 131, "012211": 131, "013297": 131, "013610": 131, "015": 129, "017239": 131, "017320": 131, "01_raw_data_process": 129, "02": [126, 130, 131], "020": 130, "020642": 131, "023940": 131, "025": 130, "025045": 134, "028336": 131, "028457": 131, "02_download_and_format_dataset": 135, "02_precalculate_floris_solut": 130, "03": [96, 98, 106, 126, 130, 131], "030": 130, "030381e": 131, "031791": 131, "033320e": 131, "035059": 133, "035789": 134, "039771": 131, "03_energy_ratio": 128, "03d": [26, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 126, 129, 130, 131], "04": [57, 58, 126, 130, 131], "040": 130, "043104": 131, "043126e": 131, "043464": 131, "044316": 131, "045": 130, "046216": 131, "046732": 134, "05": [59, 60, 64, 126, 129, 130, 131], "050": [130, 131], "051594": 131, "053268": 131, "053966": 133, "056111": 131, "06": [96, 98, 127, 129, 130, 131, 132, 133], "060": 130, "063863": 131, "064289": 131, "07": [126, 129, 130, 131], "071727": 131, "073745": 131, "076833": 131, "077458": 131, "079109": 133, "079571": 131, "08": [57, 58, 96, 106, 129, 130, 131], "080681": 131, "080819": 131, "081048": 131, "084883": 131, "086875": 131, "087358": 134, "09": [68, 69, 96, 98, 127, 130, 131], "091502": 131, "0e": [59, 60, 129], "0e6": [96, 106], "0e9": [130, 131], "0m": [129, 130, 131], "0x7f8b58c53640": 131, "1": [1, 3, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 57, 58, 59, 60, 63, 70, 71, 72, 73, 81, 89, 90, 96, 97, 98, 102, 105, 106, 109, 111, 126, 131, 132, 133, 134, 139], "10": [1, 2, 3, 12, 14, 15, 17, 26, 28, 57, 58, 59, 60, 96, 98, 100, 101, 103, 106, 107, 108, 109, 111, 126, 127, 129, 130, 131, 132, 133, 134], "100": [96, 98, 100, 101, 103, 106, 109, 111, 129, 130, 131, 134], "1000": [68, 69, 132, 133, 134], "101": [96, 98, 131], "102": [6, 7, 96, 98, 100, 101, 102, 103, 109, 111], "103": [96, 98], "104": [96, 98, 100, 101, 103, 109, 111], "105": [6, 7, 96, 98, 102, 130, 131], "106": [96, 98, 100, 101, 103, 109, 111, 131], "107": [96, 98], "107205": 131, "108": [6, 7, 96, 98, 100, 101, 102, 103, 109, 111, 131], "109": [96, 98], "109070": 131, "11": [6, 7, 59, 60, 96, 98, 106, 126, 127, 130, 131, 133], "110": [96, 98, 100, 101, 103, 109, 111, 130, 131], "111": [6, 7, 96, 98, 102], "112": [96, 98, 100, 101, 103, 109, 111, 130], "113": [96, 98], "114": [6, 7, 96, 98, 100, 101, 102, 103, 109, 111], "115": [96, 98, 130, 131], "116": [96, 98, 100, 101, 103, 109, 111], "116417": 131, "116864": 131, "117": [6, 7, 96, 98, 102, 130], "118": [96, 98, 100, 101, 103, 109, 111], "118957": 131, "119": [96, 98], "119059": 134, "1197": 129, "12": [6, 7, 59, 60, 96, 98, 100, 101, 102, 103, 106, 107, 108, 109, 111, 126, 129, 130, 131], "120": [6, 7, 66, 67, 96, 98, 100, 101, 102, 103, 109, 111, 130, 131], "1202808": [96, 106], "121": [96, 98], "122": [96, 98, 100, 101, 103, 109, 111], "123": [6, 7, 96, 98, 102], "123594e": 131, "124": [96, 98, 100, 101, 103, 109, 111], "125": [96, 98, 130, 131], "1251108": [96, 106], "126": [6, 7, 96, 98, 100, 101, 102, 103, 109, 111, 132, 133], "127": [96, 98], "128": [96, 98, 100, 101, 103, 109, 111], "1281": 131, "1282": 131, "1283": 131, "1284": 131, "1285": 131, "129": [6, 7, 96, 98, 102, 131], "13": [59, 60, 96, 98, 129, 130, 131], "130": [96, 98, 100, 101, 103, 109, 111, 130, 131], "131": [96, 98, 131], "132": [6, 7, 96, 98, 100, 101, 102, 103, 109, 111, 131], "133": [96, 98, 131], "134": [96, 98, 100, 101, 103, 109, 111, 131], "1349": 131, "135": [6, 7, 96, 98, 102, 130, 131], "1350": 131, "1351": 131, "1353": 131, "1355": 131, "136": [96, 98, 100, 101, 103, 109, 111, 131], "1369": 131, "137": [96, 98, 131], "1371": 131, "1372": 131, "1373": 131, "138": [6, 7, 96, 98, 100, 101, 102, 103, 109, 111], "139": [96, 98], "14": [59, 60, 96, 98, 100, 101, 103, 109, 111, 126, 129, 130, 131], "140": [96, 98, 100, 101, 103, 109, 111, 130, 131], "141": [6, 7, 96, 98, 102], "141959": 134, "142": [96, 98, 100, 101, 103, 109, 111, 129], "143": [96, 98], "144": [6, 7, 96, 98, 100, 101, 102, 103, 109, 111, 131], "145": [96, 98, 130, 131], "146": [96, 98, 100, 101, 103, 109, 111, 131], "14692690": [113, 114, 115], "147": [6, 7, 96, 98, 102, 131], "147089": 131, "148": [96, 98, 100, 101, 103, 109, 111, 131], "149": [96, 98], "149477": 131, "15": [6, 7, 59, 60, 96, 98, 102, 106, 126, 129, 130, 131, 134], "150": [6, 7, 96, 98, 100, 101, 102, 103, 109, 111, 130, 131], "151": [96, 98, 131], "152": [96, 98, 100, 101, 103, 109, 111, 131], "153": [6, 7, 96, 98, 102, 131], "153210": 133, "154": [96, 98, 100, 101, 103, 109, 111, 131], "154903": 131, "155": [96, 98, 130, 131], "155273446026513e": 129, "156": [6, 7, 96, 98, 100, 101, 102, 103, 109, 111, 130], "157": [96, 98], "158": [96, 98, 100, 101, 103, 109, 111], "159": [6, 7, 96, 98, 102], "159744": 131, "16": [59, 60, 96, 98, 100, 101, 103, 109, 111, 130, 131, 134], "160": [96, 98, 100, 101, 103, 109, 111, 130, 131], "161": [96, 98], "1610": 131, "1611": 131, "1612": 131, "1613": 131, "1614": 131, "162": [6, 7, 96, 98, 100, 101, 102, 103, 109, 111], "162351": 131, "162996e": 131, "163": [96, 98, 130], "164": [96, 98, 100, 101, 103, 109, 111], "165": [6, 7, 96, 98, 102, 130, 131], "165446": 134, "166": [96, 98, 100, 101, 103, 109, 111], "166085": 131, "1664": 131, "1665": 131, "1666": 131, "1668": 131, "167": [96, 98], "168": [6, 7, 96, 98, 100, 101, 102, 103, 109, 111], "169": [96, 98], "17": [59, 60, 96, 98, 130, 131, 134], "170": [96, 98, 100, 101, 103, 109, 111, 130, 131], "170321e": 131, "170447": 131, "171": [6, 7, 96, 98, 102], "171201": 133, "171484e": 131, "172": [96, 98, 100, 101, 103, 109, 111], "172533": 134, "173": [96, 98], "174": [6, 7, 96, 98, 100, 101, 102, 103, 109, 111], "175": [96, 98, 130, 131, 134], "175628": 131, "176": [96, 98, 100, 101, 103, 109, 111, 134], "177": [6, 7, 96, 98, 102, 134], "178": [96, 98, 100, 101, 103, 109, 111, 134], "179": [96, 98, 134], "179667": 133, "18": [6, 7, 59, 60, 96, 98, 100, 101, 102, 103, 106, 109, 111, 129, 130, 131, 134], "180": [6, 7, 57, 58, 96, 98, 100, 101, 102, 103, 109, 111, 126, 130, 131, 134], "1801": [96, 98], "180232": 133, "181": [96, 98], "181930": 134, "182": [96, 98, 100, 101, 103], "183": [6, 7, 96, 98, 102], "184": [96, 98, 100, 101, 103, 129], "184927": 134, "185": [96, 98], "185659": 131, "186": [6, 7, 96, 98, 100, 101, 102, 103], "187": [96, 98], "188": [96, 98, 100, 101, 103], "1889": 131, "189": [6, 7, 96, 98, 102], "1890": 131, "1891": 131, "19": [59, 60, 96, 98, 130, 131, 134], "190": [96, 98, 100, 101, 103, 130], "191": [96, 98], "192": [6, 7, 96, 98, 100, 101, 102, 103, 131], "192570": 133, "193": [96, 98, 131], "194": [96, 98, 100, 101, 103, 129], "195": [6, 7, 96, 98, 102, 131], "196": [96, 98, 100, 101, 103], "197": [96, 98, 130], "198": [6, 7, 96, 98, 100, 101, 102, 103, 131], "199": [96, 98], "1f": 129, "1hz": 126, "2": [4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 29, 57, 58, 59, 60, 63, 81, 87, 90, 96, 98, 100, 101, 103, 105, 106, 107, 108, 109, 111, 126, 131, 133, 134, 136, 139], "20": [59, 60, 96, 98, 100, 101, 103, 106, 109, 111, 129, 130, 131, 132, 134], "200": [57, 58, 96, 98, 100, 101, 103, 130, 131, 132], "201": [6, 7, 96, 98, 102], "2018": [96, 106], "2019": [57, 58, 126, 135, 139], "202": [96, 98, 100, 101, 103], "2020": [126, 131], "2022": [128, 139], "2024": 139, "203": [96, 98], "204": [6, 7, 96, 98, 100, 101, 102, 103, 131], "204466": 131, "205": [96, 98], "206": [96, 98, 100, 101, 103], "207": [6, 7, 96, 98, 102], "208": [96, 98, 100, 101, 103], "209": [96, 98], "21": [6, 7, 59, 60, 96, 98, 102, 129, 130, 131], "210": [6, 7, 96, 98, 100, 101, 102, 103], "211": [96, 98], "212": [96, 98, 100, 101, 103], "213": [6, 7, 96, 98, 102, 106], "214": [96, 98, 100, 101, 103], "215": [96, 98, 106], "216": [6, 7, 96, 98, 100, 101, 102, 103], "217": [96, 98], "218": [96, 98, 100, 101, 103], "218590": 133, "219": [6, 7, 96, 98, 102, 131], "219887": 131, "22": [59, 60, 96, 98, 100, 101, 103, 109, 111, 129, 130, 131, 139], "220": [96, 98, 100, 101, 103, 131], "2207031261368684e": 129, "221": [96, 98, 131], "222": [6, 7, 96, 98, 100, 101, 102, 103, 131], "223": [96, 98], "223109e": 131, "224": [96, 98, 100, 101, 103, 131], "225": [6, 7, 96, 98, 102, 130, 131], "225742": 131, "226": [96, 98, 100, 101, 103], "227": [96, 98, 131], "227048": 134, "228": [6, 7, 96, 98, 100, 101, 102, 103], "229": [96, 98, 131], "22nd": 126, "23": [59, 60, 96, 98, 106, 129, 130, 131], "230": [96, 98, 100, 101, 103, 130, 131], "230116": 133, "230575": 131, "231": [6, 7, 96, 98, 102, 131], "232": [96, 98, 100, 101, 103, 131], "232723": 134, "233": [96, 98], "233908": 133, "234": [6, 7, 96, 98, 100, 101, 102, 103, 131], "235": [96, 98, 131], "236": [96, 98, 100, 101, 103], "237": [6, 7, 96, 98, 102], "238": [96, 98, 100, 101, 103], "239": [96, 98, 129, 131], "23rd": 126, "24": [6, 7, 59, 60, 96, 98, 100, 101, 102, 103, 106, 109, 111, 129, 130, 131], "240": [6, 7, 96, 98, 100, 101, 102, 103, 131], "241": [96, 98], "242": [96, 98, 100, 101, 103], "243": [6, 7, 96, 98, 102, 131], "244": [96, 98, 100, 101, 103, 131], "245": [96, 98], "245504": 133, "246": [6, 7, 96, 98, 100, 101, 102, 103, 131, 133], "247": [96, 98, 131, 133], "248": [96, 98, 100, 101, 103, 131, 133], "249": [6, 7, 96, 98, 102, 131, 133], "25": [59, 60, 96, 98, 106, 129, 130, 131, 132, 133], "250": [96, 98, 100, 101, 103, 130, 132, 133], "251": [96, 98, 133], "252": [6, 7, 96, 98, 100, 101, 102, 103], "252229": 131, "253": [96, 98, 131], "253171": 131, "254": [96, 98, 100, 101, 103], "254893": 133, "255": [6, 7, 96, 98, 102], "256": [96, 98, 100, 101, 103, 131], "257": [96, 98], "257707": 131, "258": [6, 7, 96, 98, 100, 101, 102, 103], "259": [96, 98], "26": [96, 98, 100, 101, 103, 109, 111, 129, 130, 131], "260": [96, 98, 100, 101, 103], "261": [6, 7, 96, 98, 102, 131], "262": [96, 98, 100, 101, 103, 129], "263": [96, 98, 131], "264": [6, 7, 96, 98, 100, 101, 102, 103], "265": [96, 98, 131], "266": [96, 98, 100, 101, 103], "267": [6, 7, 96, 98, 102, 131], "268": [96, 98, 100, 101, 103], "269": [96, 98, 131], "27": [6, 7, 96, 98, 102, 130, 131], "270": [6, 7, 96, 98, 100, 101, 102, 103, 131, 134], "271": [96, 98, 131, 134], "272": [96, 98, 100, 101, 103, 134], "2725108": [96, 106], "273": [6, 7, 96, 98, 102, 131, 134], "274": [96, 98, 100, 101, 103], "275": [96, 98, 134], "276": [6, 7, 96, 98, 100, 101, 102, 103, 134], "277": [96, 98, 131], "278": [96, 98, 100, 101, 103, 131, 134], "279": [6, 7, 96, 98, 102, 131], "28": [96, 98, 100, 101, 103, 109, 111, 130, 131, 139], "280": [96, 98, 100, 101, 103], "281": [96, 98, 131], "282": [6, 7, 96, 98, 100, 101, 102, 103], "283": [96, 98], "284": [96, 98, 100, 101, 103], "285": [6, 7, 96, 98, 102], "286": [96, 98, 100, 101, 103], "287": [96, 98, 129], "288": [6, 7, 96, 98, 100, 101, 102, 103], "289": [96, 98, 129], "29": [96, 98, 127, 130, 131], "290": [96, 98, 100, 101, 103, 132, 133], "291": [6, 7, 96, 98, 102], "291084": 134, "292": [96, 98, 100, 101, 103, 129], "293": [96, 98], "294": [6, 7, 96, 98, 100, 101, 102, 103, 129], "295": [96, 98], "295585": 134, "2957021": [96, 106], "296": [96, 98, 100, 101, 103], "297": [6, 7, 96, 98, 102], "298": [96, 98, 100, 101, 103, 129], "299": [96, 98], "2999": 131, "2f": [130, 131], "3": [6, 7, 57, 58, 59, 60, 63, 64, 65, 75, 76, 96, 97, 98, 102, 106, 126, 131, 132, 133, 134, 136, 138], "30": [6, 7, 96, 98, 100, 101, 102, 103, 106, 109, 111, 129, 130, 131], "300": [6, 7, 64, 96, 98, 100, 101, 102, 103, 129, 130], "301": [96, 98], "302": [96, 98, 100, 101, 103], "303": [6, 7, 96, 98, 102], "304": [96, 98, 100, 101, 103], "305": [96, 98], "306": [6, 7, 96, 98, 100, 101, 102, 103], "306531": 131, "307": [96, 98], "308": [96, 98, 100, 101, 103], "309": [6, 7, 96, 98, 102, 129], "30e3": 129, "30mwarn": [130, 131], "31": [96, 98, 106, 130, 131], "310": [96, 98, 100, 101, 103], "3100": 126, "310576": 131, "3109": 131, "311": [96, 98], "3110": 131, "3111": 131, "3112": 131, "3113": 131, "3114": 131, "3115": 131, "312": [6, 7, 96, 98, 100, 101, 102, 103], "312843": 133, "313": [96, 98], "314": [96, 98, 100, 101, 103], "315": [6, 7, 96, 98, 102], "316": [96, 98, 100, 101, 103], "317": [96, 98], "3177": 131, "3178": 131, "318": [6, 7, 96, 98, 100, 101, 102, 103], "3180": 131, "3182": 131, "3183": 131, "319": [96, 98, 129, 130], "319409e": 131, "32": [96, 98, 100, 101, 103, 109, 111, 130, 131], "320": [96, 98, 100, 101, 103], "3200": [126, 129], "320629": 133, "321": [6, 7, 96, 98, 102, 131], "322": [96, 98, 100, 101, 103, 131], "323": [96, 98, 129, 130, 131], "32395": [96, 98], "32396": [96, 98], "32397": [96, 98], "32398": [96, 98], "32399": [96, 98, 106], "324": [6, 7, 96, 98, 100, 101, 102, 103, 131], "32400": [96, 98, 106], "325": [96, 98, 131], "3254": 131, "3256": 131, "3257": 131, "3258": 131, "326": [96, 98, 100, 101, 103, 129], "3260": 131, "3261": 131, "327": [6, 7, 96, 98, 102], "328": [96, 98, 100, 101, 103, 129], "328387": 134, "329": [96, 98, 131], "32m2024": [130, 131], "32m2025": [129, 131], "33": [6, 7, 96, 98, 102, 126, 130, 131], "330": [6, 7, 96, 98, 100, 101, 102, 103, 129, 130], "330345": 134, "331": [96, 98], "331250": 134, "332": [96, 98, 100, 101, 103], "333": [6, 7, 96, 98, 102], "334": [96, 98, 100, 101, 103], "335": [96, 98], "336": [6, 7, 96, 98, 100, 101, 102, 103, 129], "337": [96, 98], "337790": 131, "337860099428269e": 129, "338": [96, 98, 100, 101, 103], "339": [6, 7, 96, 98, 102], "33mdelet": [130, 131], "33mwarn": [130, 131], "34": [96, 98, 100, 101, 103, 109, 111, 130, 131], "340": [96, 98, 100, 101, 103, 129], "341": [96, 98], "342": [6, 7, 96, 98, 100, 101, 102, 103, 129], "343": [96, 98, 129], "344": [96, 98, 100, 101, 103], "345": [6, 7, 96, 98, 102, 130, 131], "345981": 131, "346": [96, 98, 100, 101, 103], "347": [96, 98], "348": [6, 7, 96, 98, 100, 101, 102, 103, 130, 131], "348930": 131, "349": [96, 98], "34mflori": [130, 131], "35": [96, 98, 130, 131], "350": [96, 98, 100, 101, 103, 130], "351": [6, 7, 96, 98, 102, 130, 131], "352": [96, 98, 100, 101, 103], "353": [96, 98], "354": [6, 7, 59, 63, 96, 98, 100, 101, 102, 103, 130, 131], "355": [96, 98], "356": [96, 98, 100, 101, 103], "357": [6, 7, 59, 63, 96, 98, 102, 106, 130, 131], "357473e": 131, "358": [96, 98, 100, 101, 103, 106], "358410": 134, "359": [96, 98], "36": [6, 7, 96, 98, 100, 101, 102, 103, 109, 111, 130, 131], "360": [4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 78, 80, 81, 85, 87, 90, 96, 98, 106, 118, 121, 126, 130, 131, 139], "361": 131, "365116": 134, "368": [129, 130], "368160": 134, "37": [96, 98, 130, 131], "375": [130, 131], "379": 131, "38": [96, 98, 100, 101, 103, 109, 111, 130, 131], "380": 131, "381": 131, "382": 131, "3825108": [96, 106], "383": 131, "383139": 134, "384": 131, "385": 131, "3860281": [96, 106], "387924": 131, "39": [6, 7, 96, 98, 102, 130, 131], "398639": 131, "3987634": [96, 106], "3f": [130, 131], "3rd": 132, "4": [57, 58, 59, 60, 63, 68, 69, 96, 98, 100, 101, 103, 106, 107, 108, 109, 111, 126, 127, 128, 129, 132, 133, 134], "40": [96, 98, 100, 101, 103, 106, 109, 111, 130, 131], "400": [130, 131, 133], "401": 129, "402707": 133, "405": 130, "406": 130, "40625": 130, "408887e": 131, "409497e": 131, "41": [96, 98, 130, 131], "412924": 134, "42": [6, 7, 96, 98, 100, 101, 102, 103, 109, 111, 130, 131], "4235128": [96, 106], "426413": 134, "427331": 134, "428": 134, "429": 130, "43": [96, 98, 130, 131], "430": 130, "431": 130, "432591": 131, "433": 129, "435174e": 131, "438": 130, "44": [96, 98, 100, 101, 103, 109, 111, 130, 131], "448": 129, "45": [6, 7, 96, 98, 102, 130, 131], "450": 130, "450779": 133, "452": 130, "454": [129, 130], "455": 134, "46": [96, 98, 100, 101, 103, 109, 111, 130, 131], "461185": 131, "464863": 131, "465325": 131, "47": [96, 98, 130, 131], "471698": 134, "475155e": 131, "475743": 133, "478": 134, "478195188475695e": 129, "48": [6, 7, 96, 98, 100, 101, 102, 103, 109, 111, 130, 131], "484909": 134, "485": 134, "487232e": 131, "49": [96, 98, 130, 131], "492": 134, "49625e": 131, "497075": 133, "499": 129, "5": [4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 26, 28, 39, 53, 57, 58, 59, 60, 63, 64, 66, 67, 70, 73, 81, 89, 96, 98, 106, 107, 108, 126, 129, 132, 133, 134], "50": [4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 59, 60, 66, 67, 81, 89, 90, 96, 98, 100, 101, 103, 109, 111, 129, 130, 131, 133], "500": [130, 132, 133], "5000": [130, 131], "50000e": 131, "508719": 133, "51": [6, 7, 96, 98, 102, 130, 131], "52": [96, 98, 100, 101, 103, 109, 111, 130, 131], "520975": 133, "521": 134, "52103": [96, 106], "52104": [96, 106], "521491e": 131, "53": [96, 98, 130, 131], "536825": 133, "537330": 133, "537493": 131, "538060": 134, "54": [6, 7, 96, 98, 100, 101, 102, 103, 109, 111, 130, 131], "545584e": 131, "55": [96, 98, 130, 131], "550": 131, "553318e": 131, "558": [129, 130], "559170": 131, "56": [96, 98, 100, 101, 103, 109, 111, 130, 131], "562": 130, "566071": 134, "57": [6, 7, 96, 98, 102, 130, 131], "571": 129, "58": [96, 98, 100, 101, 103, 109, 111, 130, 131], "580970": 133, "583949": 133, "588": 129, "589": 134, "59": [96, 98, 130, 131], "590": 129, "592284": 134, "599346": 134, "5995": 131, "5996": 131, "5997": 131, "5998": 131, "5999": 131, "6": [6, 7, 57, 58, 59, 60, 63, 64, 96, 98, 100, 101, 102, 103, 106, 109, 111, 129, 133], "60": [6, 7, 70, 71, 72, 96, 98, 100, 101, 102, 103, 109, 111, 129, 130, 131], "600": [129, 130, 131], "6000": 131, "600864e": 131, "61": [96, 98], "613": 129, "619": 134, "62": [96, 98, 100, 101, 103, 109, 111, 130], "620094": 134, "625": 130, "63": [6, 7, 96, 98, 102], "638233": 134, "638814": 133, "64": [96, 98, 100, 101, 103, 109, 111], "640375e": 131, "644321": 131, "648": 134, "65": [96, 98, 106, 130, 131], "650": 131, "654533": 134, "654828": 131, "656436": 131, "66": [6, 7, 96, 98, 100, 101, 102, 103, 109, 111], "666": 129, "666355e": 131, "67": [96, 98], "673": 134, "678": 134, "68": [96, 98, 100, 101, 103, 109, 111, 131], "686406": 133, "687681e": 131, "687766e": 131, "69": [6, 7, 96, 98, 102, 131], "690265": 131, "691386": 134, "692111": [96, 106], "695": 134, "697": 129, "699134": 131, "7": [59, 60, 96, 98, 106, 126, 129, 131, 134], "70": [96, 98, 100, 101, 103, 109, 111, 129, 130, 131], "700": [130, 131], "701577": 133, "702120e": 131, "702987": 133, "704334": 134, "705": 134, "709": 131, "709693e": 131, "71": [96, 98, 131], "712330": 131, "713301": 133, "715": 129, "717409e": 131, "72": [6, 7, 96, 98, 100, 101, 102, 103, 109, 111, 131], "720": [109, 111], "722": 134, "725": [131, 134], "725108": [96, 106], "728385e": 131, "73": [96, 98, 131], "730570e": 131, "735": [129, 130], "739355": 133, "74": [96, 98, 100, 101, 103, 109, 111], "740995e": 131, "746": 129, "75": [6, 7, 96, 98, 102, 130, 131], "750": 130, "751776e": 131, "752267e": 131, "752561e": 131, "752647e": 131, "753204e": 131, "753318e": 131, "753524e": 131, "753555e": 131, "753852e": 131, "753879e": 131, "753887e": 131, "753891e": 131, "753904e": 131, "753913e": 131, "753922e": 131, "753938e": 131, "753942e": 131, "753947e": 131, "753950e": 131, "753951e": 131, "753954e": 131, "753956e": 131, "753960e": 131, "753962e": 131, "753965e": 131, "753985e": 131, "754006e": 131, "754020e": 131, "76": [96, 98, 100, 101, 103, 109, 111], "762993": 131, "764818": 134, "766": [131, 134], "766181": 131, "77": [96, 98], "773": 131, "776": 131, "78": [6, 7, 96, 98, 100, 101, 102, 103, 109, 111], "783": 131, "783658": 131, "785": 131, "787": 131, "788": 131, "789": 131, "79": [96, 98], "794": 131, "795": 131, "796": 131, "798": 131, "798261": 131, "799": 131, "799999999999997": 130, "8": [6, 7, 59, 60, 96, 98, 100, 101, 103, 106, 109, 111, 130, 131, 133, 134], "80": [96, 98, 100, 101, 103, 109, 111, 130, 131, 132], "800": [130, 131], "800000000000001": 130, "802": 131, "803": 131, "803414": 134, "804": 131, "808788": 131, "81": [6, 7, 96, 98, 102, 106], "810": 131, "811": 131, "816": 134, "818159": 134, "82": [96, 98, 100, 101, 103, 109, 111, 131], "820262": 131, "822": 134, "824245": 134, "825": 131, "825108": [96, 106], "828": 134, "83": [96, 98, 131], "84": [6, 7, 96, 98, 100, 101, 102, 103, 109, 111], "842584e": 131, "845461": 133, "845793": 133, "849506": 131, "849585e": 131, "85": [96, 98, 130, 131], "850214": 131, "853": 134, "857721": 134, "858": [129, 130], "858161": [96, 106], "858355": 134, "86": [96, 98, 100, 101, 103, 109, 111], "861142": 131, "863737": 133, "867506": 131, "87": [6, 7, 96, 98, 102], "870276": 133, "875": [130, 131], "875381": 131, "878284": 131, "879889": 131, "88": [96, 98, 100, 101, 103, 109, 111, 130, 131], "880755": [96, 98], "880772": [96, 98], "880781": [96, 98], "880829": [96, 98], "880831": 131, "880843": [96, 98], "881165": [96, 98], "884975": 131, "887068": 133, "888": [129, 130], "89": [96, 98, 131], "890642": 131, "892661": 131, "893690": 131, "893931": 131, "899556": 131, "899571": 134, "8m": 131, "8th": 134, "9": [6, 7, 59, 60, 96, 98, 100, 101, 102, 103, 106, 126, 129, 130, 131, 134], "90": [6, 7, 96, 98, 100, 101, 102, 103, 109, 111, 130, 131], "900443": 131, "903335": 131, "903572": 134, "91": [96, 98], "91278075390278e": 129, "913113": 131, "917771": 131, "919549": 134, "92": [96, 98, 100, 101, 103, 109, 111, 131], "923449": 133, "928803": 131, "93": [6, 7, 96, 98, 102, 131], "930540": 131, "934316": 131, "934599": 133, "936743": 131, "938": 130, "938743": 131, "94": [96, 98, 100, 101, 103, 109, 111, 130, 131], "942418": 131, "95": [4, 5, 22, 24, 59, 60, 96, 98, 130, 131], "95639037695139e": 129, "958697": 134, "96": [6, 7, 96, 98, 100, 101, 102, 103, 109, 111, 131], "960415": 131, "9625": 131, "962500000000006": 131, "963": 131, "967222": 131, "97": [12, 13, 14, 15, 16, 17, 18, 19, 20, 96, 98, 129], "971463": 134, "972016": 131, "973655": 131, "98": [96, 98, 100, 101, 103, 109, 111, 131], "981438": 134, "982446": 131, "983608": 131, "985274": 134, "985282": 131, "99": [6, 7, 59, 60, 96, 98, 102, 106, 131], "990903": 134, "991109": 131, "995": [96, 97], "996428": 131, "998493": 131, "999180": 131, "999869": 131, "A": [1, 2, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 17, 21, 22, 24, 26, 31, 37, 38, 57, 58, 59, 60, 63, 70, 71, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 98, 100, 101, 102, 103, 105, 106, 113, 114, 115, 116, 117, 126, 131, 134, 137, 139], "As": [26, 50, 51, 134], "But": 134, "By": [57, 58, 96, 106, 129, 130, 131, 134], "For": [21, 59, 60, 62, 96, 100, 101, 105, 106, 113, 116, 126, 129, 130, 131, 134, 136, 138, 139], "If": [4, 5, 10, 11, 12, 13, 14, 15, 17, 21, 22, 24, 26, 28, 31, 35, 38, 57, 58, 59, 60, 63, 70, 73, 75, 76, 81, 82, 90, 96, 100, 101, 103, 106, 107, 108, 113, 115, 118, 121, 126, 129, 130, 131, 137, 139], "In": [4, 5, 22, 24, 57, 58, 96, 99, 106, 126, 129, 130, 131, 132, 133, 139], "It": [26, 31, 81, 90, 96, 105, 106, 126, 130, 131, 139], "Not": 129, "One": [107, 108, 126, 127], "That": 137, "The": [1, 2, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 17, 21, 22, 24, 26, 28, 30, 37, 38, 57, 58, 59, 60, 61, 63, 64, 65, 68, 69, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139], "Then": [130, 131, 137], "There": 126, "These": [59, 60, 62, 68, 69, 126, 129, 130, 139], "To": [96, 106, 127, 129, 137], "With": [126, 128], "_": [126, 129, 130, 131, 139], "__deepcopy__": 131, "__dict__": 131, "__init__": 131, "_add_wd_ws_bin": 21, "_attr": 76, "_axesbas": 131, "_axi": 131, "_axis_map": 131, "_base": 131, "_bin_and_group_dataframe_expected_pow": 21, "_cach": 76, "_compute_covari": 21, "_compute_energy_ratio_bootstrap": 4, "_compute_energy_ratio_singl": 4, "_compute_ws_count": [10, 11], "_constructor": [75, 76], "_convert_long_to_wid": [75, 76], "_convert_wide_to_long": [75, 76], "_copy_tick_prop": 131, "_deepcopy_dict": 131, "_deepcopy_dispatch": 131, "_description_": [6, 7], "_discret": 68, "_draw_all_if_interact": 131, "_draw_list_compositing_imag": 131, "_drawstyl": 131, "_fi_set_ws_wd_ti": 96, "_fill_cov_with_var": 21, "_finalize_raster": 131, "_find_sensor_stuck_single_timearrai": 64, "_get_all_unique_flag": [59, 60], "_get_energy_ratio": 6, "_get_energy_ratios_allbin": [57, 58], "_get_leaves_and_knot": 68, "_get_mean_power_curv": [59, 60], "_get_num_points_pair": 21, "_get_render": 131, "_get_tick": 131, "_gui": 126, "_idle_draw_cntx": 131, "_interpolate_with_max_gap": 118, "_is_idle_draw": 131, "_is_uplift": [10, 11], "_linestyl": 131, "_load_a_input_for_wd_bia": [57, 58], "_long_data_column": [75, 76], "_marker": 131, "_marker_funct": 131, "_max": [4, 5, 22, 24], "_metadata": [75, 76], "_mgr": 76, "_nil": 131, "_plot_regress": 68, "_plot_top_sensor_fault": 64, "_process_single_wd": [6, 7], "_pylab_help": 131, "_raster": 131, "_repr_html_": [75, 76], "_reset_mean_power_curv": [59, 60], "_return_uplift_str": [19, 20], "_set_col_by_n_closest_upstream_turbin": 26, "_set_col_by_radius_from_turbin": 26, "_set_col_by_turbin": 26, "_set_col_by_upstream_turbin": 26, "_set_col_by_upstream_turbines_in_radiu": 26, "_set_cov_to_zero": 21, "_set_fillstyl": 131, "_set_legend_alpha_to_on": [59, 60], "_set_mark": 131, "_set_pow_ref_fun": [130, 131], "_set_tuple_mark": 131, "_set_ws_fun": [130, 131], "_shorth_mod": 68, "_solidjoinstyl": 131, "_step": [4, 5, 22, 24], "_synchronize_nul": 21, "_synchronize_var_nulls_back_to_mean": 21, "_total_uplift_expected_power_by_": [15, 16, 18], "_total_uplift_expected_power_singl": 12, "_total_uplift_expected_power_with_bootstrap": 12, "_total_uplift_expected_power_with_standard_error": 12, "_total_uplift_power_ratio_bootstrap": 22, "_total_uplift_power_ratio_singl": 22, "_type_": [6, 7], "_update_label_posit": 131, "_update_tick": 131, "_update_title_posit": 131, "_user_format": [75, 76], "_user_joinstyl": 131, "_wait_cursor_for_draw_cm": 131, "a1": [126, 129], "a2": [126, 129], "a3": [126, 129], "a_in": [4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 81, 92, 132, 133], "a_inest_turbin": 133, "abl": 129, "about": [26, 29, 75, 76, 126, 130, 131], "abov": [59, 60, 96, 106, 126, 127, 129, 130, 131, 132, 133, 134, 137], "abovement": 127, "absolut": [4, 5, 81, 92], "accept": [81, 92], "access": [113, 114, 115, 126, 129, 137], "accommod": 126, "accompani": 15, "accord": [21, 59, 60, 63, 81, 91, 93, 96, 104, 105, 126, 130], "account": [70, 71, 127, 130], "accur": [96, 102, 105, 106, 130, 131], "achiev": [96, 97], "acquir": 131, "across": [4, 5, 22, 24, 81, 83, 84, 86, 87, 88, 89, 96, 97], "act": 132, "action": [130, 131], "activ": [129, 137], "activepower_": 129, "activepowermean": 134, "actual": [59, 60, 126, 129], "ad": [21, 26, 81, 82, 85, 96, 99, 126, 131, 134], "add": [21, 26, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 81, 82, 83, 84, 85, 86, 87, 88, 89, 96, 97, 126, 131, 137], "add_bin_weight": 81, "add_gaussian_blending_to_floris_approx_t": 96, "add_power_ref": 81, "add_power_test": 81, "add_reflected_row": 81, "add_w": 81, "add_wd": 81, "add_wd_bin": 81, "add_ws_bin": 81, "add_ws_est_one_ttyp": [96, 99], "addit": [26, 28, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 81, 83, 84, 86, 87, 88, 89, 91, 129, 134, 135], "addition": [10, 11, 19, 20, 57, 58, 96, 106, 107, 108, 127, 129, 139], "address": [26, 31, 139], "adher": 134, "adjac": 131, "adjust": 126, "advantag": [127, 131], "affect": [96, 102, 105, 129, 130, 131], "after": [26, 28, 109, 111, 126, 129], "again": [81, 85, 132, 135, 137], "against": 126, "aggreg": [59, 60, 81, 90], "agreement": 126, "al": [96, 98, 128, 139], "alarm": 129, "alex": [96, 99, 127], "algorithm": [59, 60, 126, 131], "align": [126, 130, 131, 132, 133, 134], "all": [4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 17, 21, 22, 24, 26, 27, 28, 35, 40, 41, 43, 44, 45, 47, 49, 50, 51, 52, 54, 55, 59, 60, 81, 86, 87, 88, 89, 90, 92, 94, 96, 98, 100, 101, 102, 103, 105, 106, 107, 108, 126, 127, 129, 130, 131, 133, 139], "all_flag": [59, 60], "all_influence_magnitud": [96, 103], "allow": [26, 29, 59, 60, 81, 90, 96, 97, 106, 118, 121, 126, 129, 139], "allow_convert_to_integ": [26, 29], "allow_raster": 131, "along": [78, 79, 80, 127], "alpha": [59, 60, 131], "alreadi": [126, 132], "also": [6, 7, 26, 29, 42, 46, 51, 56, 57, 58, 59, 60, 96, 98, 106, 109, 111, 126, 128, 130, 131, 132, 134, 136, 137, 139], "altern": [132, 139], "although": [81, 92], "altitud": [26, 37, 38], "alvaro": [68, 131], "alvarogonzalezsalcedo": [68, 131], "alwai": [126, 134], "ambient": [6, 7, 96, 105, 106, 130, 139], "among": 136, "amount": [127, 139], "an": [1, 2, 3, 4, 5, 12, 13, 14, 15, 17, 22, 24, 26, 28, 30, 31, 38, 50, 51, 57, 58, 59, 60, 75, 76, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 93, 96, 103, 106, 107, 108, 113, 115, 126, 127, 128, 129, 132, 133, 134, 135, 137, 139], "analag": 132, "analys": [15, 126, 128, 139], "analysi": [25, 26, 28, 77, 96, 106, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136], "analysis_input": [132, 133], "analysisinput": [1, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 57, 58, 132, 133], "analyt": 127, "analyz": [12, 13, 14, 15, 17, 126, 127], "anemometri": 127, "angl": [78, 79, 107, 108, 109, 112, 113, 117, 126, 129, 132, 139], "angle_wrap": [109, 112, 130, 131], "angles_array_deg": [78, 79, 80], "angular": [70, 71, 72, 139], "ani": [4, 5, 10, 11, 12, 13, 14, 15, 17, 21, 22, 24, 26, 28, 29, 57, 58, 59, 60, 63, 64, 65, 76, 81, 86, 87, 88, 89, 90, 95, 96, 99, 100, 101, 102, 103, 106, 113, 114, 115, 126, 130, 131, 137], "annual": 128, "anoth": [75, 76, 129, 130, 131, 134], "anyth": 129, "anywher": 126, "api": 127, "app": 126, "appar": 131, "appear": [81, 82, 96, 100, 113, 116, 130, 131], "append": [126, 131, 132, 133], "appli": [68, 69, 96, 97, 107, 108, 126, 129, 130, 131], "applic": 126, "apply_bias_correct": [130, 131], "apply_filters_to_df": [59, 60], "approach": [12, 13, 14, 15, 17, 96, 99, 105, 127, 137], "appropri": [130, 134], "approxim": [1, 2, 96, 98, 127, 129, 132], "ar": [4, 5, 12, 13, 14, 15, 17, 21, 22, 24, 26, 28, 35, 39, 42, 46, 48, 51, 53, 56, 57, 58, 59, 60, 63, 68, 69, 70, 73, 75, 76, 78, 79, 81, 82, 87, 89, 92, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 113, 116, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 137, 139], "arang": [6, 7, 59, 60, 96, 98, 109, 111, 130, 131, 132, 133, 134], "aren": [4, 5, 22, 24], "arg": [8, 9, 22, 23, 75, 76, 131], "argument": [57, 58, 131, 133, 134], "aris": [59, 60, 127], "around": [59, 60, 81, 85, 118, 121, 126, 127, 128, 130, 131, 136, 139], "arrai": [1, 3, 6, 7, 26, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 64, 65, 70, 73, 78, 79, 80, 81, 85, 87, 89, 91, 93, 96, 98, 100, 101, 102, 103, 104, 109, 110, 111, 112, 113, 117, 118, 121, 122, 124, 130, 131, 132, 133, 139], "arraymanag": 76, "artifici": 135, "artist": 131, "ascend": 118, "assess": [127, 134], "asset": [6, 7], "assign": [4, 5, 22, 24, 59, 60, 63, 81, 82, 126, 130, 131], "assum": [59, 60, 78, 79, 96, 106, 118, 122, 124, 126, 130, 131, 133, 134], "assume_sort": 118, "assumpt": [96, 106], "atmospher": [127, 139], "attribut": [58, 76], "author": 139, "automat": [107, 108, 118, 119, 127], "avail": [4, 5, 22, 24, 59, 60, 126, 127, 129, 130, 131, 136, 137, 139], "averag": [26, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 59, 60, 70, 71, 72, 81, 83, 84, 86, 87, 88, 89, 109, 111, 126, 129, 130, 131, 132, 133, 134, 139], "avoid": [96, 99, 106, 127], "awc": 127, "ax": [10, 11, 15, 17, 26, 38, 59, 60, 129, 131, 132, 133], "axarr": [10, 11, 15, 132, 133], "axi": [6, 7, 26, 38, 59, 60, 78, 79, 80, 118, 121, 126, 129, 131], "axison": 131, "b": 139, "b1": 129, "b2": 129, "back": [75, 76, 96, 103, 128, 129, 131, 132, 133, 134], "backend": 131, "backend_agg": 131, "backend_bas": 131, "background": [6, 7, 26, 38], "backward": [8, 9], "bad": 131, "bai": [128, 139], "balanc": 139, "bar": [59, 60], "base": [2, 4, 5, 7, 9, 11, 16, 18, 20, 22, 24, 57, 58, 59, 60, 62, 63, 68, 69, 76, 81, 82, 90, 96, 101, 113, 114, 115, 126, 127, 129, 130, 131, 132, 134, 139], "baselin": [57, 58, 128, 132, 133], "basic": [59, 63, 126], "bb": 131, "becaus": [21, 59, 60, 63, 96, 106, 126, 127, 130, 131], "becom": [26, 28, 96, 106, 126], "been": [26, 31, 109, 111, 126, 129, 138], "befor": [127, 134], "begin": 134, "behavior": [96, 106, 129], "behind": [26, 37, 129], "being": [10, 11, 59, 60, 96, 97, 99, 106, 126, 127, 129, 130, 131], "below": [59, 60, 96, 105, 106, 107, 108, 125, 126, 129, 131, 134], "benefit": [96, 105, 127, 129], "besid": [26, 27, 126, 129], "best": [126, 130, 131], "better": [57, 58, 59, 60, 129], "between": [1, 3, 4, 5, 12, 13, 14, 15, 17, 21, 22, 24, 26, 38, 57, 58, 59, 60, 66, 67, 75, 76, 81, 85, 94, 95, 96, 104, 106, 107, 108, 109, 111, 112, 113, 116, 118, 121, 126, 129, 130, 131, 132, 134, 139], "bfd": 139, "bia": [57, 58, 66, 67, 109, 111, 126, 139], "bias": 126, "bias_estim": [57, 130, 131], "bias_timestep": [66, 67, 131], "bin": [4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 17, 21, 22, 24, 57, 58, 59, 60, 70, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 127, 132, 133], "bin_and_group_datafram": 81, "bin_col_nam": [81, 91], "bin_cols_in": [4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 81, 92], "bin_cols_with_df_nam": 21, "bin_cols_without_df_nam": [21, 81, 82, 90], "bin_column": 81, "black": 129, "blade": 129, "blade_pitch_": 129, "blend": [96, 97], "block": [1, 2, 3, 132], "blockag": [6, 7], "blockmanag": 76, "blue": 131, "blur": [96, 97], "bokeh": [59, 60, 129], "bool": [1, 2, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 29, 35, 39, 42, 46, 48, 51, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 80, 81, 86, 87, 88, 89, 90, 92, 96, 98, 99, 103, 104, 105, 106, 109, 110, 111, 112, 118, 121, 129], "boolean": [1, 2, 26, 37, 38], "boostreap": 132, "bootstrap": [4, 5, 12, 13, 14, 15, 17, 22, 24, 57, 58, 81, 92, 127, 130, 131, 132], "both": [26, 31, 75, 76, 126, 130, 131, 132, 135], "bound": [4, 5, 15, 22, 24, 26, 32, 33, 34, 57, 58, 59, 60, 96, 106, 109, 110, 111], "boundari": 118, "box": [59, 60, 133], "branch": 68, "bring": [26, 29], "brown": 126, "bsd": 138, "build": [132, 133], "built": [127, 136, 139], "c": [64, 126, 129, 130, 131, 139], "c1": 129, "c2": 129, "cach": 131, "calc_floris_approx_t": [96, 97, 106, 131], "calc_median_min_max_std": [70, 71, 72, 78, 80, 129], "calc_wd_mean_radi": 78, "calcul": [1, 2, 4, 5, 6, 7, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 24, 26, 29, 39, 40, 42, 43, 44, 46, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 66, 67, 70, 71, 72, 78, 79, 80, 81, 82, 85, 92, 96, 98, 101, 104, 106, 126, 128, 130, 131, 133, 139], "calculate_baselin": [57, 58], "calculate_miss": [59, 60], "calculate_wd_statist": 78, "calibr": [126, 130, 136, 139], "call": [10, 11, 26, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 130, 131, 133, 134], "callabl": [57, 58], "callback": 131, "can": [6, 7, 12, 13, 14, 15, 17, 26, 29, 39, 41, 42, 45, 46, 50, 51, 53, 55, 56, 57, 58, 59, 60, 81, 82, 93, 96, 98, 100, 101, 102, 103, 106, 107, 108, 109, 111, 118, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139], "cannot": [59, 63, 96, 106, 126, 130, 131], "canva": 131, "capabl": 135, "capstyl": 131, "captur": [96, 102], "care": 139, "carefulli": [70, 72, 126], "case": [4, 5, 22, 24, 59, 60, 81, 87, 89, 126, 128, 129, 130, 131, 132, 133, 134], "cast": 129, "catch": [130, 131], "catch_warn": [130, 131], "categor": [59, 60], "caus": [96, 99, 130, 131, 139], "cc": [122, 123, 124], "ccp_alpha": [68, 69], "cell": [130, 133, 134], "cener": [68, 131], "center": [4, 5, 22, 24, 70, 71, 72, 132, 133], "central": [136, 139], "certain": [59, 60, 96, 104, 130], "challeng": [127, 135], "chang": [4, 5, 22, 59, 60, 96, 100, 101, 103, 113, 115, 126, 130, 137], "change_threshold": [96, 100, 101, 103, 130, 131], "channel": [131, 134], "channel_name_map": [75, 76, 129, 134], "channel_name_map_artifici": 129, "character": [6, 7], "check": [59, 60, 64, 65, 66, 67, 81, 92, 126, 137], "check_compute_analysis_input": 81, "check_flasc_format": [75, 76], "choic": [4, 5, 15, 17, 22, 24, 59, 60, 126], "choos": 137, "chosen": 134, "chronolog": [59, 60], "churchfield": 139, "circmean": [78, 79], "circular": [26, 35, 47, 49, 52, 70, 73, 78, 109, 111, 118, 121], "circular_col": [70, 73, 126], "circular_mean": [26, 35], "circular_stat": 126, "cite": 139, "cl": 131, "class": [1, 2, 6, 7, 8, 9, 10, 11, 15, 16, 18, 19, 20, 57, 58, 59, 60, 68, 75, 76, 126, 129, 130, 131, 134, 139], "classifi": [59, 60, 62, 63, 126, 130, 131], "claus": 138, "clean": [59, 60, 130], "clerc": [96, 99, 127], "clock": 126, "clone": 137, "close": [126, 129, 130, 131], "close_group": 131, "closest": [26, 39, 53, 96, 104, 130, 131], "clr": 129, "co": 127, "code": [129, 131, 132, 134, 137], "coeffici": [57, 58, 109, 111, 126], "col": 129, "col_nam": [81, 91, 93], "col_out": 26, "col_prefix": [26, 35], "col_ref": 26, "collect": [133, 134], "color": [10, 11, 15, 26, 38, 126, 129, 131], "color_dict": [10, 11, 15, 133], "color_palett": 132, "colorbar": 131, "colormap": 129, "cols_angular": [70, 71, 72, 129, 130], "cols_df1": [109, 111], "cols_df2": [109, 111], "column": [1, 2, 4, 5, 12, 13, 14, 15, 17, 21, 22, 24, 26, 28, 31, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 106, 109, 111, 113, 116, 117, 126, 129, 130, 131, 132, 134, 139], "column_list": 126, "com": [113, 114, 115, 137, 139], "combin": [4, 5, 22, 24, 81, 90, 96, 98, 127, 132, 133], "come": [6, 7, 132, 133], "command": [126, 137], "comment": 131, "commit": 137, "common": [59, 60, 68, 69, 109, 111, 113, 116, 122, 123, 124, 126], "common_windfarm_inform": [129, 130], "commonli": 126, "commun": 136, "comon": 126, "compar": [12, 13, 14, 15, 17, 57, 58, 64, 65, 109, 111, 126, 127, 139], "comparison": [96, 106, 109, 111, 126, 128, 130, 131, 139], "compat": [8, 9, 129], "complet": [59, 60, 126, 137], "complex": [68, 69], "compon": [10, 11], "composit": 131, "compromis": 126, "comput": [4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 57, 58, 70, 72, 78, 79, 96, 103, 106, 126, 127, 128, 130, 131], "computation": 127, "compute_energy_ratio": [4, 81, 92, 132, 133], "compute_total_uplift": 22, "concaten": [1, 2], "cond": [59, 62, 126, 129], "conda": 137, "condit": [59, 60, 62, 63, 96, 105, 106, 126, 127, 129, 139], "conduct": 135, "confid": [127, 132], "configur": 137, "confirm": [126, 131], "confus": [59, 60], "connect": [59, 60], "consecut": [59, 60, 64, 65, 126], "consequ": 139, "consid": [12, 14, 26, 28, 39, 42, 46, 48, 51, 53, 56, 57, 58, 59, 60, 62, 70, 72, 75, 76, 81, 85, 96, 104, 126, 129], "consider": 131, "consist": [26, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 66, 67, 113, 116, 126, 130, 131, 132, 133, 139], "consol": [59, 60, 63, 96, 99, 106, 130, 131], "constant": [59, 60, 126, 131], "construct": [4, 5, 22, 24, 130, 131, 132], "consum": 129, "contact": 138, "contain": [4, 5, 6, 7, 12, 13, 14, 15, 17, 22, 24, 26, 37, 38, 39, 41, 42, 45, 46, 48, 50, 51, 53, 55, 56, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 100, 101, 102, 103, 105, 106, 107, 108, 113, 116, 117, 118, 125, 126, 131, 132, 137, 139], "content": [126, 138], "continu": [107, 108, 132], "control": [127, 129, 132, 136], "conveni": [10, 11, 19, 20, 134], "convent": [126, 129, 132, 134], "converg": [59, 60, 130, 131], "convers": [75, 76, 134], "convert": [10, 11, 75, 76, 126, 129, 130, 131], "convert_time_to_datetim": [75, 76, 129], "convert_to_flasc_format": [75, 76, 129, 134], "convert_to_user_format": [75, 76, 134], "coordin": [26, 37, 132, 133], "copi": [21, 75, 76, 96, 106, 129, 130, 131, 134], "copier": 131, "copy_metadata": [75, 76], "correct": [57, 58, 59, 60, 68, 69, 109, 111, 126, 135, 139], "correct_y_shift": [109, 111], "correctli": 137, "correl": [57, 58, 59, 60, 109, 111, 126], "correspond": [4, 5, 21, 26, 30, 39, 41, 42, 45, 46, 50, 51, 53, 55, 56, 59, 60, 81, 85], "corrupt": [26, 28], "cosin": [122, 123], "cosine_expon": [122, 123], "cost": [57, 58, 109, 110, 111, 112, 130, 131], "could": [75, 76, 126, 131, 134], "count": [4, 5, 10, 11, 21, 22, 24, 59, 61, 81, 82, 131], "counter": 129, "coupl": [59, 60, 129], "cov": [12, 13, 14, 15, 17, 21], "cov_term": [12, 13, 14, 15, 16, 17, 18, 19, 20], "covari": [12, 13, 14, 15, 17, 21, 127], "cover": [57, 58, 96, 106, 130, 131], "creat": [10, 11, 26, 38, 59, 60, 107, 108, 129, 130, 131, 132, 133, 137], "criteria": 126, "cross": [66, 67, 126], "crosscheck_northing_offset_consist": [66, 130, 131], "csv": [126, 129], "cumul": 139, "curl": 139, "current": [57, 58, 126, 127, 129, 130, 131, 134], "curtail": [59, 63, 126, 129, 130, 131], "curv": [59, 60, 96, 97, 99, 109, 112, 126, 129, 130, 131, 139], "cut": [59, 60, 81, 96, 97, 126, 129], "cutoff_w": [59, 60, 129], "cwd": [132, 133], "d": [96, 103], "d2": 131, "dai": [26, 37, 38, 66, 67, 109, 111, 131], "dash": 126, "data": [1, 2, 4, 5, 12, 13, 14, 15, 17, 21, 22, 24, 26, 28, 29, 36, 37, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 81, 82, 90, 92, 94, 95, 96, 99, 105, 106, 109, 110, 113, 116, 117, 118, 120, 121, 125, 127, 128, 132, 133, 135, 136, 139], "data_dict": 134, "data_indices_map": 129, "data_process": [125, 129, 130, 131, 133, 135], "databas": 126, "datafram": [1, 2, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 111, 113, 116, 117, 118, 119, 120, 126, 129, 130, 131, 133, 134], "dataframe_manipul": [129, 130, 131, 133], "datapoint": [59, 60], "dataset": [57, 58, 59, 60, 75, 76, 107, 108, 126, 128, 129, 130, 131, 135], "datatyp": 129, "date": [68, 126, 132], "date_rang": 131, "date_tim": 68, "datetim": [66, 67, 70, 71, 72, 75, 76, 118, 119, 130, 131], "datetime64": 129, "datetime_column": [26, 37], "daylight": [26, 37], "daytim": [26, 37], "deadband": [59, 60], "deal": [126, 129, 139], "debug": [130, 131], "decid": 129, "decis": [68, 129], "decisiontreeregressor": 68, "declar": [68, 134, 137], "decompress": 129, "decreas": [59, 60, 129], "dedic": 137, "deep": 139, "deepcopi": 131, "def": [129, 130, 131], "default": [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 17, 21, 22, 24, 26, 27, 28, 29, 35, 37, 39, 42, 46, 48, 51, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 81, 82, 87, 89, 90, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 122, 123, 124, 129, 130, 131], "deficit": 126, "defin": [57, 58, 59, 60, 126, 128, 129, 130, 131, 132, 133, 139], "deg": [78, 80, 96, 98, 102, 105, 106, 122, 123, 124, 126, 129, 130, 131, 132, 133, 139], "degre": [4, 5, 22, 24, 57, 58, 78, 79, 80, 81, 85, 96, 97, 105, 107, 108, 118, 121, 122, 123, 124, 126, 129, 130, 131], "degress": [26, 37], "delai": 129, "delet": 129, "demo": 135, "demo_dataset_metmast_600": 129, "demo_dataset_scada_600": 129, "demonstr": [126, 131, 134, 135], "denot": [26, 37, 96, 100, 101, 103, 122, 124, 126, 127, 129], "densiti": [96, 97], "dep_indices_by_wd": [96, 103], "depart": 136, "depend": [96, 100, 101, 103, 105, 106, 131, 137], "depict": [59, 60, 62, 107, 108], "deprec": [8, 9, 22, 23, 129], "depth": [68, 69, 135], "derat": 129, "deriv": [4, 6, 7, 22, 26, 50, 51, 81, 94, 95, 96, 102, 127, 139], "describ": 127, "descript": [59, 60, 127], "design": [136, 139], "desir": 134, "dest": 131, "detail": [125, 128, 136, 139], "detect": [96, 103, 126, 129, 131, 139], "determin": [12, 13, 14, 15, 17, 26, 37, 39, 41, 42, 45, 46, 48, 50, 51, 53, 55, 56, 57, 58, 59, 60, 78, 80, 81, 82, 96, 100, 101, 102, 103, 104, 105, 126, 127, 130, 131, 139], "develop": [68, 127, 131, 135, 136], "deviat": [59, 60, 64, 65, 68, 69, 70, 72, 78, 80, 96, 97, 122, 123, 124, 126, 129], "df": [4, 6, 12, 21, 22, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 106, 118, 120, 126, 129, 130, 131, 133, 134], "df1": [109, 111], "df2": [109, 111], "df_": [4, 5, 12, 21, 22, 24, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95], "df_1": [113, 116, 129], "df_2": [113, 116], "df_approx": [96, 98, 106, 130, 131], "df_baseline_noisy_pd": 132, "df_bin": 21, "df_cov": 21, "df_downsampl": [70, 130], "df_drop_nan_row": 26, "df_fi_approx": [96, 97, 130, 131], "df_filter": [59, 60], "df_find_and_fill_data_gaps_with_miss": 26, "df_fm_approx": [57, 58, 130, 131], "df_fm_approx_gch": 130, "df_freq": [4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 81, 82, 92], "df_freq_pl": [4, 12, 22, 81, 82], "df_get_no_faulty_measur": [59, 129], "df_impacting_turbin": [59, 63, 130, 131], "df_in": [26, 29, 70, 71, 72, 129], "df_list_in": [1, 2], "df_mark_turbdata_as_faulti": 59, "df_metmast": 129, "df_metmast_raw": [129, 130], "df_movavg": 129, "df_movingaverag": [70, 129], "df_name": [1, 2, 4, 5, 12, 13, 14, 15, 17, 21, 22, 24, 81, 82, 90], "df_names_subset": [10, 11], "df_opt": [107, 108], "df_out": [96, 100, 101, 130, 131], "df_pow_curv": 129, "df_pow_ref_mapping_func": [57, 58, 130, 131], "df_raw": [6, 7], "df_re": 126, "df_reduce_precis": [26, 129], "df_resample_by_interpol": [70, 126], "df_result": [10, 11], "df_scada": [96, 99, 113, 117, 129, 130, 131], "df_scada_600s_wspowfilt": [129, 130], "df_scada_data_600s_filtered_and_northing_calibr": 130, "df_scada_filt": 129, "df_scada_format": 129, "df_scada_homogen": 131, "df_scada_marked_faulty_northing_drift": [130, 131], "df_scada_non_homogen": 131, "df_scada_northing_calibr": 130, "df_scada_northing_calibrated_interturbine_filt": [130, 131], "df_scada_northing_uncalibr": 130, "df_scada_raw": [129, 130], "df_sort_and_find_dupl": 26, "df_sort_and_fix_dupl": 26, "df_upstream": [6, 7, 26, 39, 41, 42, 45, 46, 50, 51, 53, 55, 56, 96, 105, 130, 131], "df_wakesteering_noisy_pd": 132, "df_windup": 134, "df_ws_mapping_func": [57, 58, 130, 131], "dfm": [129, 130, 131, 133], "dic": [113, 114, 115], "dict": [1, 2, 10, 11, 12, 15, 19, 20, 22, 24, 76, 109, 110, 113, 114, 115], "dictionari": [10, 11, 12, 15, 22, 109, 110, 111, 113, 114, 115, 134], "dictrionari": 134, "differ": [15, 17, 26, 31, 38, 57, 58, 59, 60, 68, 69, 81, 85, 96, 97, 126, 127, 129, 131, 132, 133, 139], "differenti": [26, 38], "digit": [126, 134], "dimens": [75, 76, 107, 108], "dimension": [96, 103], "direciton": [96, 103], "direct": [4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 24, 26, 33, 39, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 63, 68, 69, 78, 79, 80, 81, 85, 87, 90, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 113, 117, 122, 123, 124, 126, 127, 129, 134, 139], "directionm": 126, "directli": [59, 60, 81, 82, 92, 96, 97, 99, 127, 129, 130, 131, 134, 137], "directori": [129, 130, 137], "dirt": 129, "disabl": [130, 131], "discret": [57, 58, 68, 69, 96, 105, 126], "discuss": 139, "displai": [75, 76], "distanc": [4, 5, 22, 24, 59, 60, 81, 85, 96, 104, 118, 121], "distinguish": [26, 38], "distribut": [6, 7, 10, 11, 15, 131, 132], "divid": [125, 132], "do": [6, 7, 26, 29, 59, 60, 70, 72, 126, 130, 131, 137], "doc": [129, 137], "document": [126, 127], "doe": [26, 31, 57, 58, 81, 92, 126, 127, 129, 130, 131], "doekemeij": [128, 139], "don": 131, "done": [118, 121, 126, 129, 131, 132], "doubl": 129, "down": [59, 60, 107, 108, 130, 131], "download": [126, 135, 137], "downsampl": [70, 71, 129, 130, 139], "downstream": [109, 110, 130, 131, 133], "downtim": [59, 63], "downtimecounter_col": [75, 76], "downward": [59, 60], "dpi": [57, 58, 64, 129], "draw": 131, "draw_al": 131, "draw_idl": 131, "draw_wrapp": 131, "drawn": [59, 60], "drift": [130, 131], "driven": 136, "drop": [26, 27, 126, 129], "dsf22": 139, "dt": [118, 119], "dtype": [129, 132, 133], "duc": [68, 131], "due": [96, 106, 126, 129], "dumb": [132, 133], "duplic": [26, 30, 31], "duplicate_entries_idx": [26, 30], "dure": [59, 60, 126], "dwd_opt": [109, 112], "dx": [96, 102, 105], "dy": [96, 102, 105], "dy_ev": [109, 112, 130, 131], "e": [26, 31, 57, 58, 59, 60, 63, 96, 102, 103, 106, 118, 121, 126, 128, 129, 130, 134, 137, 139], "each": [1, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 17, 21, 22, 24, 57, 58, 59, 60, 61, 63, 66, 67, 81, 85, 90, 96, 98, 100, 101, 102, 103, 105, 113, 117, 122, 124, 125, 126, 127, 129, 130, 131, 132, 134], "easi": 126, "easiest": 135, "edg": [81, 85, 87, 89, 91, 93], "edit": 137, "effect": [6, 7, 59, 60, 131, 139], "effici": [26, 29, 126, 127, 139], "either": [81, 82, 126, 130, 131], "element": [1, 3, 4, 5, 22, 24, 96, 103, 109, 112], "elif": 131, "elimin": [96, 106], "els": [129, 130, 131], "email": 139, "emgauss": [122, 123, 124], "empir": [96, 105, 130, 131], "empti": [96, 103], "enabl": [81, 85, 96, 105], "encod": 139, "encount": [130, 131], "encourag": 135, "end": [59, 60, 107, 108, 109, 111, 113, 114, 127, 128, 129, 130, 131], "energi": [0, 1, 2, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 17, 22, 23, 24, 57, 58, 81, 85, 94, 95, 96, 106, 125, 126, 130, 131, 136, 139], "energy_ratio": [132, 133], "energy_ratio_wd_bias_estim": [130, 131], "energyratioin": 132, "energyratioinput": 8, "energyratiooutput": [4, 5, 10, 22, 24], "enforc": 126, "engi": [68, 131], "engin": 128, "enough": [12, 13, 14, 15, 17], "ensur": [96, 106, 113, 116], "entir": [96, 105, 106, 126, 130, 131], "entri": [26, 27, 31, 57, 58, 59, 60, 62, 96, 100, 101, 118, 119, 136], "enumer": 129, "env": 137, "environ": 137, "equal": [4, 5, 22, 24, 26, 28, 30, 31, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 81, 87, 89, 91, 93, 96, 102, 106, 107, 108, 130, 131, 132], "equat": 127, "equip": 126, "equival": 129, "er_n_btstrp": [57, 58, 130, 131], "er_out": [132, 133], "er_out_2": 133, "er_out_3": 133, "er_wd_bin_width": [57, 58, 130, 131], "er_wd_step": [57, 58, 130, 131], "er_ws_step": [57, 58, 130, 131], "eric": 127, "erp": [132, 133], "error": [4, 5, 12, 13, 14, 15, 17, 75, 76, 96, 99, 109, 112, 127, 129], "especi": [96, 99, 127], "essenti": [57, 58, 96, 101], "estim": [6, 7, 57, 58, 59, 60, 68, 96, 99, 109, 110, 118, 119, 126, 127, 136, 139], "estimate_biases_with_reference_wd": [130, 131], "estimate_dt": 118, "estimate_heterogen": [6, 7], "estimate_ti": 109, "estimate_wd_bia": [57, 58, 130, 131], "estimate_ws_with_flori": 96, "et": [57, 58, 128, 139], "etc": 129, "evalu": [57, 58, 96, 97, 98, 102, 109, 110, 111, 112, 126, 130, 131], "even": [26, 29, 59, 60, 129], "everi": [59, 60, 81, 92, 96, 105, 126, 130, 131], "everyth": 137, "exact": [59, 60, 126], "exactli": 126, "exampl": [59, 60, 62, 96, 98, 99, 106, 122, 127, 129, 130, 131, 132, 134, 137, 139], "examples_artifical_data": 126, "examples_artificial_data": [128, 135], "examples_smarteol": 135, "exce": [129, 130, 131], "excel": 126, "except": [26, 31, 81, 92], "exclud": [26, 39, 41, 45, 50, 53, 55], "exclude_column": [59, 62], "exclude_turb": [26, 39, 41, 45, 50, 53, 55], "exhaust": 126, "exist": [15, 17, 126, 130], "exist_ok": 129, "expand": [96, 98], "expect": [12, 13, 15, 16, 17, 18, 19, 20, 21, 75, 76, 113, 117, 132], "expected_power_analysi": 127, "expectedpoweranalysisoutput": [12, 13, 19], "expens": 127, "experi": [130, 131, 135, 136, 139], "experienc": [59, 60], "explicit": [4, 5, 22, 24], "explicitli": 129, "explor": [68, 69, 126, 129], "expon": [122, 123], "export": [12, 21, 126], "export_to_windup_format": [75, 76, 134], "expr": [81, 93], "express": [81, 93, 127], "extent": 131, "extern": 126, "extra": [4, 5, 22, 24, 26, 28], "extract": [96, 100, 101], "extractal": 129, "extrapol": 118, "extrapolate_ti": [96, 106], "extrapolate_w": [96, 106], "f": [129, 130, 131, 132, 133], "face": 132, "facilit": [57, 58], "factor": [26, 29, 126], "fair": [96, 106, 130, 131], "fairli": 126, "fall": [96, 106], "fals": [1, 2, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 26, 27, 29, 35, 42, 46, 48, 51, 56, 57, 58, 59, 60, 64, 65, 68, 69, 70, 71, 72, 75, 76, 81, 86, 87, 88, 89, 90, 96, 98, 99, 103, 104, 105, 109, 110, 111, 118, 121, 126, 129, 130, 131, 132, 133], "far": [59, 60], "farm": [6, 7, 12, 13, 14, 15, 17, 57, 58, 59, 60, 96, 100, 101, 102, 103, 105, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 136, 139], "fashion": [96, 106, 118, 121], "fast": [59, 60], "faster": 126, "fault": [59, 60, 63, 64, 65, 126, 139], "fault_ratio": 129, "faulti": [59, 60, 61, 62, 63, 126, 129, 130, 131], "faults_by_layout": 129, "faulty_turbin": [130, 131], "fdf": 134, "fdf_flasc": 134, "fdf_user": 134, "feather": [75, 76, 126, 139], "featur": 129, "feed": 129, "felt": 129, "few": 134, "fi": [59, 63, 129, 131], "fi_pci": 131, "field": [127, 135, 136, 139], "fig": [59, 60, 129, 131, 132, 133], "fig_format": 64, "fig_out": 129, "figsiz": [129, 131, 133], "figur": [6, 7, 10, 11, 15, 57, 58, 59, 60, 64, 65, 66, 67, 126, 129, 130, 131], "figure_save_path": [129, 130, 131], "figurecanvasagg": 131, "figurecanvasbas": 131, "file": [26, 28, 126, 130, 131, 139], "file_path": [132, 133], "filenam": 129, "fill": [21, 26, 28, 31, 96, 102, 118, 121], "fill_al": 21, "fillstyl": 131, "filt": [129, 130, 131], "filter": [26, 32, 33, 34, 81, 94, 95, 130, 131, 136, 139], "filter_all_nul": 81, "filter_any_nul": 81, "filter_by_condit": [59, 60, 129], "filter_by_floris_power_curv": [59, 60], "filter_by_power_curv": [59, 60, 126, 129], "filter_by_sensor_stuck_fault": [59, 60, 129], "filter_by_ws_pow_curv": 129, "filter_df_by_faulty_impacting_turbin": [59, 130, 131], "filter_df_by_ti": 26, "filter_df_by_w": 26, "filter_df_by_wd": 26, "filter_for_faults_in_impacting_turbin": [130, 131], "filters_over_time_": 129, "filterwarn": [130, 131], "final": [26, 50, 51, 126, 127, 130, 139], "find": [26, 28, 30, 64, 65, 96, 104, 106, 109, 111, 112, 126, 130, 131], "find_sensor_stuck_fault": 64, "find_timeshift_between_df": 109, "finish": [130, 131], "finit": [96, 106], "first": [4, 5, 22, 24, 96, 100, 122, 124, 126, 127, 129, 130, 131, 132], "first_clean_turbid": [130, 131], "firstli": 126, "fit": [96, 99], "five": 126, "fix": 131, "flag": [59, 60, 62, 96, 103, 126, 129, 130, 131], "flasc": [125, 126, 127, 128, 130, 132, 133, 137, 138], "flasc2024": 139, "flasc_datafram": 125, "flasc_filt": 129, "flascdatafram": [1, 2, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 96, 99, 106, 109, 111, 113, 116, 117, 118, 120, 125, 127, 129, 131, 132, 133], "flascfilt": [59, 126, 129], "flatten": [70, 74, 132, 133], "flatten_col": 70, "fleme": [127, 138, 139], "float": [4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 32, 33, 34, 37, 39, 42, 46, 48, 51, 53, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 73, 78, 80, 81, 85, 87, 89, 90, 92, 96, 97, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 118, 121, 122, 123, 124, 130, 131], "float32": [26, 29, 129], "float64": [26, 29, 68, 129], "flopt": [130, 131], "flori": [0, 6, 7, 25, 57, 58, 59, 60, 66, 67, 77, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 113, 116, 117, 122, 123, 124, 126, 129, 134, 136, 137, 139], "floris_input_artifici": [132, 133], "floris_model": [130, 131], "floris_tool": [26, 39, 41, 42, 45, 46, 50, 51, 53, 55, 56, 59, 63, 130, 131], "florismodel": [59, 60, 96, 98, 99, 100, 101, 102, 103, 105, 109, 110, 113, 117, 122, 123, 124, 130, 131, 132, 133], "flow": [6, 7, 96, 105, 129, 132], "fm": [6, 7, 59, 60, 66, 67, 96, 98, 99, 102, 105, 109, 110, 129, 130, 131, 132, 133], "fm_in": [96, 100, 101, 103, 113, 117, 130, 131], "fm_path": [132, 133], "fmin": [109, 110], "fn_approx": 130, "focu": 127, "folder": [129, 130, 137], "follow": [4, 5, 22, 24, 57, 58, 78, 80, 96, 99, 109, 110, 111, 112, 126, 127, 129, 134, 135, 136, 137], "font": 131, "for_layout_onli": 131, "forc": 131, "forget": 131, "form": [96, 106, 126], "format": [57, 58, 59, 60, 61, 62, 63, 75, 76, 118, 119, 130, 131, 139], "format_tick": 131, "formatt": 131, "former": [26, 30], "formula": 127, "forth": 134, "found": [59, 60, 96, 103, 126, 129, 134, 135, 139], "fout": [129, 130], "fp": [118, 121], "fraction": [96, 100, 101, 103], "frame": [96, 105, 139], "freestream": [96, 105, 129, 130, 131], "freq": 131, "freq_val": [4, 5, 22, 24], "frequenc": [4, 5, 10, 11, 12, 13, 14, 15, 17, 22, 24, 81, 82, 92, 127], "from": [4, 5, 6, 7, 12, 21, 22, 24, 26, 29, 39, 42, 46, 48, 50, 51, 53, 56, 57, 58, 59, 60, 68, 75, 76, 81, 82, 85, 92, 94, 95, 96, 97, 98, 99, 102, 104, 106, 107, 108, 113, 114, 118, 121, 126, 127, 129, 130, 132, 133, 135, 137, 139], "front": [126, 132, 133], "frozen": [59, 60], "fsc": [130, 131], "fto": 130, "ftool": [59, 63, 130, 131], "ftp": 126, "ftr": 130, "full": [107, 108, 127, 134], "function": [1, 4, 12, 15, 17, 22, 23, 26, 28, 30, 31, 38, 57, 58, 59, 60, 64, 66, 68, 70, 78, 81, 82, 85, 90, 92, 96, 97, 98, 99, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 122, 125, 126, 127, 130, 131, 132, 133, 134, 139], "further": [26, 28, 29, 126, 127, 130, 139], "furthest": [96, 104], "futur": 129, "futurewarn": 129, "g": [57, 58, 59, 60, 96, 103, 106, 126, 128, 129, 130, 134], "gap": [26, 28, 70, 73, 118, 121, 126], "gather": [59, 60], "gaussian": [96, 97, 139], "gcf": 131, "gch": [122, 123, 124, 132, 133], "gener": [1, 3, 6, 7, 26, 39, 41, 42, 45, 46, 50, 51, 53, 55, 56, 59, 60, 61, 62, 81, 87, 89, 96, 97, 106, 125, 126, 129, 135], "generate_block_list": 1, "generate_floris_hetmap": [6, 7], "genrpm_col": [75, 76], "genrpmmean": 134, "geometr": [96, 102], "get": [1, 2, 21, 26, 35, 36, 57, 58, 59, 61, 68, 69, 96, 100, 101, 102, 103, 107, 108, 113, 114, 118, 120, 129, 130, 131], "get_agg_filt": 131, "get_all_dependent_turbin": 96, "get_all_fig_manag": 131, "get_all_impacting_turbin": [59, 63, 96, 130, 131], "get_all_impacting_turbines_geometr": 96, "get_bias_for_single_turbin": [130, 131], "get_column_mean": 26, "get_dependent_turbines_by_wd": [96, 100, 101], "get_df": [1, 2, 12, 21, 59, 60, 129], "get_figur": 131, "get_label_posit": 131, "get_major_tick": 131, "get_majortickloc": 131, "get_num_turbin": [26, 118, 129, 130, 131], "get_power_curv": [59, 60], "get_ticks_posit": 131, "get_tightbbox": 131, "get_turbine_pow": [131, 132, 133], "get_turbs_in_radiu": [96, 130, 131], "get_upstream_turbs_flori": [26, 39, 41, 42, 45, 46, 50, 51, 53, 55, 56, 96, 130, 131], "get_window_ext": 131, "get_yaw_angles_interpol": 107, "getattr": 131, "getcwd": [129, 130], "git": 137, "github": [127, 136, 137, 139], "give": [4, 22, 81, 91, 137], "given": [4, 5, 22, 24, 26, 37, 68, 75, 76, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 91, 93, 109, 110, 134], "go": [59, 60, 75, 76, 131], "goe": 129, "gone": 126, "gonzalez": [68, 131], "gonz\u00e1lez": [68, 131], "good": [96, 105, 126, 130, 131, 135], "got": 133, "gov": [138, 139], "grab": [59, 60, 130], "greater": [81, 87, 89, 91, 93], "green": [126, 130, 131], "grid": [96, 98, 106, 130, 132, 133], "gridlin": 131, "group": [21, 81, 82, 90], "groupbi": 126, "guess": [130, 131], "gui": [126, 131], "guid": 136, "h": [109, 111], "ha": [4, 5, 22, 24, 26, 37, 57, 58, 75, 76, 81, 85, 96, 97, 105, 106, 109, 111, 126, 129, 130, 131, 134, 138], "half": [4, 5, 22, 24, 129], "halfwai": 131, "hand": [59, 60, 96, 106, 122, 123, 124], "handl": [70, 72, 75, 76, 78, 79, 81, 90], "happen": [59, 60, 131, 134], "hard": 129, "has_imag": 131, "hashabl": 76, "have": [6, 7, 26, 27, 31, 59, 60, 96, 97, 100, 102, 103, 105, 126, 129, 130, 131, 134, 139], "head": [126, 129, 130, 131, 133, 134], "heavili": 126, "help": [6, 7, 59, 60, 139], "helper": 134, "henc": [26, 28, 59, 60, 129, 130, 131], "here": [75, 76, 126, 129, 130, 131, 132], "heterogen": [6, 7], "heterogeneity_mapp": 6, "hidden": 132, "high": [59, 60, 62, 126, 129], "higher": [59, 60, 107, 108, 126, 127], "highest": [96, 106], "highlight": [59, 60], "histogram": 15, "histor": [96, 106, 128, 134, 136, 139], "histori": [59, 60, 132, 133], "hoger": 68, "hold": [1, 2, 26, 28], "home": [129, 131], "homegin": 131, "homogen": [68, 69, 131], "homogenize_hog": [68, 131], "hostedtoolcach": 131, "hour": [26, 37, 126], "hous": [136, 139], "how": [4, 5, 22, 24, 78, 79, 81, 92, 126, 128, 129, 132, 133, 139], "howev": [96, 97, 99, 126, 127, 130, 131, 132], "html": 129, "http": [132, 137, 139], "hypothes": [57, 58], "hypothet": 131, "hz": 129, "i": [1, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 17, 21, 22, 24, 26, 31, 37, 39, 42, 46, 48, 50, 51, 53, 56, 57, 58, 59, 60, 62, 63, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 85, 87, 89, 91, 92, 93, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139], "ic": 129, "id": 131, "id_var": 134, "idea": [57, 58], "identifi": [59, 60, 61, 62, 126, 129], "idx": [113, 115], "ignor": [4, 5, 22, 24, 26, 28, 126, 130, 131], "ii": [129, 130, 131], "illustr": 132, "imag": 131, "image_group": 131, "impact": [59, 63, 96, 101, 102, 130, 131, 139], "impacting_turbin": [96, 102], "implement": [59, 60, 96, 99, 127, 131], "implicitli": [96, 106], "import": [26, 28, 59, 63, 126, 131, 132, 133, 134, 137, 139], "in_flasc_format": [75, 76], "includ": [4, 5, 12, 13, 14, 15, 17, 22, 24, 26, 42, 46, 48, 51, 56, 59, 60, 78, 80, 96, 97, 104, 113, 127, 131, 132, 134, 139], "include_itself": [26, 42, 46, 48, 51, 56, 96, 104, 130, 131], "inclus": 126, "incompat": 129, "inconsequ": 126, "inconsist": [126, 130, 131], "incorpor": [107, 108], "increas": [96, 98, 127, 129, 130, 131], "index": [22, 26, 30, 31, 59, 60, 70, 71, 72, 113, 115, 134], "index_arrai": 64, "index_fault": 64, "indic": [12, 13, 14, 15, 17, 26, 28, 30, 37, 38, 39, 41, 42, 45, 46, 50, 51, 53, 55, 56, 59, 60, 63, 64, 65, 66, 67, 81, 92, 129], "individu": [12, 13, 14, 15, 17, 59, 60, 126, 127, 130, 131], "inflow": [6, 7, 59, 63, 96, 98, 106, 122, 123, 124, 134], "influenc": [96, 103], "inform": [6, 7, 59, 60, 63, 70, 73, 75, 76, 96, 98, 99, 106, 126, 130, 131, 136, 138], "inher": 139, "initi": [57, 58, 131], "inlin": 129, "inplac": [75, 76, 129, 134], "input": [1, 2, 26, 27, 37, 38, 70, 71, 72, 73, 74, 78, 79, 81, 82, 90, 92, 107, 108, 118, 121, 127, 130, 131, 133], "insert": [26, 28, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 129, 130, 131], "insid": 139, "inspect": [59, 60], "instanc": [57, 58], "instanti": 134, "instead": [4, 5, 81, 90, 92, 126, 127, 129], "instruct": [132, 135], "int": [1, 2, 3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 26, 30, 35, 36, 39, 40, 41, 42, 44, 45, 46, 48, 49, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 90, 92, 96, 100, 101, 103, 104, 109, 110, 111, 113, 115, 118, 120, 131], "int16": [26, 29], "int32": [26, 29], "int64": 129, "int8": [26, 29], "integ": [1, 3, 26, 29, 59, 60, 122, 124], "integr": 136, "intend": 136, "intens": [26, 32, 40, 43, 44, 45, 57, 58, 96, 98, 106, 109, 110, 129, 130, 131, 139], "intention": 135, "inter": [59, 63], "interact": [126, 129, 137], "interest": [26, 39, 42, 46, 48, 51, 53, 56, 59, 60, 63, 96, 100, 101, 102, 103, 105, 137], "interfac": [129, 130, 139], "intermedi": [26, 50, 51], "intern": [59, 60, 126, 129], "interp_method": [70, 73, 126], "interp_with_max_gap": 118, "interpol": [26, 28, 70, 73, 96, 106, 107, 108, 118, 121, 126, 130, 131, 139], "interpolate_floris_from_df_approx": 96, "interv": 127, "introduc": [134, 135], "invalid": 126, "investig": [59, 60, 127], "invok": 127, "io": 126, "ipynb": 135, "irregular": [96, 106], "irregularli": 129, "is_dai": [26, 37, 38], "is_day_or_night": 26, "is_interact": 131, "is_operation_norm": [59, 60, 129], "is_operation_normal_": [59, 60, 126, 129], "is_operation_normal_000": [126, 129], "is_operation_normal_001": 129, "is_operation_normal_002": 129, "is_operation_normal_003": 129, "is_operation_normal_004": 129, "is_operation_normal_005": 129, "is_operation_normal_006": 129, "isinst": 131, "isna": 129, "issu": [59, 60, 63, 96, 106, 126, 129, 130, 131], "issubclass": 131, "item": [113, 114, 115, 129, 131], "iter": [57, 58, 59, 60, 81, 92, 127, 129, 130, 131, 132], "iterat": [57, 58, 59, 60, 62], "its": [26, 31, 57, 58, 59, 60, 122, 124, 126, 127, 130, 131, 134, 136, 137], "itself": [6, 7, 96, 104, 127, 132], "j": [109, 110, 111, 139], "j_opt": [109, 110, 111, 112], "jensen": [122, 123, 124], "join": [129, 130, 131], "joinstyl": 131, "journal": 139, "jump": [26, 28, 68, 69, 130, 131], "jupyt": [75, 76, 129, 137], "just": [59, 60, 131], "k": 131, "kanev": 127, "keep": [75, 76, 129, 130, 132], "kei": [109, 110, 111, 113, 114, 115, 128, 131], "keyboardinterrupt": 131, "keyword": 133, "kind": [118, 121], "king": 139, "knot": [68, 69, 131], "knot_dat": 131, "know": [59, 63, 130, 131, 132, 133, 135, 139], "knowledg": [130, 131], "known": [59, 60, 126], "kw": [59, 60, 129], "kwarg": [8, 9, 22, 23, 75, 76, 131], "label": [10, 11, 15, 59, 60, 81, 91, 129, 131, 132, 133], "label1": 131, "label2": 131, "lag": [26, 37], "lag_hour": [26, 37], "larg": [26, 28, 57, 58, 96, 98, 106, 126, 127, 129, 130, 136, 139], "larger": [26, 28, 57, 58, 118, 121], "largest": [81, 87, 89, 91, 93, 126], "last": [68, 69, 96, 106, 130, 131, 133], "lat": [96, 104], "later": 131, "latex": 139, "latitud": [26, 37], "layout": [6, 7, 126], "layout_i": [129, 130, 131, 132, 133], "layout_visu": [131, 132, 133], "layout_x": [129, 130, 131, 132, 133], "layoutviz": [132, 133], "learn": [96, 99], "least": [59, 60, 61, 96, 102, 106, 130, 131, 139], "leav": [21, 68], "left": [59, 60, 81, 87, 89, 91, 93, 96, 97, 129], "legend": [59, 60, 131, 132, 133], "len": [130, 131, 132, 133], "length": [1, 3, 4, 5, 22, 24, 57, 58, 96, 102, 107, 108, 131], "less": [4, 5, 22, 24, 81, 87, 89, 91, 93], "let": [130, 131, 133], "level": [12, 13, 14, 15, 17, 70, 74, 77, 96, 103, 126, 127, 131, 139], "leverag": 139, "lgd": [59, 60], "li": [130, 131], "lib": 131, "librari": [126, 129], "like": [26, 39, 41, 45, 50, 53, 55, 59, 60, 62, 63, 81, 87, 89, 91, 93, 96, 106, 129, 130, 131, 137], "limit": [6, 7, 26, 28, 59, 60, 130], "limit_numb": [96, 100, 101, 103], "line": [57, 58, 126, 129, 130, 131, 133], "line2d": 131, "linear": [70, 73, 96, 102, 105, 106, 118, 121, 126, 127], "linearli": [96, 106, 107, 108, 118, 121], "linearndinterpol": [107, 108], "linspac": 131, "lint": 137, "list": [1, 2, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 30, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 114, 115, 118, 119, 122, 124, 129, 130, 131, 132], "literatur": [57, 58, 126], "littl": 127, "ll": 132, "load": [57, 58, 122, 123, 124, 129, 130, 139], "load_data": [129, 130], "load_flori": [129, 130, 131], "load_floris_artifici": [122, 129, 130, 131], "load_floris_smarteol": 122, "loc": [96, 100, 101, 129, 131], "local": [96, 106, 126, 130, 131, 137], "locat": [26, 37, 39, 42, 46, 48, 51, 53, 56, 96, 99, 104, 113, 116, 126], "lock": 131, "log": 126, "loggingmanag": 58, "logic": 129, "long": [4, 5, 22, 24, 75, 76, 96, 104, 126, 131], "long_data_column": [75, 76, 134], "longer": [59, 60, 126], "longitud": [26, 37], "look": [26, 28, 59, 60, 126, 129, 130, 131], "lookup": 107, "loop": [96, 100, 101], "lope": [68, 131], "loss": [26, 29, 57, 58, 96, 102, 105, 130, 136, 139], "lost": [75, 76], "lot": 126, "low": [59, 60, 62, 129], "lower": [12, 13, 14, 15, 17, 26, 32, 33, 34, 57, 58, 96, 105, 107, 108, 126, 129], "lowest": [96, 106], "m": [59, 60, 96, 98, 100, 101, 103, 106, 107, 108, 126, 129, 130, 131, 132, 133, 139], "m_pow_lb": [59, 60], "m_pow_rb": [59, 60, 129], "m_ws_lb": [59, 60], "m_ws_rb": [59, 60], "machin": [130, 131], "made": [96, 106, 126, 137], "magnitud": [96, 101, 103], "mai": [6, 7, 59, 60, 96, 103, 105, 106, 126, 127, 129, 130, 131, 134], "mailto": 139, "main": [125, 126, 127], "mainten": [59, 60, 126], "major": 131, "major_label": 131, "major_loc": 131, "major_tick": 131, "majortick": 131, "make": [26, 29, 59, 60, 96, 106, 126, 129, 130, 131, 132, 133, 134], "makedir": 129, "manag": 131, "mani": [127, 129, 130, 131, 132, 133], "manipul": [26, 75, 76, 129, 130], "manner": 126, "map": [6, 7, 10, 11, 70, 71, 129, 134], "mark": [26, 28, 59, 60, 62, 96, 100, 101, 103, 129, 130, 131], "marker": 131, "markeredgewidth": 129, "markerfacecolor": 129, "markers": 129, "markerstyl": 131, "mask": [57, 58], "mast": [126, 130, 131, 139], "match": [96, 99, 109, 112, 113, 116, 130, 131], "match_y_curves_by_offset": [109, 126, 130, 131], "matplotlib": [15, 17, 26, 38, 59, 60, 129, 130, 131, 132, 133], "matrix": [21, 130, 131], "max": [4, 5, 22, 24, 70, 71, 72, 129, 139], "max_depth": [68, 69], "max_gap": [70, 73, 118, 121, 126], "max_open_warn": 129, "max_radiu": [26, 42, 46, 48, 51, 56, 96, 104, 130, 131], "max_wd": [78, 80], "maxim": [131, 139], "maximum": [4, 5, 12, 13, 14, 15, 17, 21, 22, 24, 26, 42, 46, 48, 51, 56, 68, 69, 70, 72, 73, 78, 80, 81, 85, 87, 89, 90, 92, 96, 104, 107, 108, 118, 121, 126, 130, 131], "maximum_yaw_angl": [107, 108], "mean": [4, 5, 21, 22, 24, 26, 35, 39, 41, 42, 45, 46, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 78, 79, 80, 96, 105, 106, 107, 108, 109, 112, 122, 123, 124, 126, 127, 129, 130, 131], "mean_wd": [78, 80], "measur": [26, 28, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 109, 110, 126, 127, 129, 131, 133, 139], "measurement_arrai": 64, "meddlesom": [75, 76], "median": [59, 60, 70, 71, 72, 73, 78, 80, 126, 129, 139], "median_farm_power_curv": 129, "median_wd": [78, 80], "melt": 134, "member": 132, "memo": 131, "memori": 129, "mention": 127, "merg": [26, 28, 31], "messag": [130, 131], "met": [59, 60, 62, 126, 130, 131, 139], "metadata": [75, 76, 134], "method": [2, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 58, 59, 60, 68, 70, 73, 76, 81, 82, 96, 99, 106, 118, 121, 126, 127, 129, 131, 134, 139], "methodologi": 127, "metmast_col": 126, "metric": 128, "michael": [138, 139], "mid_point": 131, "mimag": 131, "min": [4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 70, 71, 72, 81, 82, 139], "min_period": [70, 71, 72], "min_wd": [78, 80], "minim": [96, 105, 109, 111, 112, 131], "minimum": [4, 5, 12, 13, 14, 15, 17, 21, 22, 24, 70, 71, 72, 78, 80, 81, 82, 87, 89, 90, 92, 107, 108, 130, 131, 132, 133], "minimum_yaw_angl": [107, 108], "minut": [59, 60, 126, 129, 130], "mirror_nan": [96, 106], "misalign": 139, "misc": 139, "miscalibr": 139, "misha": 127, "miss": [12, 13, 14, 15, 17, 21, 26, 28, 113, 116, 127], "missing_data_buff": [26, 28], "mode": [68, 122, 124, 127, 129, 130, 131], "model": [68, 96, 99, 100, 101, 102, 103, 105, 106, 113, 122, 123, 124, 126, 127, 128, 129, 130, 134, 136, 139], "model_fit": 135, "modifi": [75, 76, 81, 82], "modul": [0, 1, 4, 6, 15, 19, 22, 25, 26, 57, 64, 66, 68, 75, 96, 97, 107, 109, 113, 118, 127, 132, 135, 137, 139], "monitor": [130, 136, 139], "monoton": 118, "month": 126, "more": [26, 29, 59, 60, 63, 96, 105, 126, 127, 128, 129, 134, 135, 136, 137, 138, 139], "most": [68, 69, 126, 130, 131, 133], "move": [70, 72, 139], "much": [26, 29, 129], "mudafort": 139, "multi": [70, 74], "multimod": 131, "multipl": [6, 7, 59, 60, 126, 128, 130, 131, 139], "multipli": [59, 60], "must": [4, 5, 12, 13, 14, 15, 17, 22, 24, 126, 130, 131], "mw": 129, "n": [1, 3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 26, 39, 53, 81, 92, 109, 110, 129, 132, 133, 134], "n_btstrp": [57, 58], "n_consecutive_measur": [59, 60, 64, 65, 129], "n_eval_max": 64, "n_isnan": [59, 61], "n_step": [12, 14, 15, 17], "n_turbin": [75, 76, 129, 131, 134], "nacel": [126, 127, 129, 130, 131], "nacti_": 129, "nacwdir_": 129, "nacwindspe": 126, "nacwindspeed_a1": 126, "nacwindspeed_a2": 126, "nacwindspeed_a3": 126, "nacwspeed_": 129, "name": [4, 5, 10, 11, 12, 13, 14, 15, 17, 21, 22, 24, 26, 37, 57, 58, 59, 60, 61, 81, 83, 84, 86, 87, 88, 89, 91, 92, 93, 126, 127, 129, 132, 134, 137], "nan": [21, 26, 27, 28, 31, 59, 60, 62, 63, 66, 67, 78, 79, 96, 106, 113, 116, 118, 121, 126, 129, 130, 131], "nan_polici": [78, 79], "nan_thrshld": [66, 67], "nativ": 134, "ndarrai": [26, 35, 68, 70, 71, 81, 85, 87, 89, 91, 93], "nearest": [26, 39, 81, 85, 96, 106, 118, 121], "necessari": 129, "necessarili": [57, 58], "need": [26, 29, 75, 76, 96, 100, 101, 103, 126, 130, 131, 132], "neg": [126, 129], "neighbor": [6, 7, 96, 102, 118, 121], "nest": [113, 114, 115], "nested_get": 113, "nested_set": 113, "new": [1, 2, 10, 11, 26, 38, 59, 60, 70, 73, 75, 76, 81, 83, 84, 85, 86, 87, 88, 89, 91, 113, 116, 128, 129, 132, 137], "next": [4, 5, 22, 24, 126, 130, 131], "night": [26, 37, 38], "no_consecutive_measur": 64, "no_iter": [59, 60], "nof": [68, 69, 130, 131], "nois": [131, 133], "nomin": [57, 58, 126], "non": [26, 31, 59, 63, 107, 108, 132], "none": [1, 2, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 26, 35, 38, 57, 58, 59, 60, 62, 64, 70, 73, 75, 76, 81, 82, 87, 89, 90, 96, 100, 101, 103, 107, 108, 109, 111, 112, 113, 115, 117, 122, 123, 124, 126, 129, 130, 131], "nonetyp": [96, 100, 101, 103], "nonhomogen": 126, "nonzero": [96, 102, 126], "normal": [59, 60, 126, 127, 130, 131, 132], "normal_oper": 129, "normal_operation_col": [75, 76], "north": [66, 67, 126, 130, 136, 139], "northing_offset": [130, 131], "northing_offset_change_hog": 131, "not_composit": 131, "note": [6, 7, 10, 11, 57, 58, 59, 60, 70, 72, 126, 129, 130, 131], "notebook": [75, 76, 129, 131, 132, 133, 135], "notic": [96, 105], "now": [126, 127, 129, 130, 131, 132, 133, 134, 136, 137], "np": [1, 3, 6, 7, 26, 35, 59, 60, 64, 65, 68, 70, 71, 73, 78, 79, 96, 98, 100, 101, 103, 109, 110, 111, 112, 113, 117, 118, 121, 129, 130, 131, 132, 133, 134], "nrel": [127, 136, 137, 138, 139], "nturb": [96, 97, 98, 129], "null": [12, 13, 14, 15, 17, 21, 81, 86, 87, 88, 89, 92, 94, 95], "nullcontext": 131, "num": [132, 133], "num_block": [1, 2, 3, 132, 133], "num_bootstrap": 132, "num_df": [81, 90], "num_points_per_combin": [132, 133], "num_turbin": [129, 130, 131], "number": [1, 2, 3, 4, 5, 12, 13, 14, 15, 17, 21, 22, 24, 26, 35, 36, 37, 39, 40, 42, 43, 44, 46, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 70, 71, 72, 75, 76, 81, 90, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 118, 120, 125, 126, 129, 130, 131, 132, 133, 134], "numer": [59, 60, 129, 135], "numpi": [78, 79, 80, 81, 85, 96, 103, 129, 130, 131, 132, 133, 134, 136], "numtick": 131, "o": [129, 130, 131], "object": [2, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 17, 20, 22, 24, 26, 28, 57, 58, 59, 60, 66, 67, 75, 76, 81, 93, 96, 98, 99, 100, 101, 102, 103, 105, 109, 110, 122, 123, 124, 130, 131, 132, 133], "observ": 127, "obstruct": 129, "obtain": [68, 134], "obviou": 126, "obvious": 126, "occur": [26, 37, 59, 60, 126, 131], "occurr": 127, "odd": 129, "oem": 129, "off": [59, 60, 96, 97, 129], "offlin": [130, 131], "offset": [57, 58, 59, 60, 66, 67, 107, 108, 109, 112, 126, 130, 139], "offshor": [128, 139], "often": [59, 60, 126, 129], "omit": [78, 79], "onc": 126, "one": [4, 5, 21, 22, 24, 26, 31, 57, 58, 59, 60, 96, 102, 126, 128, 130, 131, 139], "ones_lik": 131, "onli": [6, 7, 21, 59, 60, 96, 103, 106, 126, 131, 133], "onto": [70, 73, 126], "open": [127, 129, 134], "oper": [6, 7, 25, 26, 29, 59, 60, 70, 81, 90, 96, 103, 105, 107, 108, 122, 124, 126, 127, 128, 129, 130, 132], "operation_mod": [122, 124], "operational_statu": 129, "opt": [59, 60, 131], "opt_bound": [109, 111], "opt_iters_ti": [130, 131], "opt_n": [109, 111], "opt_search_brute_dx": [57, 58, 130, 131], "opt_search_rang": [57, 58, 130, 131], "opt_work": [57, 58], "optim": [57, 58, 107, 108, 126, 130, 131, 139], "option": [4, 5, 6, 7, 10, 11, 22, 24, 26, 27, 28, 29, 35, 37, 38, 42, 46, 48, 51, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 75, 76, 81, 82, 90, 96, 97, 98, 99, 102, 104, 105, 106, 107, 108, 113, 115, 117, 122, 123, 124, 127, 128, 129, 130, 132, 137], "orang": 126, "order": [4, 5, 22, 24, 96, 100, 101, 118, 126, 135], "origin": [1, 2, 68, 75, 76, 81, 85, 127], "orrespond": [22, 24], "other": [21, 26, 31, 37, 75, 76, 96, 103, 104, 106, 126, 127, 129, 130, 131, 136, 139], "otherwis": [75, 76, 127, 131], "our": [96, 106, 126, 129, 130, 131], "out": [59, 60, 126, 132, 133], "out_path": [129, 130, 131], "outcom": [96, 105], "outer": [96, 103], "outlier": [126, 139], "outlin": 131, "output": [19, 64, 65, 70, 72, 96, 98, 104, 109, 110, 111, 113, 117, 118, 121, 129, 131, 132, 134], "output_fil": 129, "output_notebook": 129, "outsid": [59, 60, 96, 106, 126], "over": [12, 13, 14, 15, 17, 26, 38, 50, 51, 57, 58, 78, 79, 81, 83, 84, 86, 87, 88, 89, 96, 100, 101, 106, 126, 127, 130, 131], "overal": [131, 134], "overlap": [4, 5, 22, 24, 81, 85, 90, 92], "overlap_dist": [81, 85], "overlay_frequ": [10, 11], "overplot": 133, "overview": [134, 136], "overwrit": 15, "overwrite_label": 15, "overwritten": [59, 60], "own": [126, 134], "p": [59, 60, 139], "p_filters_tim": 129, "p_measur": [109, 110], "p_ws_pitch": 129, "p_ws_pow": 129, "packag": [77, 96, 100, 131, 137], "pair": [4, 5, 12, 13, 14, 15, 17, 21, 22, 24, 81, 92, 132], "panda": [12, 13, 14, 15, 17, 26, 27, 37, 59, 60, 63, 75, 76, 96, 97, 98, 99, 100, 101, 102, 105, 106, 113, 116, 126, 129, 130, 131, 134, 139], "parallel": 130, "param": [96, 106], "paramet": [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 132, 136, 139], "parent": 131, "part": [126, 129, 130, 131, 136], "partial": 127, "particular": [26, 29, 59, 60, 63, 96, 105, 128, 129], "particularli": [59, 60], "pass": [81, 92, 132], "past": [107, 108], "patch": 131, "path": [6, 7, 57, 58, 75, 76, 129, 130, 131, 132, 133, 137], "pathlib": [132, 133], "pattern": 127, "paul": [68, 127, 131, 138, 139], "pd": [1, 2, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 17, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 111, 113, 117, 118, 120, 126, 129, 130, 131, 134], "pdf": [6, 7], "pdf_cutoff": [96, 97], "pdf_save_path": [6, 7], "pearson": [57, 58, 109, 111, 126], "per": [4, 22, 59, 60, 127, 129, 132, 133], "percent": [4, 5, 132], "percentag": 126, "percentil": [4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 81, 92, 132], "perform": [12, 14, 15, 17, 57, 58, 81, 90, 118, 121, 127, 130, 131, 136, 139], "perform_resampl": [1, 2], "perhap": [75, 76], "period": [26, 38, 59, 60, 70, 72, 126, 129, 131], "perturb": [131, 132], "physic": [59, 60], "pink": 126, "pip": 137, "pitch": 129, "pitchangle_col": [75, 76], "pitchanglemean": 134, "pkl": [129, 130], "pl": [1, 2, 4, 12, 21, 22, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 94, 95], "place": [75, 76, 81, 87, 89, 91, 93, 128, 134], "plai": 139, "platform": [59, 60], "pleas": [126, 129, 130, 139], "plot": [6, 7, 10, 11, 15, 17, 19, 20, 26, 38, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 96, 105, 126, 130, 131, 132, 133], "plot_background_flow": [6, 7], "plot_energy_ratio": [10, 11, 57, 58, 130, 131, 132, 133], "plot_farm_mean_power_curv": [59, 60, 129], "plot_faults_vs_layout": 129, "plot_figur": [64, 65, 66, 67, 129, 130, 131], "plot_figures_in_notebook": 130, "plot_filters_custom_scatt": [59, 60], "plot_filters_custom_scatter_bokeh": [59, 60, 129], "plot_filters_in_tim": [59, 60, 129], "plot_filters_in_time_bokeh": [59, 60, 129], "plot_filters_in_ws_power_curv": [59, 60, 129], "plot_graph": [6, 7], "plot_it": [68, 69], "plot_iter_path": [57, 58, 130, 131], "plot_layout": [6, 7], "plot_lin": [96, 105], "plot_postprocessed_in_ws_power_curv": [59, 60, 129], "plot_sun_altitude_with_day_night_color": 26, "plot_turbine_label": [131, 132, 133], "plot_turbine_point": [131, 132, 133], "plot_unc": 15, "plot_uplift": [10, 11, 132], "plot_waking_direct": [132, 133], "plot_with_distribut": 15, "plt": [15, 17, 26, 38, 59, 60, 129, 130, 131, 132, 133], "plu": [26, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 96, 106], "png": [57, 58, 64, 129], "point": [4, 5, 12, 13, 14, 15, 17, 21, 22, 24, 57, 58, 59, 60, 68, 69, 70, 71, 96, 97, 118, 121, 126, 132, 133, 134], "pola": 132, "polar": [4, 10, 11, 12, 21, 22, 57, 58, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 128, 132, 139], "polar_plot": [10, 11], "pollut": [130, 131], "poncet": [68, 131], "pool": 129, "popul": [26, 28], "portfolio": 136, "posit": [68, 69, 113, 116, 126, 134], "possibl": [26, 29, 96, 106, 126, 130, 131], "possibli": [26, 29, 81, 94, 95], "post": [96, 97, 139], "post_execut": 131, "postprocess": [26, 28, 59, 60, 63, 96, 97, 130, 139], "potenti": [26, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 96, 106], "pour": 129, "pow": [26, 35, 75, 76, 126], "pow_": [26, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 96, 97, 98, 126, 129, 131], "pow_000": [59, 60, 61, 63, 96, 97, 98, 106, 129, 131, 132, 133, 134], "pow_001": [59, 60, 61, 63, 96, 98, 106, 129, 131, 132, 133, 134], "pow_002": [59, 63, 129, 131, 132, 133, 134], "pow_003": [129, 131, 133], "pow_004": [129, 131], "pow_005": [129, 131], "pow_006": [96, 98, 106, 129], "pow_012": 129, "pow_deadband": [59, 60, 129], "pow_rang": 126, "pow_ref": [4, 5, 22, 24, 26, 39, 40, 41, 42, 53, 81, 83, 132, 133, 134], "pow_test": [81, 84, 134], "power": [4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 40, 41, 59, 60, 61, 62, 63, 81, 90, 96, 97, 98, 99, 100, 101, 103, 106, 109, 110, 113, 117, 122, 123, 126, 129, 130, 131, 132, 134, 139], "power_0": 133, "power_1": 133, "power_2": 133, "power_3": 133, "power_baseline_control": 132, "power_baseline_downstream": 132, "power_baseline_ref": 132, "power_col": [75, 76], "power_ratio": 127, "power_tb01": 134, "power_tb02": 134, "power_tb03": 134, "power_wakesteering_control": 132, "power_wakesteering_downstream": 132, "power_wakesteering_ref": 132, "practic": [128, 139], "pre": [4, 22, 132, 137], "precalcul": [96, 97, 106, 130, 131, 139], "precis": [26, 29, 59, 60, 129], "predefin": [12, 13, 14, 15, 17, 81, 92, 133], "predict": [57, 58, 96, 97, 99, 105, 106, 126, 129, 130, 131], "prefer": [75, 76, 134], "prefix": [26, 35], "prepar": [126, 139], "present": [4, 5, 12, 13, 14, 15, 17, 22, 24, 96, 105, 139], "prespecifi": [59, 60, 96, 104], "prevail": 129, "prevent": [96, 106], "previou": [59, 60, 126], "previous": [59, 60], "primarili": [113, 116, 126, 136], "print": [10, 11, 12, 14, 19, 20, 26, 27, 29, 59, 60, 63, 64, 65, 70, 73, 96, 99, 106, 109, 110, 111, 129, 130, 131, 132, 133, 134], "print_uplift": [19, 20], "printout": [75, 76], "prior": [126, 132], "privat": [59, 60], "probabl": [96, 97, 131], "problem": [57, 58, 59, 60, 129], "procedur": [68, 69, 126], "process": [59, 60, 70, 81, 90, 96, 97, 125, 131, 134, 139], "produc": [59, 60, 107, 108, 126, 129, 130, 131, 132, 139], "product": [12, 13, 14, 15, 17, 21, 22, 23, 59, 60, 61, 62, 63, 96, 97, 98, 106, 126, 129, 130, 131], "progress": [26, 27, 29, 130, 131], "project": [68, 131], "prolong": 126, "propag": [12, 13, 14, 15, 17, 127, 129], "properti": [75, 76, 78, 80], "provid": [4, 5, 10, 11, 19, 20, 22, 24, 26, 38, 59, 60, 81, 82, 96, 98, 99, 126, 127, 128, 129, 132, 134, 135, 136, 139], "prune": [68, 69], "public": 127, "publish": 139, "purpos": [129, 133], "put": [59, 60, 128], "pw_curve_df": 129, "py": [129, 130, 131], "pypi": 137, "pyplot": [59, 60, 129, 130, 131, 132, 133], "python": [126, 127, 131, 137], "python3": 131, "pywak": [96, 106], "quantif": [57, 58], "quantifi": [12, 13, 14, 15, 17, 127, 136, 139], "quantiti": [26, 39, 41, 42, 45, 46, 48, 50, 51, 53, 55, 56, 70, 72, 139], "queri": [59, 60], "question": [113, 114, 115], "quickli": [96, 102, 106, 129], "quit": [132, 133], "r": [96, 104, 132, 133, 139], "radiu": [26, 39, 42, 46, 48, 51, 53, 56, 81, 90, 92, 96, 104], "rais": [10, 11, 75, 76, 81, 82, 129, 130], "ramp": [107, 108], "ramp_down_w": [107, 108], "ramp_up_w": [107, 108], "rand": 134, "randn": [132, 133], "random": [131, 132, 133, 134], "rang": [26, 32, 33, 34, 39, 41, 42, 45, 46, 50, 51, 53, 55, 56, 57, 58, 81, 85, 96, 105, 106, 109, 111, 112, 126, 129, 130, 131, 132, 133], "rapid": [96, 97], "rate": [59, 60], "rather": [26, 28, 59, 60, 81, 86, 87, 88, 89, 96, 99, 127], "ratio": [0, 1, 2, 4, 5, 6, 7, 10, 11, 22, 24, 57, 58, 81, 85, 94, 95, 96, 106, 125, 126, 130, 131, 136, 139], "raw": [96, 106, 125, 129, 139], "raw_activepowermean": 134, "raw_artificial_data": 129, "raw_data_process": 126, "raw_shutdowndur": 134, "raw_windspeedmean": 134, "raw_yawanglemean": 134, "rcparam": 129, "re": [96, 97, 99, 127, 134, 137], "read": [59, 60], "read_csv": 129, "read_feath": 130, "read_pickl": 130, "readi": 137, "readili": 126, "real": [26, 29, 96, 105, 126, 135], "realli": [130, 131], "reason": [129, 130, 131], "recalibr": 131, "receiv": [81, 82], "recent": [126, 130, 131, 133], "recogn": 129, "recommend": [96, 106, 126, 129, 135, 137], "reconfigur": 128, "rectangular": [96, 98], "red": [126, 130, 131], "reduc": [26, 29, 126, 129], "reduct": [26, 29], "ref": [81, 94, 95], "ref_col": [4, 5, 10, 11, 22, 24, 81, 83, 90, 94, 95], "ref_turbin": [4, 5, 22, 24, 81, 92, 133], "refer": [4, 5, 12, 13, 14, 15, 17, 22, 24, 26, 40, 68, 69, 81, 90, 92, 94, 95, 96, 105, 109, 112, 113, 116, 117, 126, 127, 128, 130, 131, 132, 134], "refin": [107, 108, 109, 110, 130, 131], "refine_with_fmin": [109, 110], "reflect": [81, 85, 90, 92], "regard": 139, "regardless": 21, "region": [59, 60, 107, 108, 130, 131], "regress": [68, 69], "rel": [59, 60, 126, 128, 130, 131, 139], "relat": 139, "relev": [26, 37, 42, 46, 48, 51, 56, 66, 67], "reli": [126, 127, 136, 139], "relpath": [129, 130], "remain": [128, 129], "remaind": [96, 106], "rememb": 137, "remov": [12, 13, 14, 15, 17, 26, 27, 59, 60, 81, 86, 87, 88, 89, 90, 92, 96, 102, 109, 111, 126, 129, 130, 139], "remove_all_nul": [4, 5, 10, 11, 22, 24, 81, 86, 87, 88, 89, 90, 92], "remove_any_null_turbine_bin": [12, 13, 14, 15, 16, 17, 18, 19, 20], "renam": 126, "render": 131, "repeat": [1, 3, 68, 126], "replac": [26, 31, 113, 116, 137], "replic": [113, 116], "replicate_nan_valu": 113, "report": [59, 63, 126, 127, 129], "repositori": [0, 25, 77, 127, 135, 136, 137, 138, 139], "repres": [96, 103, 113, 116, 127, 130, 131, 134, 139], "represent": [75, 76], "requir": [4, 5, 22, 24, 59, 63, 81, 90, 94, 95, 126, 127, 129, 134, 136], "resampl": [1, 2, 70, 73, 109, 111, 126], "resample_energy_t": [1, 2], "rescal": 129, "research": 139, "reset": [59, 60, 126], "reset_filt": [59, 60], "reset_index": [126, 129], "resgroup": [96, 99], "resim_flori": 113, "resimul": [113, 116, 117], "resiz": 131, "resolut": [57, 58, 126, 129], "respect": [57, 58, 96, 106, 107, 108, 126, 133, 139], "result": [4, 5, 10, 11, 12, 13, 14, 15, 17, 19, 20, 22, 24, 59, 60, 68, 69, 75, 76, 81, 85, 90, 96, 97, 98, 105, 118, 121, 127, 130, 131, 132], "retain": 129, "return": [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 130, 131, 134, 138], "return_by_column": [64, 65], "return_index_map": [70, 71, 129], "return_influence_magnitud": [96, 103], "revers": [68, 69, 133], "review": 139, "rglope": [68, 131], "rich": [136, 139], "right": [59, 60, 81, 87, 89, 91, 93, 96, 97], "role": 139, "root": [12, 13, 14, 15, 17, 21, 131, 137], "root_path": [129, 130], "rose": [96, 105, 106, 126, 128], "roughli": [130, 131, 135], "round": [126, 130, 131], "routin": [68, 69], "row": [1, 2, 21, 26, 27, 28, 30, 31, 39, 41, 42, 45, 46, 50, 51, 53, 55, 56, 59, 63, 81, 85, 90, 96, 100, 101, 102, 103, 105, 107, 108, 130, 131, 132, 134], "rub\u00e9n": [68, 131], "run": [12, 59, 60, 96, 97, 100, 101, 103, 126, 129, 130, 131, 132, 133], "runner": [129, 131], "runtimeerror": [81, 82], "runtimewarn": 129, "safe": [59, 60, 96, 102], "salcedo": [68, 131], "same": [1, 2, 26, 31, 57, 58, 59, 60, 75, 76, 81, 85, 96, 97, 106, 113, 116, 126, 129, 132, 134], "sampl": [4, 5, 12, 13, 14, 15, 17, 22, 24, 96, 106, 126, 127], "save": [6, 7, 10, 11, 19, 20, 57, 58, 75, 76, 96, 98, 126, 131, 132, 139], "save_figur": [129, 130], "save_path": [57, 58, 64, 130, 131], "save_turbine_inflow_conditions_to_df": [96, 98], "savefig": 129, "scada": [0, 12, 21, 25, 57, 58, 59, 60, 61, 62, 63, 68, 69, 77, 96, 99, 105, 113, 117, 126, 128, 129, 130, 131, 136, 139], "scada_col": 126, "scale": [57, 58], "scatter": [59, 60], "scenario": [96, 106, 130, 131], "schema_overrid": [1, 2], "scheme": [10, 11], "scienc": 139, "scipi": [78, 79, 107, 108], "script": [126, 129, 130], "seaborn": 132, "search": [57, 58, 130, 131], "second": [4, 5, 22, 24, 26, 28, 70, 71, 72, 96, 103, 126, 127, 129, 130, 131, 132, 133], "see": [126, 127, 128, 129, 130, 136, 137, 139], "seed": 131, "seem": [130, 131], "select": [126, 131], "self": [59, 60, 62, 75, 76, 126, 129, 131], "sensit": [12, 14, 127], "sensor": [59, 60, 64, 65, 96, 106, 126, 129, 139], "separ": [10, 11, 57, 58, 129], "sequenti": 134, "seri": [68, 131], "serial": [107, 108], "serv": [96, 105, 126], "server": 126, "set": [4, 5, 6, 7, 12, 13, 14, 15, 17, 21, 22, 24, 26, 37, 50, 51, 57, 58, 59, 60, 70, 73, 81, 94, 95, 96, 98, 105, 106, 107, 108, 113, 115, 126, 128, 129, 130, 132, 133, 134, 139], "set_pow_ref_by_n_closest_upstream_turbin": 26, "set_pow_ref_by_turbin": [26, 133], "set_pow_ref_by_upstream_turbin": 26, "set_pow_ref_by_upstream_turbines_in_radiu": [26, 130, 131], "set_ti_by_all_turbin": 26, "set_ti_by_turbin": 26, "set_ti_by_upstream_turbin": 26, "set_ti_by_upstream_turbines_in_radiu": 26, "set_wd_by_all_turbin": [26, 130, 131, 133], "set_wd_by_radius_from_turbin": 26, "set_wd_by_turbin": [26, 130, 131], "set_wd_by_upstream_turbin": 26, "set_wd_by_upstream_turbines_in_radiu": 26, "set_ws_by_all_turbin": 26, "set_ws_by_n_closest_upstream_turbin": 26, "set_ws_by_turbin": [26, 133], "set_ws_by_upstream_turbin": 26, "set_ws_by_upstream_turbines_in_radiu": [26, 130, 131], "set_xlabel": [131, 132, 133], "set_ylabel": [131, 132, 133], "setpoint": 129, "setup": 137, "setup_floris_model": 130, "sever": [59, 60, 127, 131, 132], "shape": [129, 131], "share": [21, 126, 131], "sharex": [132, 133], "shed": [59, 63, 130, 131], "shift": [57, 58, 109, 110, 111, 126, 130, 131], "shorth": 68, "should": [4, 5, 22, 24, 26, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 70, 72, 81, 85, 96, 102, 105, 106, 118, 122, 123, 124, 126, 129, 130, 131, 134], "show": [10, 11, 57, 58, 59, 60, 63, 126, 129, 130, 132, 133], "show_uncorrected_data": [57, 58, 130, 131], "show_wind_direction_distribut": [10, 11, 132, 133], "show_wind_speed_distribut": [10, 11, 132, 133], "shown": [10, 11, 59, 60, 68, 126, 132], "shutdown": [59, 60], "shutdowndur": 134, "side": 126, "signal": [26, 50, 51, 59, 60, 126, 127, 129, 130, 131, 134], "signifi": 129, "significantli": [126, 130, 131], "similar": [126, 127], "similarli": [75, 76, 126, 129, 130, 131], "simlei": [127, 139], "simpl": [96, 102, 132, 133], "simpler": 126, "simpli": [26, 28, 96, 101, 126, 130, 131, 134], "simplic": 131, "simplifi": [96, 102, 126], "simul": [66, 67, 96, 98, 102, 139], "sinc": [59, 60, 126, 130, 131, 132], "singl": [10, 11, 12, 126, 127], "sinner": [127, 138, 139], "site": 131, "situat": [59, 60, 62, 126], "size": [12, 13, 14, 15, 17, 21, 26, 29, 57, 58, 59, 60, 81, 87, 89, 90, 92, 96, 98, 103, 106, 139], "slice": [126, 130, 131], "slightli": [57, 58, 59, 60, 96, 105], "slope": [96, 102, 105], "slow": [130, 131], "small": [130, 131], "smaller": [126, 127], "smallest": [81, 87, 89, 91, 93, 132], "smarteol": [127, 128, 134], "sn": 132, "so": [59, 60, 63, 75, 76, 96, 105, 126, 129, 130, 131], "softwar": 139, "solut": [59, 60, 96, 97, 98, 106, 130, 131, 139], "solv": [57, 58, 129, 135], "some": [81, 82, 129, 131, 133], "someon": [26, 31], "somewher": [59, 60], "sort": [26, 30, 31, 75, 76, 96, 101, 104, 118, 129, 131], "sort_by_dist": [96, 104, 130, 131], "sort_valu": 129, "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 134, 137, 139], "source_path": 129, "space": [57, 58], "speak": 135, "specif": [59, 60, 61, 81, 90, 96, 106, 126, 127, 128, 129, 134], "specifi": [4, 5, 12, 14, 22, 24, 26, 35, 57, 58, 59, 60, 78, 79, 81, 90, 91, 93, 96, 101, 103, 122, 124, 126, 129, 130, 131, 132, 139], "speed": [4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 17, 18, 21, 22, 24, 26, 29, 34, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 81, 89, 90, 92, 94, 95, 96, 98, 99, 100, 101, 103, 106, 107, 108, 113, 117, 126, 127, 129, 130, 131, 134, 139], "spine": 131, "sql": 126, "squar": [12, 13, 14, 15, 17, 21, 109, 112], "squeez": 132, "src": 131, "stack": 136, "stackoverflow": [113, 114, 115], "stale": 131, "standard": [12, 13, 14, 15, 17, 59, 60, 64, 65, 70, 72, 78, 80, 96, 97, 122, 123, 124, 127], "start": [26, 28, 107, 108, 109, 111, 128, 130, 131, 134], "start_filt": 131, "stat": [78, 79], "state": 126, "static": 129, "statist": [78, 80, 81, 90, 109, 111], "statu": [59, 60, 62, 66, 67, 129], "std": [70, 71, 72, 139], "std_wd": [78, 80], "stddev_threshold": [59, 60, 64, 65, 129], "steer": [107, 108, 128, 132, 135, 139], "step": [4, 5, 12, 13, 14, 15, 17, 21, 22, 24, 26, 50, 51, 57, 58, 59, 60, 66, 67, 81, 87, 89, 90, 92, 96, 97, 105, 106, 109, 110, 111, 126, 132, 133, 135], "stepsiz": [130, 131], "still": [26, 42, 46, 48, 51, 56, 96, 104, 118, 121, 129, 134], "stop_raster": 131, "storag": [26, 29, 126, 139], "store": [10, 11, 19, 20, 75, 76, 130, 131, 132, 134], "stoyan": 127, "str": [1, 2, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 35, 37, 57, 58, 59, 60, 68, 69, 70, 73, 75, 76, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 106, 113, 114, 115, 118, 121, 122, 123, 124], "straightforward": 134, "straightforwardli": 126, "strategi": 21, "streamlit": 126, "strictli": [4, 5, 22, 24], "string": [59, 60, 66, 67, 81, 92, 129], "strongest": [96, 100], "strongli": [126, 137], "structur": [1, 2], "stuck": [59, 60, 64, 65, 126, 129, 139], "style": 134, "subclass": [75, 76, 134], "subdirectori": 135, "submodul": 125, "subplot": [129, 131, 132, 133], "subset": [10, 11, 59, 60], "subtleti": 126, "subtract": [81, 85, 126], "successfulli": 131, "suffici": [59, 63], "suggest": [59, 60, 127], "suit": [126, 132, 136, 139], "sum": [4, 5, 12, 13, 14, 15, 17, 22, 24, 81, 82, 127], "sun": [26, 37, 38], "sun_altitud": [26, 37, 38], "sunris": [26, 37], "sunrise_altitud": [26, 37], "sunset": [26, 37], "sunset_altitud": [26, 37], "super": 131, "superclass": 131, "superfici": 68, "suppli": [133, 134], "support": [134, 136, 139], "suppos": 134, "supposedli": [96, 102], "suppress_composit": 131, "suppresscomposit": 131, "sure": [59, 60, 126, 129, 130, 131], "surround": 126, "sweep": [12, 14, 15, 17], "switch": 132, "sychron": 139, "sync_col": 21, "synchron": [21, 126], "syntax": 128, "synthet": [136, 139], "system": 134, "t": [4, 5, 22, 24, 96, 100, 101, 104, 129, 131, 132, 133], "t0": [109, 111, 133], "t000": [130, 131], "t001": [130, 131], "t002": [130, 131], "t003": [130, 131], "t004": [130, 131], "t005": [130, 131], "t006": [130, 131], "t1": [109, 111, 133], "t2": 133, "t3": 133, "t_idx": 131, "t_step": [109, 111], "tabl": [1, 2, 22, 57, 58, 81, 82, 96, 98, 106, 107, 122, 123, 130, 131, 138], "take": [26, 28, 81, 90, 107, 108, 113, 117, 126, 129, 130, 131], "taken": [134, 139], "target_i": [118, 121], "tb01": 134, "tb02": 134, "tb03": 134, "td": [66, 67, 129, 130, 131], "team": [138, 139], "technic": 139, "technologi": 127, "term": [4, 5, 12, 13, 14, 15, 17, 21, 22, 24, 57, 58, 126, 127], "termin": 131, "test": [4, 5, 12, 13, 14, 15, 17, 21, 22, 24, 57, 58, 81, 90, 92, 94, 95, 96, 103, 105, 109, 112, 126, 127, 128, 130, 131, 132, 134], "test_col": [4, 5, 10, 11, 12, 21, 22, 24, 81, 84, 90, 94, 95], "test_turbin": [4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 57, 58, 81, 92, 96, 103, 130, 131, 132, 133], "test_turbines_subset": [57, 58, 130, 131], "text": [129, 131, 132, 133], "than": [26, 28, 57, 58, 59, 60, 63, 81, 86, 87, 88, 89, 91, 93, 96, 99, 118, 121, 126, 127, 129], "thei": [4, 5, 22, 24, 26, 42, 46, 48, 51, 56, 68, 81, 92, 126, 130, 131], "them": [59, 60, 126, 130, 131], "therebi": [96, 97, 129], "therefor": [96, 106, 126, 127, 130], "thi": [1, 2, 6, 7, 15, 26, 28, 29, 30, 31, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 78, 80, 81, 82, 85, 90, 92, 96, 97, 98, 99, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 121, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 139], "thing": [129, 130, 136], "third": [129, 132], "thirteenth": 129, "thoma": [68, 131], "those": [4, 5, 21, 22, 24, 59, 60, 96, 102, 105, 127, 129, 132], "though": [96, 105, 126, 127], "three": [96, 97, 127, 128, 139], "threshold": [59, 60, 64, 65, 66, 67, 68, 69, 131], "through": [68, 126, 127, 129, 130, 131, 135, 137], "throughout": [129, 130, 131, 135], "thrown": [26, 31], "thrust": [122, 123], "thu": 126, "ti": [6, 26, 40, 43, 44, 45, 46, 59, 60, 63, 64, 65, 96, 97, 98, 106, 126, 129, 130, 131, 139], "ti_": [26, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 129], "ti_000": [96, 98, 129], "ti_001": 129, "ti_002": 129, "ti_003": 129, "ti_004": 129, "ti_005": 129, "ti_006": [96, 98, 129], "ti_arrai": [96, 98, 131], "ti_mask": [57, 58], "ti_rang": [26, 32], "ti_truth": 129, "tick": 131, "tick1lin": 131, "tick2lin": 131, "ticks_to_draw": 131, "tie": 131, "tight_layout": 129, "tile": 131, "time": [1, 3, 26, 27, 28, 30, 31, 37, 38, 57, 58, 59, 60, 61, 66, 67, 68, 70, 71, 72, 73, 75, 76, 96, 106, 109, 110, 111, 118, 119, 126, 129, 130, 131, 132, 133, 134], "time_arrai": [70, 73, 118, 119, 126], "time_col": [75, 76], "time_mask": [57, 58, 130, 131], "time_oper": [126, 130], "time_seri": [131, 132], "timedelta": [66, 67, 70, 71, 72, 118, 119, 130, 131], "timedelta64": [109, 111], "timeseri": [96, 106, 130, 131, 132, 133, 139], "timeshift": [126, 139], "timestamp": [26, 37, 59, 60, 63, 126, 127, 129], "timestamp_startformat": 134, "timestep": [70, 73, 118, 119], "timezon": 126, "titl": [59, 60, 129, 132, 133, 139], "tn": 129, "tno": 127, "to_csv": 129, "to_datetim": [57, 58, 129], "to_feath": [75, 76], "to_pickl": [129, 130], "todo": [75, 76], "togeth": 131, "too": [59, 60, 75, 76, 129, 130, 131], "tool": [96, 106, 126, 127, 131, 134, 135, 136, 137, 139], "toolbar": 131, "toolbox": [126, 136], "top": [59, 60, 77, 129, 131], "total": [12, 13, 14, 15, 16, 17, 18, 22, 23, 130, 131, 139], "total_uplift_expected_pow": 12, "total_uplift_expected_power_by_w": 15, "total_uplift_expected_power_by_wd": 15, "total_uplift_expected_power_by_wd_shift_ws_min": 15, "total_uplift_expected_power_sweep_ws_min": 12, "total_uplift_power_ratio": 127, "toward": 126, "traceback": [130, 131, 133], "transform": 131, "transit": [107, 108, 132], "translat": 127, "travers": [113, 114, 115], "treat": [70, 72], "tree": [68, 69], "trend": [59, 60], "tri": 132, "true": [1, 2, 4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 29, 46, 48, 51, 56, 59, 60, 63, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 78, 80, 81, 90, 96, 98, 103, 106, 109, 111, 112, 118, 121, 126, 129, 130, 131, 132, 133, 134], "trust": 126, "try": [59, 60, 129, 131], "tune": 113, "tupl": [4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 22, 24, 57, 58, 59, 60, 68, 69, 70, 71, 78, 80, 81, 82, 96, 103, 109, 112], "turb_no": [26, 39, 42, 46, 48, 51, 53, 56, 96, 104, 130, 131], "turb_wd_consist": [130, 131], "turbin": [4, 5, 6, 7, 12, 13, 14, 15, 17, 21, 22, 24, 26, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 75, 76, 81, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 117, 118, 120, 122, 124, 127, 128, 129, 133, 134, 136, 139], "turbine_list": [26, 35, 59, 62], "turbine_nam": [59, 60, 75, 76, 129], "turbine_num_digit": [75, 76], "turbine_numb": [26, 40, 43, 44, 49, 52, 54], "turbine_pow": 131, "turbine_subset": [59, 60], "turbine_upstream": [109, 110], "turbine_weight": [96, 102, 129, 130, 131], "turbinenam": 134, "turbineok": 129, "turbines_downstream": [109, 110], "turbines_sorted_by_dist": [130, 131], "turbopark": [122, 123, 124], "turbul": [26, 32, 40, 43, 44, 45, 57, 58, 96, 98, 106, 109, 110, 129, 130, 131, 139], "turbulence_intens": [107, 108, 131, 132, 133], "turbulenceintensity_80m": 129, "turn": 137, "twain": [68, 131], "two": [4, 5, 21, 22, 24, 26, 30, 31, 37, 57, 58, 59, 60, 75, 76, 81, 94, 95, 109, 111, 112, 113, 116, 126, 127, 130, 131, 132, 133, 139], "type": [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 15, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 131, 139], "typeerror": 133, "typic": [26, 29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 96, 97, 102, 105, 106, 107, 108, 126, 130, 131], "u": 136, "un": [96, 99], "unbias": 131, "uncalibr": 126, "uncertain": 126, "uncertainflorismodel": [96, 97], "uncertainti": [12, 13, 14, 15, 17, 57, 58, 122, 123, 124, 127], "unchang": [129, 130], "uncommon": [57, 58], "uncorrect": [57, 58], "undefin": 21, "under": [57, 58, 138], "understand": 135, "unexpect": 133, "uniform": 131, "union": [10, 11, 57, 58, 68, 69], "uniqu": [59, 60], "unknown": 131, "unless": [10, 11, 81, 90], "unlink": [130, 131], "unrealist": 126, "unsort": [26, 30, 31], "unstack": 126, "unsur": [130, 131], "until": [26, 42, 46, 48, 51, 56, 96, 97, 98, 129], "unus": [64, 65], "unwak": [96, 105], "unzip": 129, "up": [26, 29, 59, 60, 75, 76, 96, 99, 106, 107, 108, 126, 130, 131, 132, 139], "updat": [21, 113, 116, 129, 131, 136], "update_from": 131, "update_posit": 131, "uplift": [4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 81, 92, 134, 139], "uplift_absolut": [4, 5, 81, 92], "uplift_col": [10, 11], "uplift_df_name1_df_name2": [4, 5, 22, 24], "uplift_nam": [4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 81, 92, 132], "uplift_names_subset": [10, 11], "uplift_pair": [4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 81, 92, 132], "uplift_result": [19, 20], "upper": [12, 13, 14, 15, 17, 26, 32, 33, 34, 57, 58, 59, 60], "upsampl": 139, "upstream": [6, 7, 26, 39, 41, 42, 45, 46, 48, 50, 51, 53, 55, 56, 59, 63, 96, 105, 109, 110, 130, 131, 133, 139], "uq": [57, 58], "url": 139, "us": [1, 2, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 28, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 68, 69, 75, 76, 81, 82, 85, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 139], "usabl": 127, "usag": [59, 60, 126, 127, 132, 134, 139], "use_bokeh_for_plot": 129, "use_bokeh_plotting_librari": 129, "use_circular_statist": [109, 111], "use_predefined_ref": [4, 5, 22, 24, 81, 92, 132, 133], "use_predefined_w": [4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 81, 92, 132, 133], "use_predefined_wd": [4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 81, 92, 132, 133], "use_standard_error": [12, 13, 14, 15, 16, 17, 18, 19, 20], "useabl": 126, "user": [59, 60, 75, 76, 96, 106, 126, 129, 130, 132, 135, 139], "userwarn": [81, 82, 130, 131], "utc": [26, 37, 134], "util": [21, 26, 39, 41, 42, 45, 46, 50, 51, 53, 55, 56, 59, 63, 125, 129, 130, 131, 135, 136], "utilities_exampl": [129, 130, 131], "v": [59, 60, 126], "v1": [128, 132], "v2": 136, "v4": 136, "valid": [59, 60, 70, 71, 81, 90, 92, 94, 95, 96, 106, 126, 127, 129, 130, 136, 139], "valu": [1, 3, 4, 5, 6, 7, 12, 13, 14, 15, 17, 21, 22, 24, 26, 27, 28, 31, 40, 41, 43, 44, 45, 47, 49, 50, 52, 54, 55, 57, 58, 59, 60, 66, 67, 68, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 106, 109, 110, 111, 112, 113, 114, 115, 116, 118, 126, 127, 129, 130, 131, 132, 133, 134], "value_column": 134, "value_nam": 134, "valueerror": [10, 11, 131], "vane": 126, "vane_": 129, "var": [12, 13, 14, 15, 17, 21, 68, 69], "var_nam": 134, "vari": [96, 105], "variabl": [26, 29, 39, 41, 42, 45, 46, 50, 51, 53, 55, 56, 57, 58, 59, 60, 62, 68, 69, 96, 98, 107, 108, 126, 129, 130, 131, 139], "variable_column": 134, "varianc": [12, 13, 14, 15, 17, 21, 127], "variant": 126, "variat": [59, 60, 127], "variou": [57, 58, 59, 60, 126], "ve": 132, "vector": [109, 111, 126], "venter": 68, "venv": 137, "verbos": [26, 27, 29, 59, 60, 63, 64, 65, 70, 73, 96, 99, 106, 109, 110, 111, 126, 129, 130, 131], "veri": [59, 60, 61, 96, 102, 126, 127, 129, 130, 131, 139], "version": [129, 132, 133, 134, 136, 139], "via": [113, 114, 115, 127, 133], "virtual": 137, "visual": [6, 7, 127, 132, 139], "w": [4, 5, 10, 11, 21, 22, 24, 26, 52, 53, 54, 55, 56, 75, 76, 81, 82, 88, 90, 94, 95, 96, 97, 98, 104, 106, 126, 130, 131, 132, 133, 134], "wa": [59, 60, 68, 127, 128, 129, 130, 131, 134], "wai": [26, 28, 96, 99, 126, 127, 129, 134, 135], "wake": [57, 58, 59, 63, 96, 99, 102, 105, 107, 108, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 135, 136, 139], "wake_model": [122, 123, 124], "wake_slop": [96, 102, 105], "wakest": [132, 133], "want": [59, 60, 75, 76, 113, 116, 118, 121, 129, 130, 131], "warn": [75, 76, 96, 99, 106, 129, 130, 131], "wd": [4, 5, 6, 7, 21, 22, 24, 26, 47, 48, 49, 50, 51, 57, 58, 59, 63, 68, 69, 75, 76, 81, 82, 86, 90, 94, 95, 96, 97, 98, 100, 101, 106, 126, 130, 131, 132, 133, 134], "wd_": [26, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 126, 129, 130, 131], "wd_0": 133, "wd_000": [59, 60, 63, 96, 98, 126, 129, 131, 133, 134], "wd_001": [59, 63, 126, 129, 131, 133, 134], "wd_002": [59, 63, 129, 131, 133, 134], "wd_003": [59, 60, 126, 129, 131, 133], "wd_004": [129, 131], "wd_005": [129, 131], "wd_006": [96, 98, 129, 131], "wd_1": 133, "wd_2": 133, "wd_3": 133, "wd_arrai": [6, 7, 96, 98, 100, 101, 102, 103, 130, 131, 132, 133], "wd_bia": [57, 58, 130, 131], "wd_bias_list": [130, 131], "wd_bin": [4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 81, 87], "wd_bin_overlap_radiu": [4, 5, 10, 11, 22, 24, 81, 90, 92, 132], "wd_bin_width": [6, 7, 57, 58], "wd_chang": 131, "wd_col": [4, 5, 10, 11, 12, 21, 22, 24, 81, 86, 87, 90, 94, 95], "wd_mask": [57, 58], "wd_max": [4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 81, 87, 90, 92], "wd_min": [4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 81, 87, 90, 92], "wd_or_w": 15, "wd_point": [132, 133], "wd_rang": [26, 33], "wd_ref": [130, 131], "wd_std": [96, 97, 122, 123, 124], "wd_step": [4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 57, 58, 81, 87, 90, 92, 96, 105, 130, 131], "wd_test": [130, 131], "wd_truth": 129, "wd_turbin": [4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 81, 92, 133], "we": [6, 7, 59, 60, 63, 75, 76, 96, 106, 126, 127, 129, 130, 131, 132, 134, 135, 137], "week": [59, 60, 126], "weight": [4, 5, 12, 13, 14, 15, 17, 22, 24, 81, 82, 92, 96, 102, 127], "weight_bi": [4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 81, 82, 92], "weigth": [4, 5, 22, 24], "welcom": 136, "well": [21, 26, 38, 132], "were": [59, 60, 128, 139], "west": 133, "westerli": 132, "what": [57, 58, 96, 105, 126, 130, 131, 139], "whe": [12, 13, 14, 15, 17], "when": [4, 5, 12, 13, 14, 15, 17, 22, 24, 57, 58, 59, 60, 62, 75, 76, 96, 98, 113, 116, 122, 124, 127, 129, 131, 134, 137], "where": [1, 3, 4, 5, 6, 7, 12, 13, 14, 15, 17, 22, 24, 26, 27, 28, 57, 58, 59, 60, 70, 71, 81, 85, 96, 105, 126, 130, 131, 132, 133, 134, 135], "whether": [6, 7, 10, 11, 21, 26, 37, 59, 60, 62, 64, 65, 66, 67, 68, 69, 78, 80, 81, 92, 96, 103], "which": [4, 5, 22, 24, 26, 31, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 118, 121, 125, 126, 127, 129, 130, 132, 134, 137, 139], "while": [129, 130, 131, 132, 139], "whose": [81, 87, 89, 91, 93], "wide": [75, 76, 131], "widespread": 126, "widget": 129, "width": [4, 5, 22, 24, 57, 58, 70, 71, 72], "wind": [4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 33, 34, 39, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 75, 76, 78, 79, 80, 81, 85, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 113, 117, 122, 123, 124, 128, 129, 136, 139], "wind_data": [130, 131, 132, 133], "wind_dir_tb01": 134, "wind_dir_tb02": 134, "wind_dir_tb03": 134, "wind_direct": [107, 108, 131, 132, 133], "wind_spe": [107, 108, 131, 132, 133], "wind_speed_tb01": 134, "wind_speed_tb02": 134, "wind_speed_tb03": 134, "winddirection_80m": [126, 129], "winddirection_col": [75, 76], "window": [59, 60, 70, 71, 72, 126, 131], "window_add": 126, "window_width": [70, 71, 72, 129, 130], "windspe": [126, 129], "windspeed_80m": 129, "windspeed_col": [75, 76], "windspeedmean": 134, "wise": [59, 60], "within": [21, 26, 28, 42, 46, 48, 51, 56, 59, 60, 68, 81, 85, 90, 96, 104, 126, 127, 128, 130, 131, 132, 134, 139], "without": [26, 29, 81, 82, 90, 96, 97, 102, 132], "wn": [130, 131], "work": [75, 76, 129, 131, 132, 133, 134, 137], "worker": [57, 58], "workflow": 134, "workshop": 136, "would": [21, 59, 60, 96, 99, 126, 127, 130, 131, 139], "wrap": [81, 85, 109, 112, 118, 121, 126, 131, 139], "wrap_0deg_to_360deg": [96, 106], "wrap_360": [130, 131], "wrap_around_360": [118, 121], "wrapper": [78, 79, 96, 100, 101], "write": [96, 98, 139], "ws_": [26, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 126, 129, 131], "ws_0": 133, "ws_000": [59, 60, 61, 96, 98, 126, 129, 131, 133, 134], "ws_001": [59, 60, 61, 129, 131, 133, 134], "ws_002": [129, 131, 134], "ws_003": [59, 60, 129, 131], "ws_004": [129, 131], "ws_005": [129, 131], "ws_006": [96, 98, 129, 131], "ws_1": 133, "ws_arrai": [96, 98, 131, 132, 133], "ws_bin": [4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 59, 60, 81, 87, 89], "ws_col": [4, 5, 10, 11, 12, 21, 22, 24, 81, 88, 89, 90, 94, 95], "ws_deadband": [59, 60, 129], "ws_mask": [57, 58, 130, 131], "ws_max": [4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 81, 87, 89, 90, 92], "ws_min": [4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 81, 87, 89, 90, 92], "ws_pitch_": 129, "ws_point": [132, 133], "ws_pow_": 129, "ws_pow_postprocessed_": 129, "ws_power_": 129, "ws_rang": [6, 7, 26, 34, 126], "ws_step": [4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 57, 58, 81, 87, 89, 90, 92], "ws_test": [96, 100, 101, 103, 130, 131], "ws_truth": 129, "ws_turbin": [4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 81, 92, 133], "wtg": [129, 130, 131], "www": 132, "x": [26, 39, 42, 46, 48, 51, 53, 56, 59, 60, 68, 96, 103, 109, 110, 111, 118, 121, 130, 131, 132, 133, 134], "x0": [130, 131], "x64": 131, "x_col": [59, 60, 129], "x_opt": [109, 110, 111], "x_search_bound": [130, 131], "x_turb": [26, 39, 42, 46, 48, 51, 53, 56, 96, 104, 130, 131], "xaxi": 131, "xlabel": [59, 60, 129, 132, 133], "xp": [118, 121], "y": [6, 7, 26, 39, 42, 46, 48, 51, 53, 56, 59, 60, 109, 111, 118, 121, 131, 132, 133], "y_col": [59, 60, 129], "y_data": 68, "y_regr": 68, "y_shift_rang": [109, 111], "y_turb": [26, 39, 42, 46, 48, 51, 53, 56, 96, 104, 130, 131], "yaml": [132, 133], "yaw": [68, 69, 107, 108, 113, 117, 126, 132, 133, 139], "yaw_": [126, 129, 130], "yaw_000": 126, "yaw_001": 126, "yaw_angl": [113, 117, 132], "yaw_angles_opt": [107, 108], "yaw_optimizer_visu": 139, "yawanglemean": 134, "year": 139, "yet": [59, 60, 126, 130], "yield": [96, 98, 105, 127, 128], "ylabel": [59, 60, 68, 129, 132, 133], "ylim": [6, 7], "you": [59, 60, 62, 113, 116, 118, 121, 126, 129, 135, 137, 139], "your": [26, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 96, 105, 106, 129, 137, 139], "yref": [109, 112], "ytest": [109, 112], "zero": [4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 59, 60, 107, 108, 129, 130, 131, 132], "zip": [129, 131], "zipfil": 129, "zoh": [26, 28], "zoom": 129}, "titles": ["flasc.analysis", "flasc.analysis.analysis_input", "flasc.analysis.analysis_input.AnalysisInput", "flasc.analysis.analysis_input.generate_block_list", "flasc.analysis.energy_ratio", "flasc.analysis.energy_ratio.compute_energy_ratio", "flasc.analysis.energy_ratio_heterogeneity_mapper", "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper", "flasc.analysis.energy_ratio_input", "flasc.analysis.energy_ratio_input.EnergyRatioInput", "flasc.analysis.energy_ratio_output", "flasc.analysis.energy_ratio_output.EnergyRatioOutput", "flasc.analysis.expected_power_analysis", "flasc.analysis.expected_power_analysis.total_uplift_expected_power", "flasc.analysis.expected_power_analysis.total_uplift_expected_power_sweep_ws_min", "flasc.analysis.expected_power_analysis_by", "flasc.analysis.expected_power_analysis_by.total_uplift_expected_power_by_wd", "flasc.analysis.expected_power_analysis_by.total_uplift_expected_power_by_wd_shift_ws_min", "flasc.analysis.expected_power_analysis_by.total_uplift_expected_power_by_ws", "flasc.analysis.expected_power_analysis_output", "flasc.analysis.expected_power_analysis_output.ExpectedPowerAnalysisOutput", "flasc.analysis.expected_power_analysis_utilities", "flasc.analysis.total_uplift_power_ratio", "flasc.analysis.total_uplift_power_ratio.compute_total_uplift", "flasc.analysis.total_uplift_power_ratio.total_uplift_power_ratio", "flasc.data_processing", "flasc.data_processing.dataframe_manipulations", "flasc.data_processing.dataframe_manipulations.df_drop_nan_rows", "flasc.data_processing.dataframe_manipulations.df_find_and_fill_data_gaps_with_missing", "flasc.data_processing.dataframe_manipulations.df_reduce_precision", "flasc.data_processing.dataframe_manipulations.df_sort_and_find_duplicates", "flasc.data_processing.dataframe_manipulations.df_sort_and_fix_duplicates", "flasc.data_processing.dataframe_manipulations.filter_df_by_ti", "flasc.data_processing.dataframe_manipulations.filter_df_by_wd", "flasc.data_processing.dataframe_manipulations.filter_df_by_ws", "flasc.data_processing.dataframe_manipulations.get_column_mean", "flasc.data_processing.dataframe_manipulations.get_num_turbines", "flasc.data_processing.dataframe_manipulations.is_day_or_night", "flasc.data_processing.dataframe_manipulations.plot_sun_altitude_with_day_night_color", "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_n_closest_upstream_turbines", "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_turbines", "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines", "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines_in_radius", "flasc.data_processing.dataframe_manipulations.set_ti_by_all_turbines", "flasc.data_processing.dataframe_manipulations.set_ti_by_turbines", "flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines", "flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines_in_radius", "flasc.data_processing.dataframe_manipulations.set_wd_by_all_turbines", "flasc.data_processing.dataframe_manipulations.set_wd_by_radius_from_turbine", "flasc.data_processing.dataframe_manipulations.set_wd_by_turbines", "flasc.data_processing.dataframe_manipulations.set_wd_by_upstream_turbines", "flasc.data_processing.dataframe_manipulations.set_wd_by_upstream_turbines_in_radius", "flasc.data_processing.dataframe_manipulations.set_ws_by_all_turbines", "flasc.data_processing.dataframe_manipulations.set_ws_by_n_closest_upstream_turbines", "flasc.data_processing.dataframe_manipulations.set_ws_by_turbines", "flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines", "flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines_in_radius", "flasc.data_processing.energy_ratio_wd_bias_estimation", "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation", "flasc.data_processing.filtering", "flasc.data_processing.filtering.FlascFilter", "flasc.data_processing.filtering.df_get_no_faulty_measurements", "flasc.data_processing.filtering.df_mark_turbdata_as_faulty", "flasc.data_processing.filtering.filter_df_by_faulty_impacting_turbines", "flasc.data_processing.find_sensor_faults", "flasc.data_processing.find_sensor_faults.find_sensor_stuck_faults", "flasc.data_processing.northing_offset", "flasc.data_processing.northing_offset.crosscheck_northing_offset_consistency", "flasc.data_processing.northing_offset_change_hoger", "flasc.data_processing.northing_offset_change_hoger.homogenize_hoger", "flasc.data_processing.time_operations", "flasc.data_processing.time_operations.df_downsample", "flasc.data_processing.time_operations.df_movingaverage", "flasc.data_processing.time_operations.df_resample_by_interpolation", "flasc.data_processing.time_operations.flatten_cols", "flasc.flasc_dataframe", "flasc.flasc_dataframe.FlascDataFrame", "flasc.utilities", "flasc.utilities.circular_statistics", "flasc.utilities.circular_statistics.calc_wd_mean_radial", "flasc.utilities.circular_statistics.calculate_wd_statistics", "flasc.utilities.energy_ratio_utilities", "flasc.utilities.energy_ratio_utilities.add_bin_weights", "flasc.utilities.energy_ratio_utilities.add_power_ref", "flasc.utilities.energy_ratio_utilities.add_power_test", "flasc.utilities.energy_ratio_utilities.add_reflected_rows", "flasc.utilities.energy_ratio_utilities.add_wd", "flasc.utilities.energy_ratio_utilities.add_wd_bin", "flasc.utilities.energy_ratio_utilities.add_ws", "flasc.utilities.energy_ratio_utilities.add_ws_bin", "flasc.utilities.energy_ratio_utilities.bin_and_group_dataframe", "flasc.utilities.energy_ratio_utilities.bin_column", "flasc.utilities.energy_ratio_utilities.check_compute_analysis_inputs", "flasc.utilities.energy_ratio_utilities.cut", "flasc.utilities.energy_ratio_utilities.filter_all_nulls", "flasc.utilities.energy_ratio_utilities.filter_any_nulls", "flasc.utilities.floris_tools", "flasc.utilities.floris_tools.add_gaussian_blending_to_floris_approx_table", "flasc.utilities.floris_tools.calc_floris_approx_table", "flasc.utilities.floris_tools.estimate_ws_with_floris", "flasc.utilities.floris_tools.get_all_dependent_turbines", "flasc.utilities.floris_tools.get_all_impacting_turbines", "flasc.utilities.floris_tools.get_all_impacting_turbines_geometrical", "flasc.utilities.floris_tools.get_dependent_turbines_by_wd", "flasc.utilities.floris_tools.get_turbs_in_radius", "flasc.utilities.floris_tools.get_upstream_turbs_floris", "flasc.utilities.floris_tools.interpolate_floris_from_df_approx", "flasc.utilities.lookup_table_tools", "flasc.utilities.lookup_table_tools.get_yaw_angles_interpolant", "flasc.utilities.optimization", "flasc.utilities.optimization.estimate_ti", "flasc.utilities.optimization.find_timeshift_between_dfs", "flasc.utilities.optimization.match_y_curves_by_offset", "flasc.utilities.tuner_utilities", "flasc.utilities.tuner_utilities.nested_get", "flasc.utilities.tuner_utilities.nested_set", "flasc.utilities.tuner_utilities.replicate_nan_values", "flasc.utilities.tuner_utilities.resim_floris", "flasc.utilities.utilities", "flasc.utilities.utilities.estimate_dt", "flasc.utilities.utilities.get_num_turbines", "flasc.utilities.utilities.interp_with_max_gap", "flasc.utilities.utilities_examples", "flasc.utilities.utilities_examples.load_floris_artificial", "flasc.utilities.utilities_examples.load_floris_smarteole", "API Documentation", "Raw data processing", "Calculating the change in energy production", "Energy ratio analysis", "<strong>Import dependencies</strong>", "<strong>Import dependencies</strong>", "Northing Calibration in FLASC", "Demonstrate energy ratio syntax", "Demonstrate energy ratio options", "FLASC data format", "Getting started", "FLASC documentation", "Installation", "Licensing", "Overview"], "titleterms": {"0": [129, 130, 132], "1": [129, 130], "2": [129, 130, 132], "3": [129, 130], "4": [130, 131], "5": [130, 131], "6": [130, 131], "7": 130, "a_00_initial_download": 126, "a_01_to_common_format_df": 126, "a_02_basic_filt": 126, "a_03_check_sensor_stuck_fault": 126, "a_04_wspowercurve_filtering_cod": 126, "a_04_wspowercurve_filtering_gui": 126, "a_05a_plot_faults_with_layout": 126, "a_05b_cross_compare_wd_measurement_calibr": 126, "a_06a_determine_timeshift_datasourc": 126, "a_06b_apply_timeshift_df": 126, "a_07a_estimate_wd_bias_per_turbin": 126, "a_07b_wd_bias_to_df": 126, "a_08_plot_energy_ratio": 126, "add": 132, "add_bin_weight": 82, "add_gaussian_blending_to_floris_approx_t": 97, "add_power_ref": 83, "add_power_test": 84, "add_reflected_row": 85, "add_w": 88, "add_wd": 86, "add_wd_bin": 87, "add_ws_bin": 89, "analysi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 127, 128, 139], "analysis_input": [1, 2, 3], "analysisinput": 2, "angl": 131, "api": 125, "ar": 131, "assembl": 132, "bia": [130, 131], "bias": [130, 131], "bias_estim": 58, "bin_and_group_datafram": 90, "bin_column": 91, "calc_floris_approx_t": 98, "calc_wd_mean_radi": 79, "calcul": [127, 132], "calculate_wd_statist": 80, "calibr": 131, "chang": [127, 131, 132], "check": 131, "check_compute_analysis_input": 92, "circular_statist": [78, 79, 80], "citat": 139, "clean": 131, "common": 129, "compar": 130, "comput": [132, 133], "compute_energy_ratio": 5, "compute_total_uplift": 23, "convert": 134, "correct": [130, 131], "creat": 134, "cross": [130, 131], "crosscheck_northing_offset_consist": 67, "cut": 93, "data": [126, 129, 130, 131, 134], "data_process": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 139], "datafram": 132, "dataframe_manipul": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "dataset": [132, 133], "deal": [130, 131], "demonstr": [128, 132, 133], "depend": [129, 130], "develop": 137, "df_downsampl": 71, "df_drop_nan_row": 27, "df_find_and_fill_data_gaps_with_miss": 28, "df_get_no_faulty_measur": 61, "df_mark_turbdata_as_faulti": 62, "df_movingaverag": 72, "df_reduce_precis": 29, "df_resample_by_interpol": 73, "df_sort_and_find_dupl": 30, "df_sort_and_fix_dupl": 31, "direct": [130, 131, 132, 133], "document": [125, 136], "energi": [127, 128, 132, 133], "energy_ratio": [4, 5], "energy_ratio_heterogeneity_mapp": [6, 7], "energy_ratio_input": [8, 9], "energy_ratio_output": [10, 11], "energy_ratio_util": [81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "energy_ratio_wd_bias_estim": [57, 58], "energyratioinput": 9, "energyratiooutput": [11, 132], "error": 131, "estim": [130, 131], "estimate_dt": 119, "estimate_ti": 110, "estimate_ws_with_flori": 99, "exampl": [126, 128, 135], "expect": 127, "expected_power_analysi": [12, 13, 14], "expected_power_analysis_bi": [15, 16, 17, 18], "expected_power_analysis_output": [19, 20], "expected_power_analysis_util": 21, "expectedpoweranalysisoutput": 20, "export": 134, "farm": 126, "fault": [129, 130, 131], "file": 129, "filter": [59, 60, 61, 62, 63, 126, 129], "filter_all_nul": 94, "filter_any_nul": 95, "filter_df_by_faulty_impacting_turbin": 63, "filter_df_by_ti": 32, "filter_df_by_w": 34, "filter_df_by_wd": 33, "final": 131, "find_sensor_fault": [64, 65], "find_sensor_stuck_fault": 65, "find_timeshift_between_df": 111, "flasc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 131, 134, 135, 136, 139], "flasc_datafram": [75, 76], "flascdatafram": [76, 134], "flascfilt": 60, "flatten_col": 74, "flori": [130, 131, 132, 133], "floris_tool": [96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], "format": [126, 129, 134], "from": [131, 134], "gener": [131, 132, 133], "generate_block_list": 3, "get": 135, "get_all_dependent_turbin": 100, "get_all_impacting_turbin": 101, "get_all_impacting_turbines_geometr": 102, "get_column_mean": 35, "get_dependent_turbines_by_wd": 103, "get_num_turbin": [36, 120], "get_turbs_in_radiu": 104, "get_upstream_turbs_flori": 105, "get_yaw_angles_interpol": 108, "heterogeneity_mapp": 7, "hoger": 131, "homegen": 131, "homogenize_hog": 69, "illustr": [131, 133], "import": [129, 130], "initi": [129, 130], "input": 132, "instal": [135, 137], "inter": [130, 131], "interp_with_max_gap": 121, "interpolate_floris_from_df_approx": 106, "is_day_or_night": 37, "layout": [129, 131], "licens": 138, "literatur": 139, "load": 131, "load_floris_artifici": 123, "load_floris_smarteol": 124, "local": 129, "long": 134, "lookup_table_tool": [107, 108], "match_y_curves_by_offset": 112, "measur": 130, "model": 131, "necessari": 126, "nested_get": 114, "nested_set": 115, "nois": 132, "north": 131, "northing_offset": [66, 67], "northing_offset_change_hog": [68, 69], "offset": 131, "oper": 131, "optim": [109, 110, 111, 112], "option": [126, 133], "outlier": 129, "overview": 139, "packag": 139, "panda": 132, "plot": 129, "plot_sun_altitude_with_day_night_color": 38, "postprocess": 129, "power": [127, 133], "pre": 133, "process": [126, 130], "product": 127, "pulldown": [129, 130], "py": 126, "question": 139, "ratio": [127, 128, 132, 133], "raw": 126, "recalcul": 131, "refer": 133, "remain": [130, 131], "remov": 131, "replicate_nan_valu": 116, "resim_flori": 117, "respect": [131, 132], "retriev": 126, "save": [129, 130], "set": 131, "set_pow_ref_by_n_closest_upstream_turbin": 39, "set_pow_ref_by_turbin": 40, "set_pow_ref_by_upstream_turbin": 41, "set_pow_ref_by_upstream_turbines_in_radiu": 42, "set_ti_by_all_turbin": 43, "set_ti_by_turbin": 44, "set_ti_by_upstream_turbin": 45, "set_ti_by_upstream_turbines_in_radiu": 46, "set_wd_by_all_turbin": 47, "set_wd_by_radius_from_turbin": 48, "set_wd_by_turbin": 49, "set_wd_by_upstream_turbin": 50, "set_wd_by_upstream_turbines_in_radiu": 51, "set_ws_by_all_turbin": 52, "set_ws_by_n_closest_upstream_turbin": 53, "set_ws_by_turbin": 54, "set_ws_by_upstream_turbin": 55, "set_ws_by_upstream_turbines_in_radiu": 56, "show": 131, "signal": 132, "singl": [130, 131], "softwar": 136, "some": 132, "speed": [132, 133], "start": 135, "steadi": 131, "step": [129, 130, 131], "syntax": 132, "tabl": 126, "tall": 126, "three": 126, "time_oper": [70, 71, 72, 73, 74], "total": 127, "total_uplift_expected_pow": 13, "total_uplift_expected_power_by_w": 18, "total_uplift_expected_power_by_wd": 16, "total_uplift_expected_power_by_wd_shift_ws_min": 17, "total_uplift_expected_power_sweep_ws_min": 14, "total_uplift_power_ratio": [22, 23, 24], "tuner_util": [113, 114, 115, 116, 117], "turbin": [126, 130, 131, 132], "uncertainti": 132, "up": [127, 134], "uplift": [127, 132], "us": 134, "usag": 128, "user": 134, "util": [77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 139], "utilities_exampl": [122, 123, 124], "v": 129, "weto": 136, "which": 131, "wide": [126, 134], "wind": [126, 127, 130, 131, 132, 133, 134], "yaw": 131}})