Search.setIndex({"alltitles": {"API Documentation": [[112, null]], "Assemble the pandas dataframes and add some noise to the wind speed and direction signals": [[118, "assemble-the-pandas-dataframes-and-add-some-noise-to-the-wind-speed-and-direction-signals"]], "Calculating Uplift": [[118, "calculating-uplift"]], "Change uncertainty calculation": [[118, "change-uncertainty-calculation"]], "Citation": [[125, "citation"]], "Compute the energy ratio of turbine 2, with respect to turbine 0": [[118, "compute-the-energy-ratio-of-turbine-2-with-respect-to-turbine-0"]], "Computing the energy ratio": [[118, "computing-the-energy-ratio"]], "Converting Wide and Long": [[120, "converting-wide-and-long"]], "Creating a FlascDataFrame from User Data": [[120, "creating-a-flascdataframe-from-user-data"]], "Cross-Check Northing calibration": [[117, "cross-check-northing-calibration"]], "Data filtering": [[113, "data-filtering"]], "Demonstrate energy ratio options": [[119, null]], "Demonstrate energy ratio syntax": [[118, null]], "Energy Ratio Input": [[118, "energy-ratio-input"]], "Energy ratio analysis": [[114, null]], "EnergyRatioOutput": [[118, "energyratiooutput"]], "Example Tall data format for a three turbine wind farm": [[113, "id1"]], "Example Wide data format for a three turbine wind farm": [[113, "id2"]], "Examples demonstrating energy ratio usage": [[114, "examples-demonstrating-energy-ratio-usage"]], "Exporting to wind-up format": [[120, "exporting-to-wind-up-format"]], "FLASC data format": [[120, null]], "FLASC documentation": [[122, null]], "FLASC examples": [[121, "flasc-examples"]], "FLASC package": [[125, "flasc-package"]], "FlascDataFrame": [[120, "flascdataframe"]], "Format data to a wide table format (if necessary)": [[113, "format-data-to-a-wide-table-format-if-necessary"]], "Generate data set to illustrate operations": [[117, "generate-data-set-to-illustrate-operations"]], "Generate dataset with FLORIS": [[118, "generate-dataset-with-floris"], [119, "generate-dataset-with-floris"]], "Getting started": [[121, null]], "Homegenization with HOGER": [[117, "homegenization-with-hoger"]], "Illustrating pre-computing reference wind speed, direction and power": [[119, "illustrating-pre-computing-reference-wind-speed-direction-and-power"]], "Import dependencies": [[115, null], [116, null]], "Install FLASC": [[121, "install-flasc"]], "Installation": [[123, null]], "Installation for developers": [[123, "installation-for-developers"]], "Licensing": [[124, null]], "Literature": [[125, "literature"]], "Load FLORIS model and show layout": [[117, "load-floris-model-and-show-layout"]], "Northing Calibration in FLASC": [[117, null]], "Northing calibration error": [[117, "northing-calibration-error"]], "Overview": [[125, null]], "Questions": [[125, "questions"]], "Raw data processing": [[113, null]], "Raw data retrieval": [[113, "raw-data-retrieval"]], "Recalculate which turbines are clean with respect to offset changes": [[117, "recalculate-which-turbines-are-clean-with-respect-to-offset-changes"]], "Remove steady offset from a single turbine": [[117, "remove-steady-offset-from-a-single-turbine"]], "Save postprocessed data to a local file": [[115, "save-postprocessed-data-to-a-local-file"]], "Show the final yaw angles": [[117, "show-the-final-yaw-angles"]], "Step 0: Initial data pulldown": [[115, "step-0-initial-data-pulldown"], [116, "step-0-initial-data-pulldown"]], "Step 1: Format to common FLASC format": [[115, "step-1-format-to-common-flasc-format"]], "Step 1: Initialize FLORIS": [[116, "step-1-initialize-floris"]], "Step 2: Cross-compare wind direction measurements": [[116, "step-2-cross-compare-wind-direction-measurements"]], "Step 2: Filter the data for outliers": [[115, "step-2-filter-the-data-for-outliers"]], "Step 3: Estimate the wind direction bias for a single wind turbine": [[116, "step-3-estimate-the-wind-direction-bias-for-a-single-wind-turbine"]], "Step 3: Plot faults vs. the layout": [[115, "step-3-plot-faults-vs-the-layout"]], "Step 4: Estimate the biases of the remaining turbines": [[116, "step-4-estimate-the-biases-of-the-remaining-turbines"], [117, "step-4-estimate-the-biases-of-the-remaining-turbines"]], "Step 5: Correct turbine wind directions for bias": [[116, "step-5-correct-turbine-wind-directions-for-bias"], [117, "step-5-correct-turbine-wind-directions-for-bias"]], "Step 6: Deal with inter-turbine faults": [[116, "step-6-deal-with-inter-turbine-faults"], [117, "step-6-deal-with-inter-turbine-faults"]], "Step 7: Save the processed data": [[116, "step-7-save-the-processed-data"]], "Total uplift": [[126, null]], "Using FlascDataFrame": [[120, "using-flascdataframe"]], "a_00_initial_download.py": [[113, "a-00-initial-download-py"]], "a_01_to_common_format_df.py": [[113, "a-01-to-common-format-df-py"]], "a_02_basic_filters.py": [[113, "a-02-basic-filters-py"]], "a_03_check_sensor_stuck_faults.py": [[113, "a-03-check-sensor-stuck-faults-py"]], "a_04_wspowercurve_filtering_code.py": [[113, "a-04-wspowercurve-filtering-code-py"]], "a_04_wspowercurve_filtering_gui.py (optional)": [[113, "a-04-wspowercurve-filtering-gui-py-optional"]], "a_05a_plot_faults_with_layout.py (optional)": [[113, "a-05a-plot-faults-with-layout-py-optional"]], "a_05b_cross_compare_wd_measurement_calibrations.py (optional)": [[113, "a-05b-cross-compare-wd-measurement-calibrations-py-optional"]], "a_06a_determine_timeshift_datasources.py (optional)": [[113, "a-06a-determine-timeshift-datasources-py-optional"]], "a_06b_apply_timeshift_dfs.py (optional)": [[113, "a-06b-apply-timeshift-dfs-py-optional"]], "a_07a_estimate_wd_bias_per_turbine.py": [[113, "a-07a-estimate-wd-bias-per-turbine-py"]], "a_07b_wd_bias_to_df.py": [[113, "a-07b-wd-bias-to-df-py"]], "a_08_plot_energy_ratios.py": [[113, "a-08-plot-energy-ratios-py"]], "flasc.analysis": [[0, null], [125, "flasc-analysis"]], "flasc.analysis.energy_ratio": [[1, null]], "flasc.analysis.energy_ratio.compute_energy_ratio": [[2, null]], "flasc.analysis.energy_ratio_heterogeneity_mapper": [[3, null]], "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper": [[4, null]], "flasc.analysis.energy_ratio_input": [[5, null]], "flasc.analysis.energy_ratio_input.EnergyRatioInput": [[6, null]], "flasc.analysis.energy_ratio_input.generate_block_list": [[7, null]], "flasc.analysis.energy_ratio_output": [[8, null]], "flasc.analysis.energy_ratio_output.EnergyRatioOutput": [[9, null]], "flasc.analysis.total_uplift": [[10, null]], "flasc.analysis.total_uplift.compute_total_uplift": [[11, null]], "flasc.data_processing": [[12, null], [125, "flasc-data-processing"]], "flasc.data_processing.dataframe_manipulations": [[13, null]], "flasc.data_processing.dataframe_manipulations.df_drop_nan_rows": [[14, null]], "flasc.data_processing.dataframe_manipulations.df_find_and_fill_data_gaps_with_missing": [[15, null]], "flasc.data_processing.dataframe_manipulations.df_reduce_precision": [[16, null]], "flasc.data_processing.dataframe_manipulations.df_sort_and_find_duplicates": [[17, null]], "flasc.data_processing.dataframe_manipulations.df_sort_and_fix_duplicates": [[18, null]], "flasc.data_processing.dataframe_manipulations.filter_df_by_ti": [[19, null]], "flasc.data_processing.dataframe_manipulations.filter_df_by_wd": [[20, null]], "flasc.data_processing.dataframe_manipulations.filter_df_by_ws": [[21, null]], "flasc.data_processing.dataframe_manipulations.get_column_mean": [[22, null]], "flasc.data_processing.dataframe_manipulations.get_num_turbines": [[23, null]], "flasc.data_processing.dataframe_manipulations.is_day_or_night": [[24, null]], "flasc.data_processing.dataframe_manipulations.plot_sun_altitude_with_day_night_color": [[25, null]], "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_n_closest_upstream_turbines": [[26, null]], "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_turbines": [[27, null]], "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines": [[28, null]], "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines_in_radius": [[29, null]], "flasc.data_processing.dataframe_manipulations.set_ti_by_all_turbines": [[30, null]], "flasc.data_processing.dataframe_manipulations.set_ti_by_turbines": [[31, null]], "flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines": [[32, null]], "flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines_in_radius": [[33, null]], "flasc.data_processing.dataframe_manipulations.set_wd_by_all_turbines": [[34, null]], "flasc.data_processing.dataframe_manipulations.set_wd_by_radius_from_turbine": [[35, null]], "flasc.data_processing.dataframe_manipulations.set_wd_by_turbines": [[36, null]], "flasc.data_processing.dataframe_manipulations.set_wd_by_upstream_turbines": [[37, null]], "flasc.data_processing.dataframe_manipulations.set_wd_by_upstream_turbines_in_radius": [[38, null]], "flasc.data_processing.dataframe_manipulations.set_ws_by_all_turbines": [[39, null]], "flasc.data_processing.dataframe_manipulations.set_ws_by_n_closest_upstream_turbines": [[40, null]], "flasc.data_processing.dataframe_manipulations.set_ws_by_turbines": [[41, null]], "flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines": [[42, null]], "flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines_in_radius": [[43, null]], "flasc.data_processing.energy_ratio_wd_bias_estimation": [[44, null]], "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation": [[45, null]], "flasc.data_processing.filtering": [[46, null]], "flasc.data_processing.filtering.FlascFilter": [[47, null]], "flasc.data_processing.filtering.df_get_no_faulty_measurements": [[48, null]], "flasc.data_processing.filtering.df_mark_turbdata_as_faulty": [[49, null]], "flasc.data_processing.filtering.filter_df_by_faulty_impacting_turbines": [[50, null]], "flasc.data_processing.find_sensor_faults": [[51, null]], "flasc.data_processing.find_sensor_faults.find_sensor_stuck_faults": [[52, null]], "flasc.data_processing.northing_offset": [[53, null]], "flasc.data_processing.northing_offset.crosscheck_northing_offset_consistency": [[54, null]], "flasc.data_processing.northing_offset_change_hoger": [[55, null]], "flasc.data_processing.northing_offset_change_hoger.homogenize_hoger": [[56, null]], "flasc.data_processing.time_operations": [[57, null]], "flasc.data_processing.time_operations.df_downsample": [[58, null]], "flasc.data_processing.time_operations.df_movingaverage": [[59, null]], "flasc.data_processing.time_operations.df_resample_by_interpolation": [[60, null]], "flasc.data_processing.time_operations.flatten_cols": [[61, null]], "flasc.flasc_dataframe": [[62, null]], "flasc.flasc_dataframe.FlascDataFrame": [[63, null]], "flasc.utilities": [[64, null], [125, "flasc-utilities"]], "flasc.utilities.circular_statistics": [[65, null]], "flasc.utilities.circular_statistics.calc_wd_mean_radial": [[66, null]], "flasc.utilities.circular_statistics.calculate_wd_statistics": [[67, null]], "flasc.utilities.energy_ratio_utilities": [[68, null]], "flasc.utilities.energy_ratio_utilities.add_bin_weights": [[69, null]], "flasc.utilities.energy_ratio_utilities.add_power_ref": [[70, null]], "flasc.utilities.energy_ratio_utilities.add_power_test": [[71, null]], "flasc.utilities.energy_ratio_utilities.add_reflected_rows": [[72, null]], "flasc.utilities.energy_ratio_utilities.add_wd": [[73, null]], "flasc.utilities.energy_ratio_utilities.add_wd_bin": [[74, null]], "flasc.utilities.energy_ratio_utilities.add_ws": [[75, null]], "flasc.utilities.energy_ratio_utilities.add_ws_bin": [[76, null]], "flasc.utilities.energy_ratio_utilities.bin_and_group_dataframe": [[77, null]], "flasc.utilities.energy_ratio_utilities.bin_column": [[78, null]], "flasc.utilities.energy_ratio_utilities.check_compute_energy_ratio_inputs": [[79, null]], "flasc.utilities.energy_ratio_utilities.cut": [[80, null]], "flasc.utilities.energy_ratio_utilities.filter_all_nulls": [[81, null]], "flasc.utilities.energy_ratio_utilities.filter_any_nulls": [[82, null]], "flasc.utilities.floris_tools": [[83, null]], "flasc.utilities.floris_tools.add_gaussian_blending_to_floris_approx_table": [[84, null]], "flasc.utilities.floris_tools.calc_floris_approx_table": [[85, null]], "flasc.utilities.floris_tools.estimate_ws_with_floris": [[86, null]], "flasc.utilities.floris_tools.get_all_dependent_turbines": [[87, null]], "flasc.utilities.floris_tools.get_all_impacting_turbines": [[88, null]], "flasc.utilities.floris_tools.get_all_impacting_turbines_geometrical": [[89, null]], "flasc.utilities.floris_tools.get_dependent_turbines_by_wd": [[90, null]], "flasc.utilities.floris_tools.get_turbs_in_radius": [[91, null]], "flasc.utilities.floris_tools.get_upstream_turbs_floris": [[92, null]], "flasc.utilities.floris_tools.interpolate_floris_from_df_approx": [[93, null]], "flasc.utilities.lookup_table_tools": [[94, null]], "flasc.utilities.lookup_table_tools.get_yaw_angles_interpolant": [[95, null]], "flasc.utilities.optimization": [[96, null]], "flasc.utilities.optimization.estimate_ti": [[97, null]], "flasc.utilities.optimization.find_timeshift_between_dfs": [[98, null]], "flasc.utilities.optimization.match_y_curves_by_offset": [[99, null]], "flasc.utilities.tuner_utilities": [[100, null]], "flasc.utilities.tuner_utilities.nested_get": [[101, null]], "flasc.utilities.tuner_utilities.nested_set": [[102, null]], "flasc.utilities.tuner_utilities.replicate_nan_values": [[103, null]], "flasc.utilities.tuner_utilities.resim_floris": [[104, null]], "flasc.utilities.utilities": [[105, null]], "flasc.utilities.utilities.estimate_dt": [[106, null]], "flasc.utilities.utilities.get_num_turbines": [[107, null]], "flasc.utilities.utilities.interp_with_max_gap": [[108, null]], "flasc.utilities.utilities_examples": [[109, null]], "flasc.utilities.utilities_examples.load_floris_artificial": [[110, null]], "flasc.utilities.utilities_examples.load_floris_smarteole": [[111, null]]}, "docnames": ["_autosummary/flasc.analysis", "_autosummary/flasc.analysis.energy_ratio", "_autosummary/flasc.analysis.energy_ratio.compute_energy_ratio", "_autosummary/flasc.analysis.energy_ratio_heterogeneity_mapper", "_autosummary/flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper", "_autosummary/flasc.analysis.energy_ratio_input", "_autosummary/flasc.analysis.energy_ratio_input.EnergyRatioInput", "_autosummary/flasc.analysis.energy_ratio_input.generate_block_list", "_autosummary/flasc.analysis.energy_ratio_output", "_autosummary/flasc.analysis.energy_ratio_output.EnergyRatioOutput", "_autosummary/flasc.analysis.total_uplift", "_autosummary/flasc.analysis.total_uplift.compute_total_uplift", "_autosummary/flasc.data_processing", "_autosummary/flasc.data_processing.dataframe_manipulations", "_autosummary/flasc.data_processing.dataframe_manipulations.df_drop_nan_rows", "_autosummary/flasc.data_processing.dataframe_manipulations.df_find_and_fill_data_gaps_with_missing", "_autosummary/flasc.data_processing.dataframe_manipulations.df_reduce_precision", "_autosummary/flasc.data_processing.dataframe_manipulations.df_sort_and_find_duplicates", "_autosummary/flasc.data_processing.dataframe_manipulations.df_sort_and_fix_duplicates", "_autosummary/flasc.data_processing.dataframe_manipulations.filter_df_by_ti", "_autosummary/flasc.data_processing.dataframe_manipulations.filter_df_by_wd", "_autosummary/flasc.data_processing.dataframe_manipulations.filter_df_by_ws", "_autosummary/flasc.data_processing.dataframe_manipulations.get_column_mean", "_autosummary/flasc.data_processing.dataframe_manipulations.get_num_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.is_day_or_night", "_autosummary/flasc.data_processing.dataframe_manipulations.plot_sun_altitude_with_day_night_color", "_autosummary/flasc.data_processing.dataframe_manipulations.set_pow_ref_by_n_closest_upstream_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_pow_ref_by_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines_in_radius", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ti_by_all_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ti_by_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines_in_radius", "_autosummary/flasc.data_processing.dataframe_manipulations.set_wd_by_all_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_wd_by_radius_from_turbine", "_autosummary/flasc.data_processing.dataframe_manipulations.set_wd_by_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_wd_by_upstream_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_wd_by_upstream_turbines_in_radius", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_all_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_n_closest_upstream_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines_in_radius", "_autosummary/flasc.data_processing.energy_ratio_wd_bias_estimation", "_autosummary/flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation", "_autosummary/flasc.data_processing.filtering", "_autosummary/flasc.data_processing.filtering.FlascFilter", "_autosummary/flasc.data_processing.filtering.df_get_no_faulty_measurements", "_autosummary/flasc.data_processing.filtering.df_mark_turbdata_as_faulty", "_autosummary/flasc.data_processing.filtering.filter_df_by_faulty_impacting_turbines", "_autosummary/flasc.data_processing.find_sensor_faults", "_autosummary/flasc.data_processing.find_sensor_faults.find_sensor_stuck_faults", "_autosummary/flasc.data_processing.northing_offset", "_autosummary/flasc.data_processing.northing_offset.crosscheck_northing_offset_consistency", "_autosummary/flasc.data_processing.northing_offset_change_hoger", "_autosummary/flasc.data_processing.northing_offset_change_hoger.homogenize_hoger", "_autosummary/flasc.data_processing.time_operations", "_autosummary/flasc.data_processing.time_operations.df_downsample", "_autosummary/flasc.data_processing.time_operations.df_movingaverage", "_autosummary/flasc.data_processing.time_operations.df_resample_by_interpolation", "_autosummary/flasc.data_processing.time_operations.flatten_cols", "_autosummary/flasc.flasc_dataframe", "_autosummary/flasc.flasc_dataframe.FlascDataFrame", "_autosummary/flasc.utilities", "_autosummary/flasc.utilities.circular_statistics", "_autosummary/flasc.utilities.circular_statistics.calc_wd_mean_radial", "_autosummary/flasc.utilities.circular_statistics.calculate_wd_statistics", "_autosummary/flasc.utilities.energy_ratio_utilities", "_autosummary/flasc.utilities.energy_ratio_utilities.add_bin_weights", "_autosummary/flasc.utilities.energy_ratio_utilities.add_power_ref", "_autosummary/flasc.utilities.energy_ratio_utilities.add_power_test", "_autosummary/flasc.utilities.energy_ratio_utilities.add_reflected_rows", "_autosummary/flasc.utilities.energy_ratio_utilities.add_wd", "_autosummary/flasc.utilities.energy_ratio_utilities.add_wd_bin", "_autosummary/flasc.utilities.energy_ratio_utilities.add_ws", "_autosummary/flasc.utilities.energy_ratio_utilities.add_ws_bin", "_autosummary/flasc.utilities.energy_ratio_utilities.bin_and_group_dataframe", "_autosummary/flasc.utilities.energy_ratio_utilities.bin_column", "_autosummary/flasc.utilities.energy_ratio_utilities.check_compute_energy_ratio_inputs", "_autosummary/flasc.utilities.energy_ratio_utilities.cut", "_autosummary/flasc.utilities.energy_ratio_utilities.filter_all_nulls", "_autosummary/flasc.utilities.energy_ratio_utilities.filter_any_nulls", "_autosummary/flasc.utilities.floris_tools", "_autosummary/flasc.utilities.floris_tools.add_gaussian_blending_to_floris_approx_table", "_autosummary/flasc.utilities.floris_tools.calc_floris_approx_table", "_autosummary/flasc.utilities.floris_tools.estimate_ws_with_floris", "_autosummary/flasc.utilities.floris_tools.get_all_dependent_turbines", "_autosummary/flasc.utilities.floris_tools.get_all_impacting_turbines", "_autosummary/flasc.utilities.floris_tools.get_all_impacting_turbines_geometrical", "_autosummary/flasc.utilities.floris_tools.get_dependent_turbines_by_wd", "_autosummary/flasc.utilities.floris_tools.get_turbs_in_radius", "_autosummary/flasc.utilities.floris_tools.get_upstream_turbs_floris", "_autosummary/flasc.utilities.floris_tools.interpolate_floris_from_df_approx", "_autosummary/flasc.utilities.lookup_table_tools", "_autosummary/flasc.utilities.lookup_table_tools.get_yaw_angles_interpolant", "_autosummary/flasc.utilities.optimization", "_autosummary/flasc.utilities.optimization.estimate_ti", "_autosummary/flasc.utilities.optimization.find_timeshift_between_dfs", "_autosummary/flasc.utilities.optimization.match_y_curves_by_offset", "_autosummary/flasc.utilities.tuner_utilities", "_autosummary/flasc.utilities.tuner_utilities.nested_get", "_autosummary/flasc.utilities.tuner_utilities.nested_set", "_autosummary/flasc.utilities.tuner_utilities.replicate_nan_values", "_autosummary/flasc.utilities.tuner_utilities.resim_floris", "_autosummary/flasc.utilities.utilities", "_autosummary/flasc.utilities.utilities.estimate_dt", "_autosummary/flasc.utilities.utilities.get_num_turbines", "_autosummary/flasc.utilities.utilities.interp_with_max_gap", "_autosummary/flasc.utilities.utilities_examples", "_autosummary/flasc.utilities.utilities_examples.load_floris_artificial", "_autosummary/flasc.utilities.utilities_examples.load_floris_smarteole", "api", "data_processing", "energy_ratio", "examples/01_raw_data_processing/00_filter_ws_power_curves", "examples/01_raw_data_processing/01_northing_calibration", "examples/01_raw_data_processing/03_northing_calibration_hoger", "examples/03_energy_ratio/00_demo_energy_ratio_syntax", "examples/03_energy_ratio/01_demo_energy_ratio_options", "flasc_data_format", "getting_started", "index", "installation", "licensing", "overview", "total_uplift"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/flasc.analysis.rst", "_autosummary/flasc.analysis.energy_ratio.rst", "_autosummary/flasc.analysis.energy_ratio.compute_energy_ratio.rst", "_autosummary/flasc.analysis.energy_ratio_heterogeneity_mapper.rst", "_autosummary/flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.rst", "_autosummary/flasc.analysis.energy_ratio_input.rst", "_autosummary/flasc.analysis.energy_ratio_input.EnergyRatioInput.rst", "_autosummary/flasc.analysis.energy_ratio_input.generate_block_list.rst", "_autosummary/flasc.analysis.energy_ratio_output.rst", "_autosummary/flasc.analysis.energy_ratio_output.EnergyRatioOutput.rst", "_autosummary/flasc.analysis.total_uplift.rst", "_autosummary/flasc.analysis.total_uplift.compute_total_uplift.rst", "_autosummary/flasc.data_processing.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.df_drop_nan_rows.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.df_find_and_fill_data_gaps_with_missing.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.df_reduce_precision.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.df_sort_and_find_duplicates.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.df_sort_and_fix_duplicates.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.filter_df_by_ti.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.filter_df_by_wd.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.filter_df_by_ws.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.get_column_mean.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.get_num_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.is_day_or_night.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.plot_sun_altitude_with_day_night_color.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_pow_ref_by_n_closest_upstream_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_pow_ref_by_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines_in_radius.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ti_by_all_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ti_by_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines_in_radius.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_wd_by_all_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_wd_by_radius_from_turbine.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_wd_by_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_wd_by_upstream_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_wd_by_upstream_turbines_in_radius.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_all_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_n_closest_upstream_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines_in_radius.rst", "_autosummary/flasc.data_processing.energy_ratio_wd_bias_estimation.rst", "_autosummary/flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation.rst", "_autosummary/flasc.data_processing.filtering.rst", "_autosummary/flasc.data_processing.filtering.FlascFilter.rst", "_autosummary/flasc.data_processing.filtering.df_get_no_faulty_measurements.rst", "_autosummary/flasc.data_processing.filtering.df_mark_turbdata_as_faulty.rst", "_autosummary/flasc.data_processing.filtering.filter_df_by_faulty_impacting_turbines.rst", "_autosummary/flasc.data_processing.find_sensor_faults.rst", "_autosummary/flasc.data_processing.find_sensor_faults.find_sensor_stuck_faults.rst", "_autosummary/flasc.data_processing.northing_offset.rst", "_autosummary/flasc.data_processing.northing_offset.crosscheck_northing_offset_consistency.rst", "_autosummary/flasc.data_processing.northing_offset_change_hoger.rst", "_autosummary/flasc.data_processing.northing_offset_change_hoger.homogenize_hoger.rst", "_autosummary/flasc.data_processing.time_operations.rst", "_autosummary/flasc.data_processing.time_operations.df_downsample.rst", "_autosummary/flasc.data_processing.time_operations.df_movingaverage.rst", "_autosummary/flasc.data_processing.time_operations.df_resample_by_interpolation.rst", "_autosummary/flasc.data_processing.time_operations.flatten_cols.rst", "_autosummary/flasc.flasc_dataframe.rst", "_autosummary/flasc.flasc_dataframe.FlascDataFrame.rst", "_autosummary/flasc.utilities.rst", "_autosummary/flasc.utilities.circular_statistics.rst", "_autosummary/flasc.utilities.circular_statistics.calc_wd_mean_radial.rst", "_autosummary/flasc.utilities.circular_statistics.calculate_wd_statistics.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.add_bin_weights.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.add_power_ref.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.add_power_test.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.add_reflected_rows.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.add_wd.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.add_wd_bin.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.add_ws.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.add_ws_bin.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.bin_and_group_dataframe.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.bin_column.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.check_compute_energy_ratio_inputs.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.cut.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.filter_all_nulls.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.filter_any_nulls.rst", "_autosummary/flasc.utilities.floris_tools.rst", "_autosummary/flasc.utilities.floris_tools.add_gaussian_blending_to_floris_approx_table.rst", "_autosummary/flasc.utilities.floris_tools.calc_floris_approx_table.rst", "_autosummary/flasc.utilities.floris_tools.estimate_ws_with_floris.rst", "_autosummary/flasc.utilities.floris_tools.get_all_dependent_turbines.rst", "_autosummary/flasc.utilities.floris_tools.get_all_impacting_turbines.rst", "_autosummary/flasc.utilities.floris_tools.get_all_impacting_turbines_geometrical.rst", "_autosummary/flasc.utilities.floris_tools.get_dependent_turbines_by_wd.rst", "_autosummary/flasc.utilities.floris_tools.get_turbs_in_radius.rst", "_autosummary/flasc.utilities.floris_tools.get_upstream_turbs_floris.rst", "_autosummary/flasc.utilities.floris_tools.interpolate_floris_from_df_approx.rst", "_autosummary/flasc.utilities.lookup_table_tools.rst", "_autosummary/flasc.utilities.lookup_table_tools.get_yaw_angles_interpolant.rst", "_autosummary/flasc.utilities.optimization.rst", "_autosummary/flasc.utilities.optimization.estimate_ti.rst", "_autosummary/flasc.utilities.optimization.find_timeshift_between_dfs.rst", "_autosummary/flasc.utilities.optimization.match_y_curves_by_offset.rst", "_autosummary/flasc.utilities.tuner_utilities.rst", "_autosummary/flasc.utilities.tuner_utilities.nested_get.rst", "_autosummary/flasc.utilities.tuner_utilities.nested_set.rst", "_autosummary/flasc.utilities.tuner_utilities.replicate_nan_values.rst", "_autosummary/flasc.utilities.tuner_utilities.resim_floris.rst", "_autosummary/flasc.utilities.utilities.rst", "_autosummary/flasc.utilities.utilities.estimate_dt.rst", "_autosummary/flasc.utilities.utilities.get_num_turbines.rst", "_autosummary/flasc.utilities.utilities.interp_with_max_gap.rst", "_autosummary/flasc.utilities.utilities_examples.rst", "_autosummary/flasc.utilities.utilities_examples.load_floris_artificial.rst", "_autosummary/flasc.utilities.utilities_examples.load_floris_smarteole.rst", "api.rst", "data_processing.rst", "energy_ratio.md", "examples/01_raw_data_processing/00_filter_ws_power_curves.ipynb", "examples/01_raw_data_processing/01_northing_calibration.ipynb", "examples/01_raw_data_processing/03_northing_calibration_hoger.ipynb", "examples/03_energy_ratio/00_demo_energy_ratio_syntax.ipynb", "examples/03_energy_ratio/01_demo_energy_ratio_options.ipynb", "flasc_data_format.ipynb", "getting_started.md", "index.md", "installation.md", "licensing.rst", "overview.md", "total_uplift.md"], "indexentries": {"_attrs (flasc.flasc_dataframe.flascdataframe attribute)": [[63, "flasc.flasc_dataframe.FlascDataFrame._attrs", false]], "_cache (flasc.flasc_dataframe.flascdataframe attribute)": [[63, "flasc.flasc_dataframe.FlascDataFrame._cache", false]], "_compute_energy_ratio_bootstrap() (in module flasc.analysis.energy_ratio)": [[1, "flasc.analysis.energy_ratio._compute_energy_ratio_bootstrap", false]], "_compute_energy_ratio_single() (in module flasc.analysis.energy_ratio)": [[1, "flasc.analysis.energy_ratio._compute_energy_ratio_single", false]], "_compute_total_uplift_bootstrap() (in module flasc.analysis.total_uplift)": [[10, "flasc.analysis.total_uplift._compute_total_uplift_bootstrap", false]], "_compute_total_uplift_single() (in module flasc.analysis.total_uplift)": [[10, "flasc.analysis.total_uplift._compute_total_uplift_single", false]], "_compute_ws_counts() (flasc.analysis.energy_ratio_output.energyratiooutput method)": [[8, "flasc.analysis.energy_ratio_output.EnergyRatioOutput._compute_ws_counts", false], [9, "flasc.analysis.energy_ratio_output.EnergyRatioOutput._compute_ws_counts", false]], "_constructor (flasc.flasc_dataframe.flascdataframe property)": [[62, "flasc.flasc_dataframe.FlascDataFrame._constructor", false], [63, "flasc.flasc_dataframe.FlascDataFrame._constructor", false]], "_convert_long_to_wide() (flasc.flasc_dataframe.flascdataframe method)": [[62, "flasc.flasc_dataframe.FlascDataFrame._convert_long_to_wide", false], [63, "flasc.flasc_dataframe.FlascDataFrame._convert_long_to_wide", false]], "_convert_wide_to_long() (flasc.flasc_dataframe.flascdataframe method)": [[62, "flasc.flasc_dataframe.FlascDataFrame._convert_wide_to_long", false], [63, "flasc.flasc_dataframe.FlascDataFrame._convert_wide_to_long", false]], "_discretize() (in module flasc.data_processing.northing_offset_change_hoger)": [[55, "flasc.data_processing.northing_offset_change_hoger._discretize", false]], "_fi_set_ws_wd_ti() (in module flasc.utilities.floris_tools)": [[83, "flasc.utilities.floris_tools._fi_set_ws_wd_ti", false]], "_find_sensor_stuck_single_timearray() (in module flasc.data_processing.find_sensor_faults)": [[51, "flasc.data_processing.find_sensor_faults._find_sensor_stuck_single_timearray", false]], "_get_all_unique_flags() (flasc.data_processing.filtering.flascfilter method)": [[46, "flasc.data_processing.filtering.FlascFilter._get_all_unique_flags", false], [47, "flasc.data_processing.filtering.FlascFilter._get_all_unique_flags", false]], "_get_energy_ratio() (in module flasc.analysis.energy_ratio_heterogeneity_mapper)": [[3, "flasc.analysis.energy_ratio_heterogeneity_mapper._get_energy_ratio", false]], "_get_energy_ratios_allbins() (flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation method)": [[44, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation._get_energy_ratios_allbins", false], [45, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation._get_energy_ratios_allbins", false]], "_get_leaves_and_knots() (in module flasc.data_processing.northing_offset_change_hoger)": [[55, "flasc.data_processing.northing_offset_change_hoger._get_leaves_and_knots", false]], "_get_mean_power_curves() (flasc.data_processing.filtering.flascfilter method)": [[46, "flasc.data_processing.filtering.FlascFilter._get_mean_power_curves", false], [47, "flasc.data_processing.filtering.FlascFilter._get_mean_power_curves", false]], "_interpolate_with_max_gap() (in module flasc.utilities.utilities)": [[105, "flasc.utilities.utilities._interpolate_with_max_gap", false]], "_load_er_input_for_wd_bias() (flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation method)": [[44, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation._load_er_input_for_wd_bias", false], [45, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation._load_er_input_for_wd_bias", false]], "_metadata (flasc.flasc_dataframe.flascdataframe attribute)": [[62, "flasc.flasc_dataframe.FlascDataFrame._metadata", false], [63, "flasc.flasc_dataframe.FlascDataFrame._metadata", false]], "_mgr (flasc.flasc_dataframe.flascdataframe attribute)": [[63, "flasc.flasc_dataframe.FlascDataFrame._mgr", false]], "_plot_regression() (in module flasc.data_processing.northing_offset_change_hoger)": [[55, "flasc.data_processing.northing_offset_change_hoger._plot_regression", false]], "_plot_top_sensor_faults() (in module flasc.data_processing.find_sensor_faults)": [[51, "flasc.data_processing.find_sensor_faults._plot_top_sensor_faults", false]], "_process_single_wd() (flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper method)": [[3, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper._process_single_wd", false], [4, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper._process_single_wd", false]], "_repr_html_() (flasc.flasc_dataframe.flascdataframe method)": [[62, "flasc.flasc_dataframe.FlascDataFrame._repr_html_", false], [63, "flasc.flasc_dataframe.FlascDataFrame._repr_html_", false]], "_reset_mean_power_curves() (flasc.data_processing.filtering.flascfilter method)": [[46, "flasc.data_processing.filtering.FlascFilter._reset_mean_power_curves", false], [47, "flasc.data_processing.filtering.FlascFilter._reset_mean_power_curves", false]], "_set_col_by_n_closest_upstream_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations._set_col_by_n_closest_upstream_turbines", false]], "_set_col_by_radius_from_turbine() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations._set_col_by_radius_from_turbine", false]], "_set_col_by_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations._set_col_by_turbines", false]], "_set_col_by_upstream_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations._set_col_by_upstream_turbines", false]], "_set_col_by_upstream_turbines_in_radius() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations._set_col_by_upstream_turbines_in_radius", false]], "_set_legend_alpha_to_one() (flasc.data_processing.filtering.flascfilter method)": [[46, "flasc.data_processing.filtering.FlascFilter._set_legend_alpha_to_one", false], [47, "flasc.data_processing.filtering.FlascFilter._set_legend_alpha_to_one", false]], "_shorth_mode() (in module flasc.data_processing.northing_offset_change_hoger)": [[55, "flasc.data_processing.northing_offset_change_hoger._shorth_mode", false]], "add_bin_weights() (in module flasc.utilities.energy_ratio_utilities)": [[68, "flasc.utilities.energy_ratio_utilities.add_bin_weights", false], [69, "flasc.utilities.energy_ratio_utilities.add_bin_weights", false]], "add_gaussian_blending_to_floris_approx_table() (in module flasc.utilities.floris_tools)": [[83, "flasc.utilities.floris_tools.add_gaussian_blending_to_floris_approx_table", false], [84, "flasc.utilities.floris_tools.add_gaussian_blending_to_floris_approx_table", false]], "add_power_ref() (in module flasc.utilities.energy_ratio_utilities)": [[68, "flasc.utilities.energy_ratio_utilities.add_power_ref", false], [70, "flasc.utilities.energy_ratio_utilities.add_power_ref", false]], "add_power_test() (in module flasc.utilities.energy_ratio_utilities)": [[68, "flasc.utilities.energy_ratio_utilities.add_power_test", false], [71, "flasc.utilities.energy_ratio_utilities.add_power_test", false]], "add_reflected_rows() (in module flasc.utilities.energy_ratio_utilities)": [[68, "flasc.utilities.energy_ratio_utilities.add_reflected_rows", false], [72, "flasc.utilities.energy_ratio_utilities.add_reflected_rows", false]], "add_wd() (in module flasc.utilities.energy_ratio_utilities)": [[68, "flasc.utilities.energy_ratio_utilities.add_wd", false], [73, "flasc.utilities.energy_ratio_utilities.add_wd", false]], "add_wd_bin() (in module flasc.utilities.energy_ratio_utilities)": [[68, "flasc.utilities.energy_ratio_utilities.add_wd_bin", false], [74, "flasc.utilities.energy_ratio_utilities.add_wd_bin", false]], "add_ws() (in module flasc.utilities.energy_ratio_utilities)": [[68, "flasc.utilities.energy_ratio_utilities.add_ws", false], [75, "flasc.utilities.energy_ratio_utilities.add_ws", false]], "add_ws_bin() (in module flasc.utilities.energy_ratio_utilities)": [[68, "flasc.utilities.energy_ratio_utilities.add_ws_bin", false], [76, "flasc.utilities.energy_ratio_utilities.add_ws_bin", false]], "bias_estimation (class in flasc.data_processing.energy_ratio_wd_bias_estimation)": [[44, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation", false], [45, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation", false]], "bin_and_group_dataframe() (in module flasc.utilities.energy_ratio_utilities)": [[68, "flasc.utilities.energy_ratio_utilities.bin_and_group_dataframe", false], [77, "flasc.utilities.energy_ratio_utilities.bin_and_group_dataframe", false]], "bin_column() (in module flasc.utilities.energy_ratio_utilities)": [[68, "flasc.utilities.energy_ratio_utilities.bin_column", false], [78, "flasc.utilities.energy_ratio_utilities.bin_column", false]], "calc_floris_approx_table() (in module flasc.utilities.floris_tools)": [[83, "flasc.utilities.floris_tools.calc_floris_approx_table", false], [85, "flasc.utilities.floris_tools.calc_floris_approx_table", false]], "calc_wd_mean_radial() (in module flasc.utilities.circular_statistics)": [[65, "flasc.utilities.circular_statistics.calc_wd_mean_radial", false], [66, "flasc.utilities.circular_statistics.calc_wd_mean_radial", false]], "calculate_baseline() (flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation method)": [[44, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation.calculate_baseline", false], [45, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation.calculate_baseline", false]], "calculate_wd_statistics() (in module flasc.utilities.circular_statistics)": [[65, "flasc.utilities.circular_statistics.calculate_wd_statistics", false], [67, "flasc.utilities.circular_statistics.calculate_wd_statistics", false]], "check_compute_energy_ratio_inputs() (in module flasc.utilities.energy_ratio_utilities)": [[68, "flasc.utilities.energy_ratio_utilities.check_compute_energy_ratio_inputs", false], [79, "flasc.utilities.energy_ratio_utilities.check_compute_energy_ratio_inputs", false]], "check_flasc_format() (flasc.flasc_dataframe.flascdataframe method)": [[62, "flasc.flasc_dataframe.FlascDataFrame.check_flasc_format", false], [63, "flasc.flasc_dataframe.FlascDataFrame.check_flasc_format", false]], "compute_energy_ratio() (in module flasc.analysis.energy_ratio)": [[1, "flasc.analysis.energy_ratio.compute_energy_ratio", false], [2, "flasc.analysis.energy_ratio.compute_energy_ratio", false]], "compute_total_uplift() (in module flasc.analysis.total_uplift)": [[10, "flasc.analysis.total_uplift.compute_total_uplift", false], [11, "flasc.analysis.total_uplift.compute_total_uplift", false]], "convert_time_to_datetime() (flasc.flasc_dataframe.flascdataframe method)": [[62, "flasc.flasc_dataframe.FlascDataFrame.convert_time_to_datetime", false], [63, "flasc.flasc_dataframe.FlascDataFrame.convert_time_to_datetime", false]], "convert_to_flasc_format() (flasc.flasc_dataframe.flascdataframe method)": [[62, "flasc.flasc_dataframe.FlascDataFrame.convert_to_flasc_format", false], [63, "flasc.flasc_dataframe.FlascDataFrame.convert_to_flasc_format", false]], "convert_to_user_format() (flasc.flasc_dataframe.flascdataframe method)": [[62, "flasc.flasc_dataframe.FlascDataFrame.convert_to_user_format", false], [63, "flasc.flasc_dataframe.FlascDataFrame.convert_to_user_format", false]], "copy_metadata() (flasc.flasc_dataframe.flascdataframe method)": [[62, "flasc.flasc_dataframe.FlascDataFrame.copy_metadata", false], [63, "flasc.flasc_dataframe.FlascDataFrame.copy_metadata", false]], "crosscheck_northing_offset_consistency() (in module flasc.data_processing.northing_offset)": [[53, "flasc.data_processing.northing_offset.crosscheck_northing_offset_consistency", false], [54, "flasc.data_processing.northing_offset.crosscheck_northing_offset_consistency", false]], "cut() (in module flasc.utilities.energy_ratio_utilities)": [[68, "flasc.utilities.energy_ratio_utilities.cut", false], [80, "flasc.utilities.energy_ratio_utilities.cut", false]], "df_downsample() (in module flasc.data_processing.time_operations)": [[57, "flasc.data_processing.time_operations.df_downsample", false], [58, "flasc.data_processing.time_operations.df_downsample", false]], "df_drop_nan_rows() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.df_drop_nan_rows", false], [14, "flasc.data_processing.dataframe_manipulations.df_drop_nan_rows", false]], "df_find_and_fill_data_gaps_with_missing() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.df_find_and_fill_data_gaps_with_missing", false], [15, "flasc.data_processing.dataframe_manipulations.df_find_and_fill_data_gaps_with_missing", false]], "df_get_no_faulty_measurements() (in module flasc.data_processing.filtering)": [[46, "flasc.data_processing.filtering.df_get_no_faulty_measurements", false], [48, "flasc.data_processing.filtering.df_get_no_faulty_measurements", false]], "df_mark_turbdata_as_faulty() (in module flasc.data_processing.filtering)": [[46, "flasc.data_processing.filtering.df_mark_turbdata_as_faulty", false], [49, "flasc.data_processing.filtering.df_mark_turbdata_as_faulty", false]], "df_movingaverage() (in module flasc.data_processing.time_operations)": [[57, "flasc.data_processing.time_operations.df_movingaverage", false], [59, "flasc.data_processing.time_operations.df_movingaverage", false]], "df_reduce_precision() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.df_reduce_precision", false], [16, "flasc.data_processing.dataframe_manipulations.df_reduce_precision", false]], "df_resample_by_interpolation() (in module flasc.data_processing.time_operations)": [[57, "flasc.data_processing.time_operations.df_resample_by_interpolation", false], [60, "flasc.data_processing.time_operations.df_resample_by_interpolation", false]], "df_sort_and_find_duplicates() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.df_sort_and_find_duplicates", false], [17, "flasc.data_processing.dataframe_manipulations.df_sort_and_find_duplicates", false]], "df_sort_and_fix_duplicates() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.df_sort_and_fix_duplicates", false], [18, "flasc.data_processing.dataframe_manipulations.df_sort_and_fix_duplicates", false]], "energyratioinput (class in flasc.analysis.energy_ratio_input)": [[5, "flasc.analysis.energy_ratio_input.EnergyRatioInput", false], [6, "flasc.analysis.energy_ratio_input.EnergyRatioInput", false]], "energyratiooutput (class in flasc.analysis.energy_ratio_output)": [[8, "flasc.analysis.energy_ratio_output.EnergyRatioOutput", false], [9, "flasc.analysis.energy_ratio_output.EnergyRatioOutput", false]], "estimate_dt() (in module flasc.utilities.utilities)": [[105, "flasc.utilities.utilities.estimate_dt", false], [106, "flasc.utilities.utilities.estimate_dt", false]], "estimate_heterogeneity() (flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper method)": [[3, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.estimate_heterogeneity", false], [4, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.estimate_heterogeneity", false]], "estimate_ti() (in module flasc.utilities.optimization)": [[96, "flasc.utilities.optimization.estimate_ti", false], [97, "flasc.utilities.optimization.estimate_ti", false]], "estimate_wd_bias() (flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation method)": [[44, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation.estimate_wd_bias", false], [45, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation.estimate_wd_bias", false]], "estimate_ws_with_floris() (in module flasc.utilities.floris_tools)": [[83, "flasc.utilities.floris_tools.estimate_ws_with_floris", false], [86, "flasc.utilities.floris_tools.estimate_ws_with_floris", false]], "export_to_windup_format() (flasc.flasc_dataframe.flascdataframe method)": [[62, "flasc.flasc_dataframe.FlascDataFrame.export_to_windup_format", false], [63, "flasc.flasc_dataframe.FlascDataFrame.export_to_windup_format", false]], "filter_all_nulls() (in module flasc.utilities.energy_ratio_utilities)": [[68, "flasc.utilities.energy_ratio_utilities.filter_all_nulls", false], [81, "flasc.utilities.energy_ratio_utilities.filter_all_nulls", false]], "filter_any_nulls() (in module flasc.utilities.energy_ratio_utilities)": [[68, "flasc.utilities.energy_ratio_utilities.filter_any_nulls", false], [82, "flasc.utilities.energy_ratio_utilities.filter_any_nulls", false]], "filter_by_condition() (flasc.data_processing.filtering.flascfilter method)": [[46, "flasc.data_processing.filtering.FlascFilter.filter_by_condition", false], [47, "flasc.data_processing.filtering.FlascFilter.filter_by_condition", false]], "filter_by_floris_power_curve() (flasc.data_processing.filtering.flascfilter method)": [[46, "flasc.data_processing.filtering.FlascFilter.filter_by_floris_power_curve", false], [47, "flasc.data_processing.filtering.FlascFilter.filter_by_floris_power_curve", false]], "filter_by_power_curve() (flasc.data_processing.filtering.flascfilter method)": [[46, "flasc.data_processing.filtering.FlascFilter.filter_by_power_curve", false], [47, "flasc.data_processing.filtering.FlascFilter.filter_by_power_curve", false]], "filter_by_sensor_stuck_faults() (flasc.data_processing.filtering.flascfilter method)": [[46, "flasc.data_processing.filtering.FlascFilter.filter_by_sensor_stuck_faults", false], [47, "flasc.data_processing.filtering.FlascFilter.filter_by_sensor_stuck_faults", false]], "filter_df_by_faulty_impacting_turbines() (in module flasc.data_processing.filtering)": [[46, "flasc.data_processing.filtering.filter_df_by_faulty_impacting_turbines", false], [50, "flasc.data_processing.filtering.filter_df_by_faulty_impacting_turbines", false]], "filter_df_by_ti() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.filter_df_by_ti", false], [19, "flasc.data_processing.dataframe_manipulations.filter_df_by_ti", false]], "filter_df_by_wd() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.filter_df_by_wd", false], [20, "flasc.data_processing.dataframe_manipulations.filter_df_by_wd", false]], "filter_df_by_ws() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.filter_df_by_ws", false], [21, "flasc.data_processing.dataframe_manipulations.filter_df_by_ws", false]], "find_sensor_stuck_faults() (in module flasc.data_processing.find_sensor_faults)": [[51, "flasc.data_processing.find_sensor_faults.find_sensor_stuck_faults", false], [52, "flasc.data_processing.find_sensor_faults.find_sensor_stuck_faults", false]], "find_timeshift_between_dfs() (in module flasc.utilities.optimization)": [[96, "flasc.utilities.optimization.find_timeshift_between_dfs", false], [98, "flasc.utilities.optimization.find_timeshift_between_dfs", false]], "flasc.analysis": [[0, "module-flasc.analysis", false]], "flasc.analysis.energy_ratio": [[1, "module-flasc.analysis.energy_ratio", false]], "flasc.analysis.energy_ratio_heterogeneity_mapper": [[3, "module-flasc.analysis.energy_ratio_heterogeneity_mapper", false]], "flasc.analysis.energy_ratio_input": [[5, "module-flasc.analysis.energy_ratio_input", false]], "flasc.analysis.energy_ratio_output": [[8, "module-flasc.analysis.energy_ratio_output", false]], "flasc.analysis.total_uplift": [[10, "module-flasc.analysis.total_uplift", false]], "flasc.data_processing": [[12, "module-flasc.data_processing", false]], "flasc.data_processing.dataframe_manipulations": [[13, "module-flasc.data_processing.dataframe_manipulations", false]], "flasc.data_processing.energy_ratio_wd_bias_estimation": [[44, "module-flasc.data_processing.energy_ratio_wd_bias_estimation", false]], "flasc.data_processing.filtering": [[46, "module-flasc.data_processing.filtering", false]], "flasc.data_processing.find_sensor_faults": [[51, "module-flasc.data_processing.find_sensor_faults", false]], "flasc.data_processing.northing_offset": [[53, "module-flasc.data_processing.northing_offset", false]], "flasc.data_processing.northing_offset_change_hoger": [[55, "module-flasc.data_processing.northing_offset_change_hoger", false]], "flasc.data_processing.time_operations": [[57, "module-flasc.data_processing.time_operations", false]], "flasc.flasc_dataframe": [[62, "module-flasc.flasc_dataframe", false]], "flasc.utilities": [[64, "module-flasc.utilities", false]], "flasc.utilities.circular_statistics": [[65, "module-flasc.utilities.circular_statistics", false]], "flasc.utilities.energy_ratio_utilities": [[68, "module-flasc.utilities.energy_ratio_utilities", false]], "flasc.utilities.floris_tools": [[83, "module-flasc.utilities.floris_tools", false]], "flasc.utilities.lookup_table_tools": [[94, "module-flasc.utilities.lookup_table_tools", false]], "flasc.utilities.optimization": [[96, "module-flasc.utilities.optimization", false]], "flasc.utilities.tuner_utilities": [[100, "module-flasc.utilities.tuner_utilities", false]], "flasc.utilities.utilities": [[105, "module-flasc.utilities.utilities", false]], "flasc.utilities.utilities_examples": [[109, "module-flasc.utilities.utilities_examples", false]], "flascdataframe (class in flasc.flasc_dataframe)": [[62, "flasc.flasc_dataframe.FlascDataFrame", false], [63, "flasc.flasc_dataframe.FlascDataFrame", false]], "flascfilter (class in flasc.data_processing.filtering)": [[46, "flasc.data_processing.filtering.FlascFilter", false], [47, "flasc.data_processing.filtering.FlascFilter", false]], "flatten_cols() (in module flasc.data_processing.time_operations)": [[57, "flasc.data_processing.time_operations.flatten_cols", false], [61, "flasc.data_processing.time_operations.flatten_cols", false]], "generate_block_list() (in module flasc.analysis.energy_ratio_input)": [[5, "flasc.analysis.energy_ratio_input.generate_block_list", false], [7, "flasc.analysis.energy_ratio_input.generate_block_list", false]], "generate_floris_hetmap() (flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper method)": [[3, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.generate_floris_hetmap", false], [4, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.generate_floris_hetmap", false]], "get_all_dependent_turbines() (in module flasc.utilities.floris_tools)": [[83, "flasc.utilities.floris_tools.get_all_dependent_turbines", false], [87, "flasc.utilities.floris_tools.get_all_dependent_turbines", false]], "get_all_impacting_turbines() (in module flasc.utilities.floris_tools)": [[83, "flasc.utilities.floris_tools.get_all_impacting_turbines", false], [88, "flasc.utilities.floris_tools.get_all_impacting_turbines", false]], "get_all_impacting_turbines_geometrical() (in module flasc.utilities.floris_tools)": [[83, "flasc.utilities.floris_tools.get_all_impacting_turbines_geometrical", false], [89, "flasc.utilities.floris_tools.get_all_impacting_turbines_geometrical", false]], "get_column_mean() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.get_column_mean", false], [22, "flasc.data_processing.dataframe_manipulations.get_column_mean", false]], "get_dependent_turbines_by_wd() (in module flasc.utilities.floris_tools)": [[83, "flasc.utilities.floris_tools.get_dependent_turbines_by_wd", false], [90, "flasc.utilities.floris_tools.get_dependent_turbines_by_wd", false]], "get_df() (flasc.analysis.energy_ratio_input.energyratioinput method)": [[5, "flasc.analysis.energy_ratio_input.EnergyRatioInput.get_df", false], [6, "flasc.analysis.energy_ratio_input.EnergyRatioInput.get_df", false]], "get_df() (flasc.data_processing.filtering.flascfilter method)": [[46, "flasc.data_processing.filtering.FlascFilter.get_df", false], [47, "flasc.data_processing.filtering.FlascFilter.get_df", false]], "get_num_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.get_num_turbines", false], [23, "flasc.data_processing.dataframe_manipulations.get_num_turbines", false]], "get_num_turbines() (in module flasc.utilities.utilities)": [[105, "flasc.utilities.utilities.get_num_turbines", false], [107, "flasc.utilities.utilities.get_num_turbines", false]], "get_power_curve() (flasc.data_processing.filtering.flascfilter method)": [[46, "flasc.data_processing.filtering.FlascFilter.get_power_curve", false], [47, "flasc.data_processing.filtering.FlascFilter.get_power_curve", false]], "get_turbs_in_radius() (in module flasc.utilities.floris_tools)": [[83, "flasc.utilities.floris_tools.get_turbs_in_radius", false], [91, "flasc.utilities.floris_tools.get_turbs_in_radius", false]], "get_upstream_turbs_floris() (in module flasc.utilities.floris_tools)": [[83, "flasc.utilities.floris_tools.get_upstream_turbs_floris", false], [92, "flasc.utilities.floris_tools.get_upstream_turbs_floris", false]], "get_yaw_angles_interpolant() (in module flasc.utilities.lookup_table_tools)": [[94, "flasc.utilities.lookup_table_tools.get_yaw_angles_interpolant", false], [95, "flasc.utilities.lookup_table_tools.get_yaw_angles_interpolant", false]], "heterogeneity_mapper (class in flasc.analysis.energy_ratio_heterogeneity_mapper)": [[3, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper", false], [4, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper", false]], "homogenize_hoger() (in module flasc.data_processing.northing_offset_change_hoger)": [[55, "flasc.data_processing.northing_offset_change_hoger.homogenize_hoger", false], [56, "flasc.data_processing.northing_offset_change_hoger.homogenize_hoger", false]], "in_flasc_format (flasc.flasc_dataframe.flascdataframe property)": [[62, "flasc.flasc_dataframe.FlascDataFrame.in_flasc_format", false], [63, "flasc.flasc_dataframe.FlascDataFrame.in_flasc_format", false]], "interp_with_max_gap() (in module flasc.utilities.utilities)": [[105, "flasc.utilities.utilities.interp_with_max_gap", false], [108, "flasc.utilities.utilities.interp_with_max_gap", false]], "interpolate_floris_from_df_approx() (in module flasc.utilities.floris_tools)": [[83, "flasc.utilities.floris_tools.interpolate_floris_from_df_approx", false], [93, "flasc.utilities.floris_tools.interpolate_floris_from_df_approx", false]], "is_day_or_night() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.is_day_or_night", false], [24, "flasc.data_processing.dataframe_manipulations.is_day_or_night", false]], "load_floris_artificial() (in module flasc.utilities.utilities_examples)": [[109, "flasc.utilities.utilities_examples.load_floris_artificial", false], [110, "flasc.utilities.utilities_examples.load_floris_artificial", false]], "load_floris_smarteole() (in module flasc.utilities.utilities_examples)": [[109, "flasc.utilities.utilities_examples.load_floris_smarteole", false], [111, "flasc.utilities.utilities_examples.load_floris_smarteole", false]], "match_y_curves_by_offset() (in module flasc.utilities.optimization)": [[96, "flasc.utilities.optimization.match_y_curves_by_offset", false], [99, "flasc.utilities.optimization.match_y_curves_by_offset", false]], "module": [[0, "module-flasc.analysis", false], [1, "module-flasc.analysis.energy_ratio", false], [3, "module-flasc.analysis.energy_ratio_heterogeneity_mapper", false], [5, "module-flasc.analysis.energy_ratio_input", false], [8, "module-flasc.analysis.energy_ratio_output", false], [10, "module-flasc.analysis.total_uplift", false], [12, "module-flasc.data_processing", false], [13, "module-flasc.data_processing.dataframe_manipulations", false], [44, "module-flasc.data_processing.energy_ratio_wd_bias_estimation", false], [46, "module-flasc.data_processing.filtering", false], [51, "module-flasc.data_processing.find_sensor_faults", false], [53, "module-flasc.data_processing.northing_offset", false], [55, "module-flasc.data_processing.northing_offset_change_hoger", false], [57, "module-flasc.data_processing.time_operations", false], [62, "module-flasc.flasc_dataframe", false], [64, "module-flasc.utilities", false], [65, "module-flasc.utilities.circular_statistics", false], [68, "module-flasc.utilities.energy_ratio_utilities", false], [83, "module-flasc.utilities.floris_tools", false], [94, "module-flasc.utilities.lookup_table_tools", false], [96, "module-flasc.utilities.optimization", false], [100, "module-flasc.utilities.tuner_utilities", false], [105, "module-flasc.utilities.utilities", false], [109, "module-flasc.utilities.utilities_examples", false]], "n_turbines (flasc.flasc_dataframe.flascdataframe property)": [[62, "flasc.flasc_dataframe.FlascDataFrame.n_turbines", false], [63, "flasc.flasc_dataframe.FlascDataFrame.n_turbines", false]], "nested_get() (in module flasc.utilities.tuner_utilities)": [[100, "flasc.utilities.tuner_utilities.nested_get", false], [101, "flasc.utilities.tuner_utilities.nested_get", false]], "nested_set() (in module flasc.utilities.tuner_utilities)": [[100, "flasc.utilities.tuner_utilities.nested_set", false], [102, "flasc.utilities.tuner_utilities.nested_set", false]], "plot_energy_ratios() (flasc.analysis.energy_ratio_output.energyratiooutput method)": [[8, "flasc.analysis.energy_ratio_output.EnergyRatioOutput.plot_energy_ratios", false], [9, "flasc.analysis.energy_ratio_output.EnergyRatioOutput.plot_energy_ratios", false]], "plot_energy_ratios() (flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation method)": [[44, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation.plot_energy_ratios", false], [45, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation.plot_energy_ratios", false]], "plot_farm_mean_power_curve() (flasc.data_processing.filtering.flascfilter method)": [[46, "flasc.data_processing.filtering.FlascFilter.plot_farm_mean_power_curve", false], [47, "flasc.data_processing.filtering.FlascFilter.plot_farm_mean_power_curve", false]], "plot_filters_custom_scatter() (flasc.data_processing.filtering.flascfilter method)": [[46, "flasc.data_processing.filtering.FlascFilter.plot_filters_custom_scatter", false], [47, "flasc.data_processing.filtering.FlascFilter.plot_filters_custom_scatter", false]], "plot_filters_custom_scatter_bokeh() (flasc.data_processing.filtering.flascfilter method)": [[46, "flasc.data_processing.filtering.FlascFilter.plot_filters_custom_scatter_bokeh", false], [47, "flasc.data_processing.filtering.FlascFilter.plot_filters_custom_scatter_bokeh", false]], "plot_filters_in_time() (flasc.data_processing.filtering.flascfilter method)": [[46, "flasc.data_processing.filtering.FlascFilter.plot_filters_in_time", false], [47, "flasc.data_processing.filtering.FlascFilter.plot_filters_in_time", false]], "plot_filters_in_time_bokeh() (flasc.data_processing.filtering.flascfilter method)": [[46, "flasc.data_processing.filtering.FlascFilter.plot_filters_in_time_bokeh", false], [47, "flasc.data_processing.filtering.FlascFilter.plot_filters_in_time_bokeh", false]], "plot_filters_in_ws_power_curve() (flasc.data_processing.filtering.flascfilter method)": [[46, "flasc.data_processing.filtering.FlascFilter.plot_filters_in_ws_power_curve", false], [47, "flasc.data_processing.filtering.FlascFilter.plot_filters_in_ws_power_curve", false]], "plot_graphs() (flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper method)": [[3, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.plot_graphs", false], [4, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.plot_graphs", false]], "plot_layout() (flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper method)": [[3, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.plot_layout", false], [4, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.plot_layout", false]], "plot_postprocessed_in_ws_power_curve() (flasc.data_processing.filtering.flascfilter method)": [[46, "flasc.data_processing.filtering.FlascFilter.plot_postprocessed_in_ws_power_curve", false], [47, "flasc.data_processing.filtering.FlascFilter.plot_postprocessed_in_ws_power_curve", false]], "plot_sun_altitude_with_day_night_color() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.plot_sun_altitude_with_day_night_color", false], [25, "flasc.data_processing.dataframe_manipulations.plot_sun_altitude_with_day_night_color", false]], "plot_uplift() (flasc.analysis.energy_ratio_output.energyratiooutput method)": [[8, "flasc.analysis.energy_ratio_output.EnergyRatioOutput.plot_uplift", false], [9, "flasc.analysis.energy_ratio_output.EnergyRatioOutput.plot_uplift", false]], "replicate_nan_values() (in module flasc.utilities.tuner_utilities)": [[100, "flasc.utilities.tuner_utilities.replicate_nan_values", false], [103, "flasc.utilities.tuner_utilities.replicate_nan_values", false]], "resample_energy_table() (flasc.analysis.energy_ratio_input.energyratioinput method)": [[5, "flasc.analysis.energy_ratio_input.EnergyRatioInput.resample_energy_table", false], [6, "flasc.analysis.energy_ratio_input.EnergyRatioInput.resample_energy_table", false]], "reset_filters() (flasc.data_processing.filtering.flascfilter method)": [[46, "flasc.data_processing.filtering.FlascFilter.reset_filters", false], [47, "flasc.data_processing.filtering.FlascFilter.reset_filters", false]], "resim_floris() (in module flasc.utilities.tuner_utilities)": [[100, "flasc.utilities.tuner_utilities.resim_floris", false], [104, "flasc.utilities.tuner_utilities.resim_floris", false]], "set_pow_ref_by_n_closest_upstream_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_n_closest_upstream_turbines", false], [26, "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_n_closest_upstream_turbines", false]], "set_pow_ref_by_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_turbines", false], [27, "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_turbines", false]], "set_pow_ref_by_upstream_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines", false], [28, "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines", false]], "set_pow_ref_by_upstream_turbines_in_radius() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines_in_radius", false], [29, "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines_in_radius", false]], "set_ti_by_all_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_ti_by_all_turbines", false], [30, "flasc.data_processing.dataframe_manipulations.set_ti_by_all_turbines", false]], "set_ti_by_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_ti_by_turbines", false], [31, "flasc.data_processing.dataframe_manipulations.set_ti_by_turbines", false]], "set_ti_by_upstream_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines", false], [32, "flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines", false]], "set_ti_by_upstream_turbines_in_radius() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines_in_radius", false], [33, "flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines_in_radius", false]], "set_wd_by_all_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_wd_by_all_turbines", false], [34, "flasc.data_processing.dataframe_manipulations.set_wd_by_all_turbines", false]], "set_wd_by_radius_from_turbine() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_wd_by_radius_from_turbine", false], [35, "flasc.data_processing.dataframe_manipulations.set_wd_by_radius_from_turbine", false]], "set_wd_by_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_wd_by_turbines", false], [36, "flasc.data_processing.dataframe_manipulations.set_wd_by_turbines", false]], "set_wd_by_upstream_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_wd_by_upstream_turbines", false], [37, "flasc.data_processing.dataframe_manipulations.set_wd_by_upstream_turbines", false]], "set_wd_by_upstream_turbines_in_radius() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_wd_by_upstream_turbines_in_radius", false], [38, "flasc.data_processing.dataframe_manipulations.set_wd_by_upstream_turbines_in_radius", false]], "set_ws_by_all_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_ws_by_all_turbines", false], [39, "flasc.data_processing.dataframe_manipulations.set_ws_by_all_turbines", false]], "set_ws_by_n_closest_upstream_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_ws_by_n_closest_upstream_turbines", false], [40, "flasc.data_processing.dataframe_manipulations.set_ws_by_n_closest_upstream_turbines", false]], "set_ws_by_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_ws_by_turbines", false], [41, "flasc.data_processing.dataframe_manipulations.set_ws_by_turbines", false]], "set_ws_by_upstream_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines", false], [42, "flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines", false]], "set_ws_by_upstream_turbines_in_radius() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines_in_radius", false], [43, "flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines_in_radius", false]], "to_feather() (flasc.flasc_dataframe.flascdataframe method)": [[62, "flasc.flasc_dataframe.FlascDataFrame.to_feather", false], [63, "flasc.flasc_dataframe.FlascDataFrame.to_feather", false]]}, "objects": {"flasc": [[0, 0, 0, "-", "analysis"], [12, 0, 0, "-", "data_processing"], [62, 0, 0, "-", "flasc_dataframe"], [64, 0, 0, "-", "utilities"]], "flasc.analysis": [[1, 0, 0, "-", "energy_ratio"], [3, 0, 0, "-", "energy_ratio_heterogeneity_mapper"], [5, 0, 0, "-", "energy_ratio_input"], [8, 0, 0, "-", "energy_ratio_output"], [10, 0, 0, "-", "total_uplift"]], "flasc.analysis.energy_ratio": [[1, 1, 1, "", "_compute_energy_ratio_bootstrap"], [1, 1, 1, "", "_compute_energy_ratio_single"], [2, 1, 1, "", "compute_energy_ratio"]], "flasc.analysis.energy_ratio_heterogeneity_mapper": [[3, 1, 1, "", "_get_energy_ratio"], [4, 2, 1, "", "heterogeneity_mapper"]], "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper": [[4, 3, 1, "", "_process_single_wd"], [4, 3, 1, "", "estimate_heterogeneity"], [4, 3, 1, "", "generate_floris_hetmap"], [4, 3, 1, "", "plot_graphs"], [4, 3, 1, "", "plot_layout"]], "flasc.analysis.energy_ratio_input": [[6, 2, 1, "", "EnergyRatioInput"], [7, 1, 1, "", "generate_block_list"]], "flasc.analysis.energy_ratio_input.EnergyRatioInput": [[6, 3, 1, "", "get_df"], [6, 3, 1, "", "resample_energy_table"]], "flasc.analysis.energy_ratio_output": [[9, 2, 1, "", "EnergyRatioOutput"]], "flasc.analysis.energy_ratio_output.EnergyRatioOutput": [[9, 3, 1, "", "_compute_ws_counts"], [9, 3, 1, "", "plot_energy_ratios"], [9, 3, 1, "", "plot_uplift"]], "flasc.analysis.total_uplift": [[10, 1, 1, "", "_compute_total_uplift_bootstrap"], [10, 1, 1, "", "_compute_total_uplift_single"], [11, 1, 1, "", "compute_total_uplift"]], "flasc.data_processing": [[13, 0, 0, "-", "dataframe_manipulations"], [44, 0, 0, "-", "energy_ratio_wd_bias_estimation"], [46, 0, 0, "-", "filtering"], [51, 0, 0, "-", "find_sensor_faults"], [53, 0, 0, "-", "northing_offset"], [55, 0, 0, "-", "northing_offset_change_hoger"], [57, 0, 0, "-", "time_operations"]], "flasc.data_processing.dataframe_manipulations": [[13, 1, 1, "", "_set_col_by_n_closest_upstream_turbines"], [13, 1, 1, "", "_set_col_by_radius_from_turbine"], [13, 1, 1, "", "_set_col_by_turbines"], [13, 1, 1, "", "_set_col_by_upstream_turbines"], [13, 1, 1, "", "_set_col_by_upstream_turbines_in_radius"], [14, 1, 1, "", "df_drop_nan_rows"], [15, 1, 1, "", "df_find_and_fill_data_gaps_with_missing"], [16, 1, 1, "", "df_reduce_precision"], [17, 1, 1, "", "df_sort_and_find_duplicates"], [18, 1, 1, "", "df_sort_and_fix_duplicates"], [19, 1, 1, "", "filter_df_by_ti"], [20, 1, 1, "", "filter_df_by_wd"], [21, 1, 1, "", "filter_df_by_ws"], [22, 1, 1, "", "get_column_mean"], [23, 1, 1, "", "get_num_turbines"], [24, 1, 1, "", "is_day_or_night"], [25, 1, 1, "", "plot_sun_altitude_with_day_night_color"], [26, 1, 1, "", "set_pow_ref_by_n_closest_upstream_turbines"], [27, 1, 1, "", "set_pow_ref_by_turbines"], [28, 1, 1, "", "set_pow_ref_by_upstream_turbines"], [29, 1, 1, "", "set_pow_ref_by_upstream_turbines_in_radius"], [30, 1, 1, "", "set_ti_by_all_turbines"], [31, 1, 1, "", "set_ti_by_turbines"], [32, 1, 1, "", "set_ti_by_upstream_turbines"], [33, 1, 1, "", "set_ti_by_upstream_turbines_in_radius"], [34, 1, 1, "", "set_wd_by_all_turbines"], [35, 1, 1, "", "set_wd_by_radius_from_turbine"], [36, 1, 1, "", "set_wd_by_turbines"], [37, 1, 1, "", "set_wd_by_upstream_turbines"], [38, 1, 1, "", "set_wd_by_upstream_turbines_in_radius"], [39, 1, 1, "", "set_ws_by_all_turbines"], [40, 1, 1, "", "set_ws_by_n_closest_upstream_turbines"], [41, 1, 1, "", "set_ws_by_turbines"], [42, 1, 1, "", "set_ws_by_upstream_turbines"], [43, 1, 1, "", "set_ws_by_upstream_turbines_in_radius"]], "flasc.data_processing.energy_ratio_wd_bias_estimation": [[45, 2, 1, "", "bias_estimation"]], "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation": [[45, 3, 1, "", "_get_energy_ratios_allbins"], [45, 3, 1, "", "_load_er_input_for_wd_bias"], [45, 3, 1, "", "calculate_baseline"], [45, 3, 1, "", "estimate_wd_bias"], [45, 3, 1, "", "plot_energy_ratios"]], "flasc.data_processing.filtering": [[47, 2, 1, "", "FlascFilter"], [48, 1, 1, "", "df_get_no_faulty_measurements"], [49, 1, 1, "", "df_mark_turbdata_as_faulty"], [50, 1, 1, "", "filter_df_by_faulty_impacting_turbines"]], "flasc.data_processing.filtering.FlascFilter": [[47, 3, 1, "", "_get_all_unique_flags"], [47, 3, 1, "", "_get_mean_power_curves"], [47, 3, 1, "", "_reset_mean_power_curves"], [47, 3, 1, "", "_set_legend_alpha_to_one"], [47, 3, 1, "", "filter_by_condition"], [47, 3, 1, "", "filter_by_floris_power_curve"], [47, 3, 1, "", "filter_by_power_curve"], [47, 3, 1, "", "filter_by_sensor_stuck_faults"], [47, 3, 1, "", "get_df"], [47, 3, 1, "", "get_power_curve"], [47, 3, 1, "", "plot_farm_mean_power_curve"], [47, 3, 1, "", "plot_filters_custom_scatter"], [47, 3, 1, "", "plot_filters_custom_scatter_bokeh"], [47, 3, 1, "", "plot_filters_in_time"], [47, 3, 1, "", "plot_filters_in_time_bokeh"], [47, 3, 1, "", "plot_filters_in_ws_power_curve"], [47, 3, 1, "", "plot_postprocessed_in_ws_power_curve"], [47, 3, 1, "", "reset_filters"]], "flasc.data_processing.find_sensor_faults": [[51, 1, 1, "", "_find_sensor_stuck_single_timearray"], [51, 1, 1, "", "_plot_top_sensor_faults"], [52, 1, 1, "", "find_sensor_stuck_faults"]], "flasc.data_processing.northing_offset": [[54, 1, 1, "", "crosscheck_northing_offset_consistency"]], "flasc.data_processing.northing_offset_change_hoger": [[55, 1, 1, "", "_discretize"], [55, 1, 1, "", "_get_leaves_and_knots"], [55, 1, 1, "", "_plot_regression"], [55, 1, 1, "", "_shorth_mode"], [56, 1, 1, "", "homogenize_hoger"]], "flasc.data_processing.time_operations": [[58, 1, 1, "", "df_downsample"], [59, 1, 1, "", "df_movingaverage"], [60, 1, 1, "", "df_resample_by_interpolation"], [61, 1, 1, "", "flatten_cols"]], "flasc.flasc_dataframe": [[63, 2, 1, "", "FlascDataFrame"]], "flasc.flasc_dataframe.FlascDataFrame": [[63, 4, 1, "", "_attrs"], [63, 4, 1, "", "_cache"], [63, 5, 1, "", "_constructor"], [63, 3, 1, "", "_convert_long_to_wide"], [63, 3, 1, "", "_convert_wide_to_long"], [63, 4, 1, "", "_metadata"], [63, 4, 1, "", "_mgr"], [63, 3, 1, "", "_repr_html_"], [63, 3, 1, "", "check_flasc_format"], [63, 3, 1, "", "convert_time_to_datetime"], [63, 3, 1, "", "convert_to_flasc_format"], [63, 3, 1, "", "convert_to_user_format"], [63, 3, 1, "", "copy_metadata"], [63, 3, 1, "", "export_to_windup_format"], [63, 5, 1, "", "in_flasc_format"], [63, 5, 1, "", "n_turbines"], [63, 3, 1, "", "to_feather"]], "flasc.utilities": [[65, 0, 0, "-", "circular_statistics"], [68, 0, 0, "-", "energy_ratio_utilities"], [83, 0, 0, "-", "floris_tools"], [94, 0, 0, "-", "lookup_table_tools"], [96, 0, 0, "-", "optimization"], [100, 0, 0, "-", "tuner_utilities"], [105, 0, 0, "-", "utilities"], [109, 0, 0, "-", "utilities_examples"]], "flasc.utilities.circular_statistics": [[66, 1, 1, "", "calc_wd_mean_radial"], [67, 1, 1, "", "calculate_wd_statistics"]], "flasc.utilities.energy_ratio_utilities": [[69, 1, 1, "", "add_bin_weights"], [70, 1, 1, "", "add_power_ref"], [71, 1, 1, "", "add_power_test"], [72, 1, 1, "", "add_reflected_rows"], [73, 1, 1, "", "add_wd"], [74, 1, 1, "", "add_wd_bin"], [75, 1, 1, "", "add_ws"], [76, 1, 1, "", "add_ws_bin"], [77, 1, 1, "", "bin_and_group_dataframe"], [78, 1, 1, "", "bin_column"], [79, 1, 1, "", "check_compute_energy_ratio_inputs"], [80, 1, 1, "", "cut"], [81, 1, 1, "", "filter_all_nulls"], [82, 1, 1, "", "filter_any_nulls"]], "flasc.utilities.floris_tools": [[83, 1, 1, "", "_fi_set_ws_wd_ti"], [84, 1, 1, "", "add_gaussian_blending_to_floris_approx_table"], [85, 1, 1, "", "calc_floris_approx_table"], [86, 1, 1, "", "estimate_ws_with_floris"], [87, 1, 1, "", "get_all_dependent_turbines"], [88, 1, 1, "", "get_all_impacting_turbines"], [89, 1, 1, "", "get_all_impacting_turbines_geometrical"], [90, 1, 1, "", "get_dependent_turbines_by_wd"], [91, 1, 1, "", "get_turbs_in_radius"], [92, 1, 1, "", "get_upstream_turbs_floris"], [93, 1, 1, "", "interpolate_floris_from_df_approx"]], "flasc.utilities.lookup_table_tools": [[95, 1, 1, "", "get_yaw_angles_interpolant"]], "flasc.utilities.optimization": [[97, 1, 1, "", "estimate_ti"], [98, 1, 1, "", "find_timeshift_between_dfs"], [99, 1, 1, "", "match_y_curves_by_offset"]], "flasc.utilities.tuner_utilities": [[101, 1, 1, "", "nested_get"], [102, 1, 1, "", "nested_set"], [103, 1, 1, "", "replicate_nan_values"], [104, 1, 1, "", "resim_floris"]], "flasc.utilities.utilities": [[105, 1, 1, "", "_interpolate_with_max_gap"], [106, 1, 1, "", "estimate_dt"], [107, 1, 1, "", "get_num_turbines"], [108, 1, 1, "", "interp_with_max_gap"]], "flasc.utilities.utilities_examples": [[110, 1, 1, "", "load_floris_artificial"], [111, 1, 1, "", "load_floris_smarteole"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property"}, "terms": {"": [13, 15, 24, 46, 47, 49, 50, 83, 85, 87, 88, 90, 92, 93, 94, 95, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125], "0": [1, 2, 3, 4, 5, 7, 10, 11, 13, 15, 24, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 65, 66, 67, 68, 69, 72, 74, 76, 77, 83, 84, 85, 87, 88, 89, 90, 92, 93, 96, 98, 109, 110, 111, 113, 117, 119, 120, 125], "00": [83, 93, 116, 117], "000": [115, 116, 117, 120], "00000e": 117, "00001": [83, 89], "00019531250018189894": 115, "00025": 117, "000786": 117, "001": [46, 47, 51, 52, 83, 85, 87, 88, 90, 115, 116, 117], "001473": 119, "001622": 117, "002": [115, 116, 117], "003": [115, 116, 117], "004": [115, 116, 117], "005": [115, 116, 117], "006": [115, 116, 117], "006674": 117, "007": 120, "00_setup_floris_model": 116, "01": [44, 45, 46, 47, 83, 85, 93, 113, 116, 117], "010": 116, "011852": 117, "012211": 117, "013297": 117, "013556": 119, "013610": 117, "014837": 120, "015": 115, "017239": 117, "017320": 117, "01_raw_data_process": 115, "02": [113, 115, 116, 117], "020": 116, "020642": 117, "023940": 117, "025": 116, "028336": 117, "028457": 117, "02_download_and_format_dataset": 121, "02_precalculate_floris_solut": 116, "03": [83, 85, 93, 113, 116, 117], "030": 116, "030381e": 117, "031791": 117, "033320e": 117, "039771": 117, "03_energy_ratio": 114, "03d": [13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 113, 115, 116, 117], "04": [44, 45, 113, 116, 117], "040": 116, "043104": 117, "043126e": 117, "043464": 117, "044316": 117, "045": 116, "046216": 117, "05": [46, 47, 51, 113, 115, 116, 117], "050": [116, 117], "051594": 117, "053268": 117, "053966": 119, "056111": 117, "058312": 120, "059672": 120, "06": [83, 85, 115, 116, 117, 118, 119, 126], "060": 116, "063863": 117, "064289": 117, "065964": 119, "07": [113, 115, 116, 117], "071727": 117, "073745": 117, "076833": 117, "077458": 117, "079571": 117, "08": [44, 45, 83, 93, 115, 116, 117], "080681": 117, "080819": 117, "081048": 117, "084883": 117, "085901": 120, "086875": 117, "09": [55, 56, 83, 85, 116, 117], "091502": 117, "095189": 119, "098877": 119, "0e": [46, 47, 115], "0e6": [83, 93], "0e9": [116, 117], "0m": [115, 116, 117], "0x7ffaa6951a20": 117, "1": [1, 2, 3, 4, 5, 7, 10, 11, 13, 15, 44, 45, 46, 47, 50, 57, 58, 59, 60, 68, 76, 77, 83, 84, 85, 89, 92, 93, 96, 98, 113, 117, 118, 119, 120, 125], "10": [5, 6, 7, 13, 15, 44, 45, 46, 47, 83, 85, 87, 88, 90, 93, 94, 95, 96, 98, 113, 115, 116, 117, 118, 119, 120], "100": [83, 85, 87, 88, 90, 93, 96, 98, 115, 116, 117, 120], "1000": [55, 56, 118, 119, 120], "101": [83, 85, 117], "102": [3, 4, 83, 85, 87, 88, 89, 90, 96, 98], "103": [83, 85], "104": [83, 85, 87, 88, 90, 96, 98], "105": [3, 4, 83, 85, 89, 116, 117], "106": [83, 85, 87, 88, 90, 96, 98, 117], "106506": 120, "107": [83, 85], "107205": 117, "108": [3, 4, 83, 85, 87, 88, 89, 90, 96, 98, 117], "109": [83, 85], "109070": 117, "11": [3, 4, 46, 47, 83, 85, 93, 113, 116, 117, 119], "110": [83, 85, 87, 88, 90, 96, 98, 116, 117], "111": [3, 4, 83, 85, 89], "112": [83, 85, 87, 88, 90, 96, 98, 116], "112577": 120, "113": [83, 85], "114": [3, 4, 83, 85, 87, 88, 89, 90, 96, 98], "115": [83, 85, 116, 117], "116": [83, 85, 87, 88, 90, 96, 98], "116417": 117, "116864": 117, "117": [3, 4, 83, 85, 89, 116], "118": [83, 85, 87, 88, 90, 96, 98], "118957": 117, "119": [83, 85], "1197": 115, "12": [3, 4, 46, 47, 83, 85, 87, 88, 89, 90, 93, 94, 95, 96, 98, 113, 115, 116, 117], "120": [3, 4, 53, 54, 83, 85, 87, 88, 89, 90, 96, 98, 116, 117], "1202808": [83, 93], "121": [83, 85], "122": [83, 85, 87, 88, 90, 96, 98], "123": [3, 4, 83, 85, 89, 117], "123594e": 117, "124": [83, 85, 87, 88, 90, 96, 98, 117], "125": [83, 85, 116, 117], "1251108": [83, 93], "126": [3, 4, 83, 85, 87, 88, 89, 90, 96, 98, 117, 118, 119], "127": [83, 85, 117], "128": [83, 85, 87, 88, 90, 96, 98, 117], "129": [3, 4, 83, 85, 89, 117], "13": [46, 47, 83, 85, 115, 116, 117], "130": [83, 85, 87, 88, 90, 96, 98, 116, 117], "131": [83, 85, 117], "132": [3, 4, 83, 85, 87, 88, 89, 90, 96, 98, 117], "133": [83, 85, 117], "134": [83, 85, 87, 88, 90, 96, 98, 117], "135": [3, 4, 83, 85, 89, 116, 117], "136": [83, 85, 87, 88, 90, 96, 98], "137": [83, 85], "138": [3, 4, 83, 85, 87, 88, 89, 90, 96, 98], "139": [83, 85], "14": [46, 47, 83, 85, 87, 88, 90, 96, 98, 113, 115, 116, 117], "140": [83, 85, 87, 88, 90, 96, 98, 116, 117], "141": [3, 4, 83, 85, 89], "142": [83, 85, 87, 88, 90, 96, 98, 115], "142345": 120, "1424": 117, "1426": 117, "1427": 117, "1429": 117, "143": [83, 85], "1430": 117, "144": [3, 4, 83, 85, 87, 88, 89, 90, 96, 98], "145": [83, 85, 116, 117], "146": [83, 85, 87, 88, 90, 96, 98], "14692690": [100, 101, 102], "147": [3, 4, 83, 85, 89], "147089": 117, "148": [83, 85, 87, 88, 90, 96, 98], "149": [83, 85], "149477": 117, "15": [3, 4, 46, 47, 83, 85, 89, 93, 113, 115, 116, 117, 120], "150": [3, 4, 83, 85, 87, 88, 89, 90, 96, 98, 116, 117], "151": [83, 85], "152": [83, 85, 87, 88, 90, 96, 98], "153": [3, 4, 83, 85, 89], "154": [83, 85, 87, 88, 90, 96, 98], "154903": 117, "155": [83, 85, 116, 117], "155273446026513e": 115, "156": [3, 4, 83, 85, 87, 88, 89, 90, 96, 98, 116], "157": [83, 85], "158": [83, 85, 87, 88, 90, 96, 98], "159": [3, 4, 83, 85, 89], "159744": 117, "16": [46, 47, 83, 85, 87, 88, 90, 96, 98, 115, 116, 117, 120], "160": [83, 85, 87, 88, 90, 96, 98, 116, 117], "161": [83, 85], "162": [3, 4, 83, 85, 87, 88, 89, 90, 96, 98], "162351": 117, "162996e": 117, "163": [83, 85, 116], "164": [83, 85, 87, 88, 90, 96, 98], "165": [3, 4, 83, 85, 89, 116, 117], "166": [83, 85, 87, 88, 90, 96, 98], "166010": 119, "166085": 117, "167": [83, 85, 117], "168": [3, 4, 83, 85, 87, 88, 89, 90, 96, 98, 117], "169": [83, 85], "17": [46, 47, 83, 85, 115, 116, 117, 120], "170": [83, 85, 87, 88, 90, 96, 98, 116, 117], "170321e": 117, "170447": 117, "171": [3, 4, 83, 85, 89, 117], "171201": 119, "171484e": 117, "172": [83, 85, 87, 88, 90, 96, 98, 117], "173": [83, 85], "174": [3, 4, 83, 85, 87, 88, 89, 90, 96, 98], "175": [83, 85, 116, 117, 120], "175628": 117, "176": [83, 85, 87, 88, 90, 96, 98, 120], "177": [3, 4, 83, 85, 89, 120], "178": [83, 85, 87, 88, 90, 96, 98, 120], "179": [83, 85, 120], "18": [3, 4, 46, 47, 83, 85, 87, 88, 89, 90, 93, 96, 98, 115, 116, 117, 120], "180": [3, 4, 44, 45, 83, 85, 87, 88, 89, 90, 96, 98, 113, 116, 117, 120], "1801": [83, 85], "180232": 119, "181": [83, 85], "182": [83, 85, 87, 88, 90], "183": [3, 4, 83, 85, 89], "184": [83, 85, 87, 88, 90, 115], "185": [83, 85], "185659": 117, "186": [3, 4, 83, 85, 87, 88, 89, 90], "187": [83, 85], "188": [83, 85, 87, 88, 90], "189": [3, 4, 83, 85, 89], "19": [46, 47, 83, 85, 115, 116, 117, 120], "190": [83, 85, 87, 88, 90, 116], "191": [83, 85], "192": [3, 4, 83, 85, 87, 88, 89, 90, 117], "193": [83, 85, 117], "193544": 119, "194": [83, 85, 87, 88, 90, 115], "195": [3, 4, 83, 85, 89, 117], "196": [83, 85, 87, 88, 90], "197": [83, 85, 116], "197218": 119, "197443": 120, "198": [3, 4, 83, 85, 87, 88, 89, 90, 117], "199": [83, 85], "1f": 115, "1hz": 113, "2": [1, 2, 3, 4, 10, 11, 13, 16, 44, 45, 46, 47, 50, 68, 74, 77, 83, 85, 87, 88, 90, 92, 93, 94, 95, 96, 98, 113, 117, 119, 120, 125], "20": [46, 47, 83, 85, 87, 88, 90, 93, 96, 98, 115, 116, 117, 118, 120], "200": [44, 45, 83, 85, 87, 88, 90, 116, 117, 118], "201": [3, 4, 83, 85, 89], "2018": [83, 93], "2019": [44, 45, 113, 121, 125], "202": [83, 85, 87, 88, 90], "2020": [113, 117], "2022": [114, 125], "2024": 125, "203": [83, 85], "204": [3, 4, 83, 85, 87, 88, 89, 90, 117], "204466": 117, "205": [83, 85], "206": [83, 85, 87, 88, 90], "207": [3, 4, 83, 85, 89], "208": [83, 85, 87, 88, 90], "209": [83, 85], "21": [3, 4, 46, 47, 83, 85, 89, 115, 116, 117], "210": [3, 4, 83, 85, 87, 88, 89, 90], "211": [83, 85], "211836": 120, "212": [83, 85, 87, 88, 90], "213": [3, 4, 83, 85, 89, 93], "214": [83, 85, 87, 88, 90], "215": [83, 85, 93], "216": [3, 4, 83, 85, 87, 88, 89, 90], "217": [83, 85], "2172": 117, "217288": 120, "2173": 117, "2174": 117, "2175": 117, "2176": 117, "2177": 117, "218": [83, 85, 87, 88, 90], "219": [3, 4, 83, 85, 89, 117], "219887": 117, "22": [46, 47, 83, 85, 87, 88, 90, 96, 98, 115, 116, 117, 125], "220": [83, 85, 87, 88, 90, 117], "2207031261368684e": 115, "221": [83, 85, 117], "222": [3, 4, 83, 85, 87, 88, 89, 90, 117], "223": [83, 85], "223109e": 117, "224": [83, 85, 87, 88, 90, 117], "225": [3, 4, 83, 85, 89, 116, 117], "225742": 117, "226": [83, 85, 87, 88, 90], "227": [83, 85, 117], "228": [3, 4, 83, 85, 87, 88, 89, 90], "229": [83, 85], "22nd": 113, "23": [46, 47, 83, 85, 93, 116, 117], "230": [83, 85, 87, 88, 90, 116, 117], "230575": 117, "231": [3, 4, 83, 85, 89, 117], "232": [83, 85, 87, 88, 90, 117], "233": [83, 85], "234": [3, 4, 83, 85, 87, 88, 89, 90, 117], "234464": 120, "235": [83, 85, 117], "236": [83, 85, 87, 88, 90, 117], "237": [3, 4, 83, 85, 89, 117], "238": [83, 85, 87, 88, 90, 117], "239": [83, 85, 115, 117], "23rd": 113, "24": [3, 4, 46, 47, 83, 85, 87, 88, 89, 90, 93, 96, 98, 116, 117], "240": [3, 4, 83, 85, 87, 88, 89, 90, 117], "241": [83, 85, 117], "242": [83, 85, 87, 88, 90], "243": [3, 4, 83, 85, 89, 117], "244": [83, 85, 87, 88, 90, 117], "245": [83, 85, 119], "246": [3, 4, 83, 85, 87, 88, 89, 90, 119], "247": [83, 85, 117, 119], "248": [83, 85, 87, 88, 90, 117, 119], "249": [3, 4, 83, 85, 89, 117, 119], "25": [46, 47, 83, 85, 93, 116, 117, 118, 119], "250": [83, 85, 87, 88, 90, 116, 118, 119], "251": [83, 85, 119], "252": [3, 4, 83, 85, 87, 88, 89, 90, 119], "252229": 117, "253": [83, 85, 117], "253171": 117, "254": [83, 85, 87, 88, 90], "255": [3, 4, 83, 85, 89, 119], "256": [83, 85, 87, 88, 90, 117], "256896": 120, "257": [83, 85], "257707": 117, "258": [3, 4, 83, 85, 87, 88, 89, 90], "259": [83, 85], "26": [83, 85, 87, 88, 90, 96, 98, 116, 117], "260": [83, 85, 87, 88, 90], "261": [3, 4, 83, 85, 89, 117], "262": [83, 85, 87, 88, 90, 115], "263": [83, 85, 117], "264": [3, 4, 83, 85, 87, 88, 89, 90], "265": [83, 85, 117], "265650": 119, "266": [83, 85, 87, 88, 90], "267": [3, 4, 83, 85, 89, 117], "268": [83, 85, 87, 88, 90], "269": [83, 85, 117], "27": [3, 4, 83, 85, 89, 116, 117], "270": [3, 4, 83, 85, 87, 88, 89, 90, 117, 120], "271": [83, 85, 117, 120], "272": [83, 85, 87, 88, 90], "2725108": [83, 93], "273": [3, 4, 83, 85, 89, 117], "274": [83, 85, 87, 88, 90, 117, 120], "275": [83, 85, 117, 120], "275077": 119, "276": [3, 4, 83, 85, 87, 88, 89, 90, 117, 120], "277": [83, 85, 117, 120], "277465": 120, "278": [83, 85, 87, 88, 90, 117, 120], "279": [3, 4, 83, 85, 89, 117, 120], "28": [83, 85, 87, 88, 90, 96, 98, 116, 117, 125], "280": [83, 85, 87, 88, 90, 117], "281": [83, 85, 117], "282": [3, 4, 83, 85, 87, 88, 89, 90, 117], "283": [83, 85, 117], "284": [83, 85, 87, 88, 90, 117], "285": [3, 4, 83, 85, 89, 117], "286": [83, 85, 87, 88, 90], "287": [83, 85, 115], "288": [3, 4, 83, 85, 87, 88, 89, 90], "289": [83, 85, 115], "29": [83, 85, 116, 117], "290": [83, 85, 87, 88, 90, 118, 119], "291": [3, 4, 83, 85, 89], "292": [83, 85, 87, 88, 90, 115], "293": [83, 85], "294": [3, 4, 83, 85, 87, 88, 89, 90, 115], "295": [83, 85], "2957021": [83, 93], "296": [83, 85, 87, 88, 90, 117], "297": [3, 4, 83, 85, 89, 117], "298": [83, 85, 87, 88, 90, 115, 117], "299": [83, 85, 117], "2999": 117, "2f": [116, 117], "3": [3, 4, 44, 45, 46, 47, 50, 51, 52, 62, 63, 83, 84, 85, 89, 93, 113, 117, 118, 119, 120, 124], "30": [3, 4, 83, 85, 87, 88, 89, 90, 93, 96, 98, 115, 116, 117], "300": [3, 4, 51, 83, 85, 87, 88, 89, 90, 115, 116, 117], "301": [83, 85, 117], "302": [83, 85, 87, 88, 90], "303": [3, 4, 83, 85, 89], "304": [83, 85, 87, 88, 90], "305": [83, 85], "306": [3, 4, 83, 85, 87, 88, 89, 90], "306531": 117, "307": [83, 85], "307836": 120, "308": [83, 85, 87, 88, 90], "309": [3, 4, 83, 85, 89, 115], "30e3": 115, "30mwarn": [116, 117], "31": [83, 85, 93, 116, 117], "310": [83, 85, 87, 88, 90], "3100": 113, "310576": 117, "311": [83, 85], "312": [3, 4, 83, 85, 87, 88, 89, 90], "313": [83, 85], "3134": 117, "3135": 117, "3137": 117, "3138": 117, "314": [83, 85, 87, 88, 90], "3140": 117, "3141": 117, "315": [3, 4, 83, 85, 89], "3159": 117, "316": [83, 85, 87, 88, 90], "3161": 117, "3162": 117, "3163": 117, "316341": 120, "3165": 117, "3166": 117, "317": [83, 85], "318": [3, 4, 83, 85, 87, 88, 89, 90], "319": [83, 85, 115, 116], "319409e": 117, "32": [83, 85, 87, 88, 90, 96, 98, 116, 117], "320": [83, 85, 87, 88, 90], "3200": [113, 115], "321": [3, 4, 83, 85, 89], "321817": 120, "322": [83, 85, 87, 88, 90], "323": [83, 85, 115, 116], "32395": [83, 85], "32396": [83, 85], "32397": [83, 85], "32398": [83, 85], "32399": [83, 85, 93], "324": [3, 4, 83, 85, 87, 88, 89, 90], "32400": [83, 85, 93], "325": [83, 85], "326": [83, 85, 87, 88, 90, 115], "326018": 120, "327": [3, 4, 83, 85, 89], "328": [83, 85, 87, 88, 90, 115], "329": [83, 85, 117], "32m2024": [115, 116, 117], "33": [3, 4, 83, 85, 89, 113, 116, 117], "330": [3, 4, 83, 85, 87, 88, 89, 90, 115, 116], "331": [83, 85], "332": [83, 85, 87, 88, 90], "333": [3, 4, 83, 85, 89], "334": [83, 85, 87, 88, 90], "335": [83, 85], "336": [3, 4, 83, 85, 87, 88, 89, 90, 115], "337": [83, 85], "337790": 117, "337860099428269e": 115, "338": [83, 85, 87, 88, 90], "339": [3, 4, 83, 85, 89], "33mdelet": [116, 117], "33mwarn": [116, 117], "34": [83, 85, 87, 88, 90, 96, 98, 116, 117], "340": [83, 85, 87, 88, 90, 115], "341": [83, 85, 117], "342": [3, 4, 83, 85, 87, 88, 89, 90, 115, 117], "343": [83, 85, 115, 117], "344": [83, 85, 87, 88, 90, 117], "345": [3, 4, 83, 85, 89, 116, 117], "345981": 117, "346": [83, 85, 87, 88, 90], "347": [83, 85], "347562": 120, "348": [3, 4, 83, 85, 87, 88, 89, 90, 116, 117], "348930": 117, "349": [83, 85], "349282": 120, "34mflori": [116, 117], "35": [83, 85, 116, 117], "350": [83, 85, 87, 88, 90, 116], "351": [3, 4, 83, 85, 89, 116, 117], "352": [83, 85, 87, 88, 90], "353": [83, 85], "354": [3, 4, 46, 50, 83, 85, 87, 88, 89, 90, 116, 117], "355": [83, 85], "356": [83, 85, 87, 88, 90], "357": [3, 4, 46, 50, 83, 85, 89, 93, 116, 117], "357473e": 117, "358": [83, 85, 87, 88, 90, 93], "359": [83, 85], "36": [3, 4, 83, 85, 87, 88, 89, 90, 96, 98, 116, 117], "360": [1, 2, 3, 4, 10, 11, 65, 67, 68, 72, 74, 77, 83, 85, 93, 105, 108, 113, 116, 117, 125], "360759": 119, "360875": 119, "361": 117, "364671": 120, "368": [115, 116], "37": [83, 85, 116, 117], "373961": 120, "375": [116, 117], "379721": 120, "38": [83, 85, 87, 88, 90, 96, 98, 116, 117], "3825108": [83, 93], "3860281": [83, 93], "387924": 117, "39": [3, 4, 83, 85, 89, 116, 117], "394922": 119, "395673": 120, "397861": 119, "398639": 117, "3987634": [83, 93], "3f": [116, 117], "3rd": 118, "4": [44, 45, 46, 47, 50, 55, 56, 83, 85, 87, 88, 90, 93, 94, 95, 96, 98, 113, 114, 115, 118, 119, 120], "40": [83, 85, 87, 88, 90, 93, 96, 98, 116, 117], "400": [116, 117, 119], "400032": 119, "401": [115, 117], "402": 117, "403": 117, "404": 117, "405": 116, "406": 116, "40625": 116, "408887e": 117, "409497e": 117, "41": [83, 85, 116, 117], "415628": 120, "42": [3, 4, 83, 85, 87, 88, 89, 90, 96, 98, 116, 117], "420619": 120, "4235128": [83, 93], "426": 120, "429": 116, "43": [83, 85, 116, 117], "430": 116, "431": 116, "432591": 117, "433": 115, "435174e": 117, "438": 116, "44": [83, 85, 87, 88, 90, 96, 98, 116, 117], "446576": 119, "448": 115, "45": [3, 4, 83, 85, 89, 116, 117], "450": 116, "452": 116, "454": [115, 116], "455288": 120, "458819": 120, "46": [83, 85, 87, 88, 90, 96, 98, 116, 117], "461185": 117, "464863": 117, "465325": 117, "465602": 119, "47": [83, 85, 116, 117], "475155e": 117, "476": 120, "478195188475695e": 115, "48": [3, 4, 83, 85, 87, 88, 89, 90, 96, 98, 116, 117], "482": 120, "487232e": 117, "49": [83, 85, 116, 117], "491596": 120, "49625e": 117, "499": 115, "5": [1, 2, 10, 11, 13, 15, 26, 40, 44, 45, 46, 47, 50, 51, 53, 54, 57, 60, 68, 76, 83, 85, 93, 94, 95, 113, 115, 118, 119, 120], "50": [1, 2, 10, 11, 46, 47, 53, 54, 68, 76, 77, 83, 85, 87, 88, 90, 96, 98, 115, 116, 117, 119], "500": [116, 118, 119], "5000": [116, 117], "50000e": 117, "507342": 120, "51": [3, 4, 83, 85, 89, 116, 117], "52": [83, 85, 87, 88, 90, 96, 98, 116, 117], "52103": [83, 93], "52104": [83, 93], "521491e": 117, "528790": 120, "53": [83, 85, 116, 117], "537493": 117, "54": [3, 4, 83, 85, 87, 88, 89, 90, 96, 98, 116, 117], "542": 117, "543": 117, "544": 117, "544749": 120, "545584e": 117, "546": 117, "547": 117, "55": [83, 85, 116, 117], "550": 117, "553318e": 117, "558": [115, 116, 120], "559170": 117, "56": [83, 85, 87, 88, 90, 96, 98, 116, 117], "562": 116, "566593": 119, "567": 120, "57": [3, 4, 83, 85, 89, 116, 117], "571": 115, "576": 120, "58": [83, 85, 87, 88, 90, 96, 98, 116, 117], "581346": 119, "585": 120, "588": 115, "59": [83, 85, 115, 116, 117], "590": 115, "592663": 120, "5995": 117, "599587": 119, "5996": 117, "5997": 117, "5998": 117, "5999": 117, "6": [3, 4, 44, 45, 46, 47, 50, 51, 83, 85, 87, 88, 89, 90, 93, 96, 98, 115, 119], "60": [3, 4, 57, 58, 59, 83, 85, 87, 88, 89, 90, 96, 98, 115, 116, 117], "600": [115, 116, 117], "6000": 117, "600864e": 117, "604526": 119, "605194": 120, "607450": 120, "61": [83, 85], "612568": 119, "613": 115, "62": [83, 85, 87, 88, 90, 96, 98, 116], "625": 116, "63": [3, 4, 83, 85, 89], "637": 120, "64": [83, 85, 87, 88, 90, 96, 98], "640375e": 117, "644321": 117, "645107": 119, "65": [83, 85, 93, 116, 117], "650": 117, "651600": 119, "654828": 117, "656436": 117, "658325": 119, "66": [3, 4, 83, 85, 87, 88, 89, 90, 96, 98], "666": [115, 120], "666355e": 117, "67": [83, 85], "672079": 119, "68": [83, 85, 87, 88, 90, 96, 98], "680": [117, 120], "681": 117, "683": 117, "684": 117, "686": 117, "687681e": 117, "687766e": 117, "69": [3, 4, 83, 85, 89, 117], "690265": 117, "692": 120, "692111": [83, 93], "697": 115, "697220": 120, "699134": 117, "7": [46, 47, 83, 85, 93, 113, 115, 117, 119, 120], "70": [83, 85, 87, 88, 90, 96, 98, 115, 116, 117], "700": [116, 117], "702120e": 117, "709": 117, "709693e": 117, "71": [83, 85], "710520": 120, "712330": 117, "715": 115, "716924": 120, "717409e": 117, "72": [3, 4, 83, 85, 87, 88, 89, 90, 96, 98, 117], "720": [96, 98], "725": 117, "725108": [83, 93], "726": 120, "726055": 119, "728385e": 117, "73": [83, 85, 117], "730570e": 117, "733548": 120, "735": [115, 116], "736766": 119, "74": [83, 85, 87, 88, 90, 96, 98, 117], "740995e": 117, "746": 115, "748": 117, "75": [3, 4, 83, 85, 89, 116, 117], "750": [116, 117], "751": 117, "751776e": 117, "752": 117, "752023": 120, "752267e": 117, "752561e": 117, "752647e": 117, "753": 117, "753204e": 117, "753318e": 117, "753524e": 117, "753555e": 117, "753852e": 117, "753879e": 117, "753887e": 117, "753891e": 117, "753904e": 117, "753913e": 117, "753922e": 117, "753938e": 117, "753942e": 117, "753947e": 117, "753950e": 117, "753951e": 117, "753954e": 117, "753956e": 117, "753960e": 117, "753962e": 117, "753965e": 117, "753985e": 117, "754006e": 117, "754020e": 117, "755": 120, "76": [83, 85, 87, 88, 90, 96, 98], "760611": 120, "761021": 120, "762993": 117, "766": 117, "766181": 117, "766686": 119, "77": [83, 85], "773": 117, "776": 117, "78": [3, 4, 83, 85, 87, 88, 89, 90, 96, 98], "781": 120, "782860": 120, "783": [117, 120], "783658": 117, "785": 117, "787": 117, "788": 117, "789": 117, "79": [83, 85], "793917": 120, "794": 117, "795": 117, "796": 117, "798": 117, "798261": 117, "799": 117, "799999999999997": 116, "8": [3, 4, 46, 47, 83, 85, 87, 88, 90, 93, 96, 98, 116, 117, 119, 120], "80": [83, 85, 87, 88, 90, 96, 98, 116, 117, 118], "800": [116, 117], "800000000000001": 116, "802": 117, "803": 117, "804": 117, "808006": 120, "808788": 117, "81": [3, 4, 83, 85, 89, 93], "810": 117, "811": 117, "815202": 119, "816": 120, "817": 120, "82": [83, 85, 87, 88, 90, 96, 98, 117], "820262": 117, "822666": 119, "825": 117, "825108": [83, 93], "83": [83, 85, 117], "834": 120, "84": [3, 4, 83, 85, 87, 88, 89, 90, 96, 98], "842584e": 117, "843345": 120, "845": 120, "849506": 117, "849585e": 117, "85": [83, 85, 116, 117], "850": 120, "850214": 117, "858": [115, 116], "858161": [83, 93], "86": [83, 85, 87, 88, 90, 96, 98], "861142": 117, "867506": 117, "87": [3, 4, 83, 85, 89], "875": [116, 117], "875381": 117, "878284": 117, "879889": 117, "88": [83, 85, 87, 88, 90, 96, 98, 116, 117], "880755": [83, 85], "880772": [83, 85], "880781": [83, 85], "880829": [83, 85], "880831": 117, "880843": [83, 85], "881165": [83, 85], "882589": 119, "884975": 117, "888": [115, 116], "89": [83, 85, 117], "890643": 117, "892661": 117, "893690": 117, "893931": 117, "899556": 117, "8m": 117, "8th": 120, "9": [3, 4, 46, 47, 83, 85, 87, 88, 89, 90, 93, 113, 115, 116, 117, 120], "90": [3, 4, 83, 85, 87, 88, 89, 90, 96, 98, 116, 117], "900444": 117, "902751": 120, "903335": 117, "91": [83, 85, 117], "91278075390278e": 115, "913113": 117, "917771": 117, "92": [83, 85, 87, 88, 90, 96, 98, 117], "923122": 120, "928803": 117, "929685": 120, "93": [3, 4, 83, 85, 89, 117], "930540": 117, "934316": 117, "936743": 117, "938": 116, "938410": 119, "938743": 117, "94": [83, 85, 87, 88, 90, 96, 98, 116, 117], "942418": 117, "95": [1, 2, 10, 11, 46, 47, 83, 85, 116, 117], "953957": 120, "95639037695139e": 115, "96": [3, 4, 83, 85, 87, 88, 89, 90, 96, 98, 117], "960415": 117, "9625": 117, "962500000000006": 117, "963": 117, "967222": 117, "97": [83, 85, 115, 117], "972016": 117, "973655": 117, "98": [83, 85, 87, 88, 90, 96, 98, 117], "982278": 119, "982446": 117, "983608": 117, "985282": 117, "987878": 120, "99": [3, 4, 46, 47, 83, 85, 89, 93, 117], "991109": 117, "993003": 119, "995": [83, 84], "996428": 117, "998493": 117, "999180": 117, "999869": 117, "A": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 18, 24, 25, 44, 45, 46, 47, 50, 57, 58, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 85, 87, 88, 89, 90, 92, 93, 100, 101, 102, 103, 104, 113, 117, 120, 123, 125], "As": [13, 37, 38, 120], "But": 120, "By": [44, 45, 83, 93, 115, 116, 117, 120], "For": [46, 47, 49, 83, 87, 88, 92, 93, 100, 103, 113, 115, 116, 117, 120, 124, 125], "If": [1, 2, 8, 9, 10, 11, 13, 15, 18, 22, 25, 44, 45, 46, 47, 50, 57, 60, 62, 63, 68, 69, 77, 83, 87, 88, 90, 93, 94, 95, 100, 102, 105, 108, 113, 115, 116, 117, 123, 125], "In": [1, 2, 10, 11, 44, 45, 83, 86, 93, 113, 115, 116, 117, 118, 125], "It": [13, 18, 68, 77, 83, 92, 93, 113, 116, 117, 125, 126], "Not": 115, "One": [94, 95, 113], "That": 123, "The": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 15, 17, 24, 25, 44, 45, 46, 47, 48, 50, 51, 52, 55, 56, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 89, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125], "Then": [116, 117, 123], "There": 113, "These": [46, 47, 49, 55, 56, 113, 115, 116, 125], "To": [83, 93, 115, 123], "With": [113, 114], "_": [113, 115, 116, 117, 125], "__call__": 117, "__name__": 117, "_attr": 63, "_axesbas": 117, "_base": 117, "_broadcast_to": 117, "_cach": 63, "_check_return": 117, "_compute_energy_ratio_bootstrap": 1, "_compute_energy_ratio_singl": 1, "_compute_total_uplift_bootstrap": 10, "_compute_total_uplift_singl": 10, "_compute_ws_count": [8, 9], "_constructor": [62, 63], "_convert_long_to_wid": [62, 63], "_convert_wide_to_long": [62, 63], "_description_": [3, 4], "_discret": 55, "_draw_dis": 117, "_draw_list_compositing_imag": 117, "_draw_raster": 117, "_fetch_figure_metadata": 117, "_fi_set_ws_wd_ti": 83, "_finalize_raster": 117, "_find_sensor_stuck_single_timearrai": 51, "_get_all_unique_flag": [46, 47], "_get_energy_ratio": 3, "_get_energy_ratios_allbin": [44, 45], "_get_leaves_and_knot": 55, "_get_mean_power_curv": [46, 47], "_get_ticklabel_bbox": 117, "_gui": 113, "_interpolate_with_max_gap": 105, "_invalidi": 117, "_invalidx": 117, "_ipython_display_": 117, "_is_uplift": [8, 9], "_load_er_input_for_wd_bia": [44, 45], "_long_data_column": [62, 63], "_max": [1, 2, 10, 11], "_metadata": [62, 63], "_mgr": 63, "_plot_regress": 55, "_plot_top_sensor_fault": 51, "_process_single_wd": [3, 4], "_raster": 117, "_repr_html_": [62, 63], "_reset_mean_power_curv": [46, 47], "_set_col_by_n_closest_upstream_turbin": 13, "_set_col_by_radius_from_turbin": 13, "_set_col_by_turbin": 13, "_set_col_by_upstream_turbin": 13, "_set_col_by_upstream_turbines_in_radiu": 13, "_set_legend_alpha_to_on": [46, 47], "_set_pow_ref_fun": [116, 117], "_set_ws_fun": [116, 117], "_shorth_mod": 55, "_step": [1, 2, 10, 11], "_subslic": 117, "_to_draw": 117, "_type_": [3, 4], "_update_label_posit": 117, "_user_format": [62, 63], "_x": 117, "_xy": 117, "_y": 117, "a1": [113, 115], "a2": [113, 115], "a3": [113, 115], "abl": 115, "about": [13, 16, 62, 63, 113, 116, 117], "abov": [46, 47, 83, 93, 113, 115, 116, 117, 118, 119, 120, 123], "absolut": [1, 2, 68, 79], "accept": [68, 79], "access": [100, 101, 102, 113, 115, 123], "accommod": 113, "accord": [46, 47, 50, 68, 78, 80, 83, 91, 92, 113, 116], "account": [57, 58, 116], "accur": [83, 89, 92, 93, 116, 117], "achiev": [83, 84], "across": [1, 2, 10, 11, 68, 70, 71, 73, 74, 75, 76, 83, 84], "act": 118, "action": [116, 117], "activ": [115, 123], "activepower_": 115, "activepowermean": 120, "actual": [46, 47, 113, 115], "ad": [13, 68, 69, 72, 83, 86, 113, 117, 120], "add": [13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 68, 69, 70, 71, 72, 73, 74, 75, 76, 83, 84, 113, 117, 123], "add_bin_weight": 68, "add_gaussian_blending_to_floris_approx_t": 83, "add_power_ref": 68, "add_power_test": 68, "add_reflected_row": 68, "add_w": 68, "add_wd": 68, "add_wd_bin": 68, "add_ws_bin": 68, "add_ws_est_one_ttyp": [83, 86], "addit": [13, 15, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 68, 70, 71, 73, 74, 75, 76, 78, 115, 120, 121], "addition": [8, 9, 44, 45, 83, 93, 94, 95, 115, 125], "address": [13, 18, 125], "adher": 120, "adjac": 117, "adjust": 113, "advantag": 117, "affect": [83, 89, 92, 115, 116, 117], "after": [13, 15, 96, 98, 113, 115], "again": [68, 72, 118, 121, 123], "against": 113, "aggreg": [46, 47, 68, 77], "agreement": 113, "al": [83, 85, 114, 125], "alarm": 115, "alex": [83, 86], "algorithm": [46, 47, 113, 117], "align": [113, 116, 117, 118, 119, 120], "all": [1, 2, 3, 4, 8, 9, 10, 11, 13, 14, 15, 22, 27, 28, 30, 31, 32, 34, 36, 37, 38, 39, 41, 42, 46, 47, 68, 73, 74, 75, 76, 77, 79, 81, 83, 85, 87, 88, 89, 90, 92, 93, 94, 95, 113, 115, 116, 117, 119, 125], "all_flag": [46, 47], "all_influence_magnitud": [83, 90], "allow": [13, 16, 46, 47, 68, 77, 83, 84, 93, 105, 108, 113, 115, 125], "allow_convert_to_integ": [13, 16], "allow_raster": 117, "along": [65, 66, 67], "alpha": [46, 47, 117], "alreadi": [113, 118], "also": [3, 4, 13, 16, 29, 33, 38, 43, 44, 45, 46, 47, 83, 85, 93, 96, 98, 113, 114, 116, 117, 118, 120, 122, 123, 125], "altern": [118, 125], "although": [68, 79], "altitud": [13, 24, 25], "alvaro": [55, 117], "alvarogonzalezsalcedo": [55, 117], "alwai": [113, 117, 120], "ambient": [3, 4, 83, 92, 93, 116, 125], "among": 122, "amount": 125, "an": [1, 2, 5, 6, 7, 10, 11, 13, 15, 17, 18, 25, 37, 38, 44, 45, 46, 47, 62, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 80, 83, 90, 93, 94, 95, 100, 102, 113, 114, 115, 118, 120, 121, 123, 125], "analag": 118, "analys": [113, 114, 125], "analysi": [12, 13, 15, 64, 83, 93, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122], "analyz": 113, "angl": [65, 66, 94, 95, 96, 99, 100, 104, 113, 115, 118, 125], "angle_wrap": [96, 99, 116, 117], "angles_array_deg": [65, 66, 67], "angular": [57, 58, 59, 125], "ani": [1, 2, 8, 9, 10, 11, 13, 15, 16, 44, 45, 46, 47, 50, 51, 52, 63, 68, 73, 74, 75, 76, 77, 82, 83, 86, 87, 88, 89, 90, 93, 100, 101, 102, 113, 116, 117, 123], "annual": 114, "anoth": [62, 63, 115, 116, 117, 120, 126], "anyth": 115, "anywher": 113, "app": 113, "appar": 117, "appear": [68, 69, 83, 87, 100, 103, 116, 117], "append": [113, 118, 119], "appli": [55, 56, 83, 84, 94, 95, 113, 115, 116, 117], "applic": 113, "apply_bias_correct": [116, 117], "apply_filters_to_df": [46, 47], "approach": [83, 86, 92, 123], "appropri": [116, 120], "approxim": [5, 6, 83, 85, 115, 118], "ar": [1, 2, 10, 11, 13, 15, 22, 26, 29, 33, 35, 38, 40, 43, 44, 45, 46, 47, 50, 55, 56, 57, 60, 62, 63, 65, 66, 68, 69, 74, 76, 79, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 103, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 123, 125], "arang": [3, 4, 46, 47, 83, 85, 96, 98, 116, 117, 118, 119, 120], "aren": [1, 2, 10, 11], "arg": [62, 63, 117], "argument": [44, 45, 117, 120], "aris": [46, 47], "around": [46, 47, 68, 72, 105, 108, 113, 114, 116, 117, 122, 125], "arrai": [3, 4, 5, 7, 13, 22, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 49, 51, 52, 57, 60, 65, 66, 67, 68, 72, 74, 76, 78, 80, 83, 85, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 104, 105, 108, 109, 111, 116, 117, 118, 119, 125], "arraymanag": 63, "artifici": 121, "artist": 117, "artists_raster": 117, "ascend": 105, "assess": 120, "asset": [3, 4], "assign": [1, 2, 10, 11, 46, 47, 50, 68, 69, 113, 116, 117], "assum": [46, 47, 65, 66, 83, 93, 105, 109, 111, 113, 116, 117, 119, 120], "assume_sort": 105, "assumpt": [83, 93], "astyp": 117, "atmospher": 125, "attribut": [45, 63], "author": 125, "automat": [94, 95, 105, 106], "avail": [1, 2, 10, 11, 46, 47, 113, 115, 116, 117, 122, 123, 125], "averag": [13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 46, 47, 57, 58, 59, 68, 70, 71, 73, 74, 75, 76, 96, 98, 113, 115, 116, 117, 118, 119, 120, 125], "avoid": [83, 86, 93, 117], "awai": 117, "ax": [8, 9, 13, 25, 46, 47, 115, 117, 118, 119], "axarr": [8, 9, 118, 119], "axi": [3, 4, 13, 25, 46, 47, 65, 66, 67, 105, 108, 113, 115, 117], "b": 125, "b1": 115, "b2": 115, "back": [62, 63, 83, 90, 114, 115, 118, 119, 120], "backend": 117, "backend_bas": 117, "backend_inlin": 117, "background": [3, 4, 13, 25], "bad": 117, "bai": [114, 125], "balanc": 125, "bar": [46, 47], "base": [1, 2, 4, 6, 9, 10, 11, 44, 45, 46, 47, 49, 50, 55, 56, 63, 68, 69, 77, 83, 88, 100, 101, 102, 113, 115, 116, 117, 118, 120, 125], "base64": 117, "baseformatt": 117, "baselin": [44, 45, 114, 118, 119], "basic": [46, 50, 113], "bbox_extra_artist": 117, "bbox_inch": 117, "becaus": [46, 47, 50, 83, 93, 113, 116, 117], "becom": [13, 15, 83, 93, 113], "been": [13, 18, 96, 98, 113, 115, 124], "befor": 120, "begin": 120, "behavior": [83, 93, 115], "behind": [13, 24, 115], "being": [8, 9, 46, 47, 83, 84, 86, 93, 113, 115, 116, 117], "below": [46, 47, 83, 92, 93, 94, 95, 112, 113, 115, 117, 120], "benefit": [83, 92, 115], "besid": [13, 14, 113, 115], "best": [113, 116, 117], "better": [44, 45, 46, 47, 115], "between": [1, 2, 5, 7, 10, 11, 13, 25, 44, 45, 46, 47, 53, 54, 62, 63, 68, 72, 81, 82, 83, 91, 93, 94, 95, 96, 98, 99, 100, 103, 105, 108, 113, 115, 116, 117, 118, 120, 125], "bfd": 125, "bia": [44, 45, 53, 54, 96, 98, 113, 125], "bias": 113, "bias_estim": [44, 116, 117], "bias_timestep": [53, 54, 117], "bin": [1, 2, 3, 4, 8, 9, 10, 11, 44, 45, 46, 47, 57, 58, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 118, 119, 126], "bin_and_group_datafram": 68, "bin_col_nam": [68, 78], "bin_cols_in": [1, 2, 8, 9, 10, 11, 68, 79], "bin_cols_without_df_nam": [68, 69, 77], "bin_column": 68, "black": 115, "blade": 115, "blade_pitch_": 115, "blend": [83, 84], "block": [5, 6, 7, 117, 118], "blockag": [3, 4], "blockmanag": 63, "blue": 117, "blur": [83, 84], "bokeh": [46, 47, 115], "bool": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 16, 22, 26, 29, 33, 35, 38, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 67, 68, 73, 74, 75, 76, 77, 79, 83, 85, 86, 90, 91, 92, 93, 96, 97, 98, 99, 105, 108, 115], "boolean": [5, 6, 13, 24, 25], "boostreap": 118, "bootstrap": [1, 2, 10, 11, 44, 45, 68, 79, 116, 117, 118], "both": [13, 18, 62, 63, 113, 116, 117, 118, 121], "bound": [1, 2, 10, 11, 13, 19, 20, 21, 44, 45, 46, 47, 83, 93, 96, 97, 98], "boundari": 105, "box": [46, 47, 119], "branch": 55, "bring": [13, 16], "broadcast": 117, "broadcast_arrai": 117, "brown": 113, "bsd": 124, "build": [118, 119], "built": [122, 125], "bytes_io": 117, "c": [51, 113, 115, 116, 117, 125], "c1": 115, "c2": 115, "calc_floris_approx_t": [83, 84, 93, 117], "calc_median_min_max_std": [57, 58, 59, 65, 67, 115], "calc_wd_mean_radi": 65, "calcul": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 16, 26, 27, 29, 30, 31, 33, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 53, 54, 57, 58, 59, 65, 66, 67, 68, 69, 72, 79, 83, 85, 88, 91, 93, 113, 114, 116, 117, 119, 125], "calculate_baselin": [44, 45], "calculate_miss": [46, 47], "calculate_wd_statist": 65, "calibr": [113, 116, 122, 125], "call": [8, 9, 13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 116, 117, 120], "callabl": [44, 45], "callback": 117, "caller": 117, "can": [3, 4, 13, 16, 26, 28, 29, 32, 33, 37, 38, 40, 42, 43, 44, 45, 46, 47, 68, 69, 80, 83, 85, 87, 88, 89, 90, 93, 94, 95, 96, 98, 105, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 125, 126], "cannot": [46, 50, 83, 93, 113, 116, 117], "canva": 117, "capabl": 121, "captur": [83, 89], "care": 125, "carefulli": [57, 59, 113], "case": [1, 2, 10, 11, 46, 47, 68, 74, 76, 113, 114, 115, 116, 117, 118, 119, 120], "cast": 115, "catch": [116, 117], "catch_format_error": 117, "catch_warn": [116, 117], "categor": [46, 47], "caus": [83, 86, 116, 117, 125], "cc": [109, 110, 111], "ccp_alpha": [55, 56], "cell": [116, 120], "cener": [55, 117], "center": [1, 2, 10, 11, 57, 58, 59, 118, 119], "central": [122, 125], "certain": [46, 47, 83, 91, 116], "challeng": 121, "chang": [1, 2, 10, 46, 47, 83, 87, 88, 90, 100, 102, 113, 116, 123], "change_threshold": [83, 87, 88, 90, 116, 117], "channel": [117, 120], "channel_name_map": [62, 63, 115, 120], "channel_name_map_artifici": 115, "character": [3, 4], "check": [46, 47, 51, 52, 53, 54, 68, 79, 113, 123], "check_compute_energy_ratio_input": 68, "check_flasc_format": [62, 63], "choic": [1, 2, 10, 11, 46, 47, 113], "choos": 123, "chosen": 120, "chronolog": [46, 47], "churchfield": 125, "circmean": [65, 66], "circular": [13, 22, 34, 36, 39, 57, 60, 65, 96, 98, 105, 108], "circular_col": [57, 60, 113], "circular_mean": [13, 22], "circular_stat": 113, "cite": 125, "class": [3, 4, 5, 6, 8, 9, 44, 45, 46, 47, 55, 62, 63, 113, 115, 116, 117, 120, 125], "classifi": [46, 47, 49, 50, 113, 116, 117], "claus": 124, "clean": [46, 47, 116], "clear": 117, "clerc": [83, 86], "clock": 113, "clone": 123, "close": [113, 115, 116, 117], "close_figur": 117, "close_group": 117, "closest": [13, 26, 40, 83, 91, 116, 117], "clr": 115, "code": [115, 117, 118, 120, 123], "coeffici": [44, 45, 96, 98, 113], "col": 115, "col_nam": [68, 78, 80], "col_out": 13, "col_prefix": [13, 22], "col_ref": 13, "collect": [119, 120], "color": [8, 9, 13, 25, 113, 115, 117], "color_dict": [8, 9, 119], "color_palett": 118, "colormap": 115, "cols_angular": [57, 58, 59, 115, 116], "cols_df1": [96, 98], "cols_df2": [96, 98], "column": [1, 2, 5, 6, 10, 11, 13, 15, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 93, 96, 98, 100, 103, 104, 113, 115, 116, 117, 118, 120, 125], "column_list": 113, "column_stack": 117, "com": [100, 101, 102, 123, 125], "combin": [1, 2, 10, 11, 68, 77, 83, 85, 118, 119], "come": [3, 4, 118, 119], "command": [113, 123], "comment": 117, "commit": 123, "common": [46, 47, 55, 56, 96, 98, 100, 103, 109, 110, 111, 113, 117], "common_windfarm_inform": [115, 116], "commonli": 113, "commun": 122, "comon": 113, "compar": [44, 45, 51, 52, 96, 98, 113, 125], "comparison": [83, 93, 96, 98, 113, 114, 116, 117, 125], "compat": 115, "complet": [46, 47, 113, 123], "complex": [55, 56], "compon": [8, 9], "composit": 117, "compromis": 113, "comput": [1, 2, 8, 9, 10, 11, 44, 45, 57, 59, 65, 66, 83, 90, 93, 113, 114, 116, 117, 126], "compute_energy_ratio": [1, 68, 79, 118, 119], "compute_total_uplift": 10, "concaten": [5, 6], "cond": [46, 49, 113, 115], "conda": 123, "condit": [46, 47, 49, 50, 83, 92, 93, 113, 115, 125], "conduct": 121, "confid": 118, "configur": 123, "confirm": [113, 117], "confus": [46, 47], "connect": [46, 47], "consecut": [46, 47, 51, 52, 113], "consequ": 125, "consid": [13, 15, 26, 29, 33, 35, 38, 40, 43, 44, 45, 46, 47, 49, 57, 59, 62, 63, 68, 72, 83, 91, 113, 115], "consider": 117, "consist": [13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 53, 54, 100, 103, 113, 116, 117, 118, 119, 125], "consol": [46, 47, 50, 83, 86, 93, 116, 117], "constant": [46, 47, 113, 117], "construct": [1, 2, 10, 11, 116, 117, 118], "consum": 115, "contact": 124, "contain": [1, 2, 3, 4, 10, 11, 13, 24, 25, 26, 28, 29, 32, 33, 35, 37, 38, 40, 42, 43, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 87, 88, 89, 90, 92, 93, 94, 95, 100, 103, 104, 105, 112, 113, 117, 118, 123, 125], "content": [113, 124], "continu": [94, 95, 117, 118], "control": [115, 118], "conveni": [8, 9, 120], "convent": [113, 115, 118, 120], "converg": [46, 47, 116, 117], "convers": [62, 63, 120], "convert": [8, 9, 62, 63, 113, 115, 116, 117], "convert_time_to_datetim": [62, 63, 115], "convert_to_flasc_format": [62, 63, 115, 120], "convert_to_user_format": [62, 63, 120], "coordin": [13, 24, 118, 119], "copi": [62, 63, 83, 93, 115, 116, 117, 120], "copy_metadata": [62, 63], "core": 117, "correct": [44, 45, 46, 47, 55, 56, 96, 98, 113, 121, 125], "correct_y_shift": [96, 98], "correctli": 123, "correl": [44, 45, 46, 47, 96, 98, 113], "correspond": [1, 2, 13, 17, 26, 28, 29, 32, 33, 37, 38, 40, 42, 43, 46, 47, 68, 72], "corrupt": [13, 15], "cosin": [109, 110], "cosine_expon": [109, 110], "cost": [44, 45, 96, 97, 98, 99, 116, 117], "could": [62, 63, 113, 117, 120], "count": [1, 2, 8, 9, 10, 11, 46, 48, 68, 69, 117], "counter": 115, "coupl": [46, 47, 115], "cover": [44, 45, 83, 93, 116, 117], "creat": [8, 9, 13, 25, 46, 47, 94, 95, 115, 116, 117, 118, 119, 123], "criteria": 113, "cross": [53, 54, 113], "crosscheck_northing_offset_consist": [53, 116, 117], "csv": [113, 115], "cumul": 125, "curl": 125, "current": [44, 45, 113, 115, 116, 117, 120, 126], "curtail": [46, 50, 113, 115, 116, 117], "curv": [46, 47, 83, 84, 86, 96, 99, 113, 115, 116, 117, 125], "cut": [46, 47, 68, 83, 84, 113, 115], "cutoff_w": [46, 47, 115], "cwd": [118, 119], "d": [83, 90], "d2": 117, "dai": [13, 24, 25, 53, 54, 96, 98, 117], "dash": 113, "data": [1, 2, 5, 6, 10, 11, 13, 15, 16, 23, 24, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 68, 69, 77, 79, 81, 82, 83, 86, 92, 93, 96, 97, 100, 103, 104, 105, 107, 108, 112, 114, 118, 119, 121, 122, 125], "data_dict": 120, "data_indices_map": 115, "data_process": [112, 115, 116, 117, 119, 121], "databas": 113, "datafram": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 98, 100, 103, 104, 105, 106, 107, 113, 115, 116, 117, 119, 120, 126], "dataframe_manipul": [115, 116, 117, 119], "datapoint": [46, 47], "dataset": [44, 45, 46, 47, 62, 63, 94, 95, 113, 114, 115, 116, 117, 121], "datatyp": 115, "date": [55, 113, 118], "date_rang": 117, "date_tim": 55, "datetim": [53, 54, 57, 58, 59, 62, 63, 105, 106, 116, 117], "datetime64": 115, "datetime_column": [13, 24], "daylight": [13, 24], "daytim": [13, 24], "deadband": [46, 47], "deal": [113, 115, 125], "debug": [116, 117], "decid": 115, "decis": [55, 115], "decisiontreeregressor": 55, "declar": [55, 120, 123], "decompress": 115, "decor": 117, "decreas": [46, 47, 115], "dedic": 123, "deep": 125, "def": [115, 116, 117], "default": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 22, 24, 26, 29, 33, 35, 38, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 67, 68, 69, 74, 76, 77, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 109, 110, 111, 115, 116, 117], "deficit": 113, "defin": [44, 45, 46, 47, 113, 114, 115, 116, 117, 118, 119, 125], "deg": [65, 67, 83, 85, 89, 92, 93, 109, 110, 111, 113, 115, 116, 117, 118, 119, 125], "degre": [1, 2, 10, 11, 44, 45, 65, 66, 67, 68, 72, 83, 84, 92, 94, 95, 105, 108, 109, 110, 111, 113, 115, 116, 117], "degress": [13, 24], "delai": 115, "delet": 115, "demo": 121, "demo_dataset_metmast_600": 115, "demo_dataset_scada_600": 115, "demonstr": [113, 117, 120, 121], "denot": [13, 24, 83, 87, 88, 90, 109, 111, 113, 115], "densiti": [83, 84], "dep_indices_by_wd": [83, 90], "depend": [83, 87, 88, 90, 92, 93, 117, 123], "depict": [46, 47, 49, 94, 95], "deprec": 115, "depth": [55, 56, 121], "derat": 115, "deriv": [1, 3, 4, 10, 13, 37, 38, 68, 81, 82, 83, 89, 125], "descript": [46, 47], "design": [122, 125], "desir": 120, "detail": [112, 114, 125], "detect": [83, 90, 113, 115, 117, 125], "determin": [13, 24, 26, 28, 29, 32, 33, 35, 37, 38, 40, 42, 43, 44, 45, 46, 47, 65, 67, 68, 69, 83, 87, 88, 89, 90, 91, 92, 113, 116, 117, 125], "develop": [55, 117, 121], "deviat": [46, 47, 51, 52, 55, 56, 57, 59, 65, 67, 83, 84, 109, 110, 111, 113, 115], "df": [1, 3, 10, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 93, 105, 107, 113, 115, 116, 117, 119, 120], "df1": [96, 98], "df2": [96, 98], "df_": [1, 2, 10, 11, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82], "df_1": [100, 103, 115], "df_2": [100, 103], "df_approx": [83, 85, 93, 116, 117], "df_baseline_noisy_pd": 118, "df_downsampl": [57, 116], "df_drop_nan_row": 13, "df_fi_approx": [83, 84, 116, 117], "df_filter": [46, 47], "df_find_and_fill_data_gaps_with_miss": 13, "df_fm_approx": [44, 45, 116, 117], "df_fm_approx_gch": 116, "df_freq": [1, 2, 8, 9, 10, 11, 68, 69, 79], "df_freq_pl": [1, 10, 68, 69], "df_get_no_faulty_measur": [46, 115], "df_impacting_turbin": [46, 50, 116, 117], "df_in": [13, 16, 57, 58, 59, 115], "df_list_in": [5, 6], "df_mark_turbdata_as_faulti": 46, "df_metmast": 115, "df_metmast_raw": [115, 116], "df_movavg": 115, "df_movingaverag": [57, 115], "df_name": [1, 2, 5, 6, 10, 11, 68, 69, 77], "df_names_subset": [8, 9], "df_opt": [94, 95], "df_out": [83, 87, 88, 116, 117], "df_pow_curv": 115, "df_pow_ref_mapping_func": [44, 45, 116, 117], "df_raw": [3, 4], "df_re": 113, "df_reduce_precis": [13, 115], "df_resample_by_interpol": [57, 113], "df_result": [8, 9], "df_scada": [83, 86, 100, 104, 115, 116, 117], "df_scada_600s_wspowfilt": [115, 116], "df_scada_data_600s_filtered_and_northing_calibr": 116, "df_scada_filt": 115, "df_scada_format": 115, "df_scada_homogen": 117, "df_scada_marked_faulty_northing_drift": [116, 117], "df_scada_non_homogen": 117, "df_scada_northing_calibr": 116, "df_scada_northing_calibrated_interturbine_filt": [116, 117], "df_scada_northing_uncalibr": 116, "df_scada_raw": [115, 116], "df_sort_and_find_dupl": 13, "df_sort_and_fix_dupl": 13, "df_upstream": [3, 4, 13, 26, 28, 29, 32, 33, 37, 38, 40, 42, 43, 83, 92, 116, 117], "df_wakesteering_noisy_pd": 118, "df_windup": 120, "df_ws_mapping_func": [44, 45, 116, 117], "dfm": [115, 116, 117, 119], "dic": [100, 101, 102], "dict": [8, 9, 10, 11, 63, 96, 97, 100, 101, 102], "dictionari": [8, 9, 10, 96, 97, 98, 100, 101, 102, 120], "dictrionari": 120, "differ": [13, 18, 25, 44, 45, 46, 47, 55, 56, 68, 72, 83, 84, 113, 115, 117, 118, 119, 125], "differenti": [13, 25], "digit": [113, 120], "dimens": [62, 63, 94, 95], "dimension": [83, 90], "direciton": [83, 90], "direct": [1, 2, 3, 4, 8, 9, 10, 11, 13, 20, 26, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 50, 55, 56, 65, 66, 67, 68, 72, 74, 77, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 100, 104, 109, 110, 111, 113, 115, 120, 125, 126], "directionm": 113, "directli": [46, 47, 68, 69, 79, 83, 84, 86, 115, 116, 117, 120, 123], "directori": [115, 116, 123], "dirt": 115, "disabl": [116, 117], "discret": [44, 45, 55, 56, 83, 92, 113], "discuss": 125, "displai": [62, 63, 117], "display_funct": 117, "display_id": 117, "displayformatt": 117, "distanc": [1, 2, 10, 11, 46, 47, 68, 72, 83, 91, 105, 108], "distinguish": [13, 25], "distribut": [3, 4, 8, 9, 117, 118], "divid": [112, 118], "do": [3, 4, 13, 16, 46, 47, 57, 59, 113, 116, 117, 123], "doc": [115, 123], "document": 113, "doe": [13, 18, 44, 45, 68, 79, 113, 115, 116, 117], "doekemeij": [114, 125], "don": 117, "done": [105, 108, 113, 115, 117, 118], "doubl": 115, "down": [46, 47, 94, 95, 116, 117], "download": [113, 121, 123], "downsampl": [57, 58, 115, 116, 125], "downstream": [96, 97, 116, 117, 119], "downtim": [46, 50], "downtimecounter_col": [62, 63], "downward": [46, 47], "dpi": [44, 45, 51, 115, 117], "draw": 117, "draw_without_rend": 117, "draw_wrapp": 117, "drawn": [46, 47], "drift": [116, 117], "driven": 122, "drop": [13, 14, 113, 115], "dsf22": 125, "dt": [105, 106], "dtype": [115, 118, 119], "duc": [55, 117], "due": [83, 93, 113, 115], "dumb": [118, 119], "duplic": [13, 17, 18], "duplicate_entries_idx": [13, 17], "dure": [46, 47, 113], "dwd_opt": [96, 99], "dx": [83, 89, 92], "dy": [83, 89, 92], "dy_ev": [96, 99, 116, 117], "e": [13, 18, 44, 45, 46, 47, 50, 83, 89, 90, 93, 105, 108, 113, 114, 115, 116, 117, 120, 123, 125], "each": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 44, 45, 46, 47, 48, 50, 53, 54, 68, 72, 77, 83, 85, 87, 88, 89, 90, 92, 100, 104, 109, 111, 112, 113, 115, 116, 117, 118, 120], "easi": 113, "easiest": 121, "edg": [68, 72, 74, 76, 78, 80], "edgecolor": 117, "edit": 123, "effect": [3, 4, 46, 47, 117, 125], "effici": [13, 16, 113, 125], "either": [68, 69, 113, 116, 117], "element": [1, 2, 5, 7, 10, 11, 83, 90, 96, 99], "elimin": [83, 93], "els": [115, 116, 117], "email": 125, "emgauss": [109, 110, 111], "empir": [83, 92, 116, 117], "empti": [83, 90], "enabl": [68, 72, 83, 92], "encod": 125, "encount": [116, 117], "encourag": 121, "end": [46, 47, 94, 95, 96, 98, 100, 101, 114, 115, 116, 117, 126], "energi": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 44, 45, 68, 72, 81, 82, 83, 93, 112, 113, 116, 117, 122, 125, 126], "energy_ratio": [118, 119], "energy_ratio_input": [118, 119], "energy_ratio_wd_bias_estim": [116, 117], "energyratioin": 118, "energyratioinput": [1, 2, 5, 8, 9, 10, 11, 44, 45, 118, 119], "energyratiooutput": [1, 2, 8, 10, 11], "enforc": 113, "engi": [55, 117], "engin": 114, "ensur": [83, 93, 100, 103], "entir": [83, 92, 93, 113, 116, 117], "entri": [13, 14, 18, 44, 45, 46, 47, 49, 83, 87, 88, 105, 106], "enumer": 115, "env": 123, "environ": 123, "equal": [1, 2, 10, 11, 13, 15, 17, 18, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 68, 74, 76, 78, 80, 83, 89, 93, 94, 95, 116, 117, 118], "equip": 113, "equival": 115, "er_in": [1, 2, 8, 9, 10, 11, 68, 79, 118, 119], "er_n_btstrp": [44, 45, 116, 117], "er_out": [118, 119], "er_out_2": 119, "er_out_3": 119, "er_wd_bin_width": [44, 45, 116, 117], "er_wd_step": [44, 45, 116, 117], "er_ws_step": [44, 45, 116, 117], "erp": [118, 119], "error": [1, 2, 62, 63, 83, 86, 96, 99, 115], "especi": [83, 86], "essenti": [44, 45, 83, 88], "estim": [3, 4, 44, 45, 46, 47, 55, 83, 86, 96, 97, 105, 106, 113, 122, 125], "estimate_biases_with_reference_wd": [116, 117], "estimate_dt": 105, "estimate_heterogen": [3, 4], "estimate_ti": 96, "estimate_wd_bia": [44, 45, 116, 117], "estimate_ws_with_flori": 83, "et": [44, 45, 114, 125], "etc": 115, "evalu": [44, 45, 83, 84, 85, 89, 96, 97, 98, 99, 113, 116, 117], "even": [13, 16, 46, 47, 115], "everi": [46, 47, 68, 79, 83, 92, 113, 116, 117], "everyth": 123, "exact": [46, 47, 113], "exactli": 113, "exampl": [46, 47, 49, 83, 85, 86, 93, 109, 115, 116, 117, 118, 120, 123, 125, 126], "examples_artifical_data": 113, "examples_artificial_data": [114, 121], "examples_smarteol": 121, "exce": [115, 116, 117], "excel": 113, "except": [13, 18, 68, 79, 117], "exclud": [13, 26, 28, 32, 37, 40, 42, 117], "exclude_column": [46, 49], "exclude_turb": [13, 26, 28, 32, 37, 40, 42], "exhaust": 113, "exist": [113, 116], "exist_ok": 115, "expand": [83, 85], "expect": [62, 63, 100, 104, 118], "experi": [116, 117, 121, 122, 125], "experienc": [46, 47], "explicit": [1, 2, 10, 11], "explicitli": 115, "explor": [55, 56, 113, 115], "expon": [109, 110], "export": 113, "export_to_windup_format": [62, 63, 120], "expr": [68, 80], "express": [68, 80], "extern": 113, "extra": [1, 2, 10, 11, 13, 15, 117], "extract": [83, 87, 88], "extractal": 115, "extrapol": 105, "extrapolate_ti": [83, 93], "extrapolate_w": [83, 93], "f": [115, 116, 117, 118, 119], "face": 118, "facecolor": 117, "facilit": [44, 45], "factor": [13, 16, 113], "fail": 117, "fair": [83, 93, 116, 117], "fairli": 113, "fall": [83, 93], "fals": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 16, 22, 29, 33, 35, 38, 43, 44, 45, 46, 47, 51, 52, 55, 56, 57, 58, 59, 62, 63, 68, 73, 74, 75, 76, 77, 83, 85, 86, 90, 91, 92, 96, 97, 98, 105, 108, 113, 115, 116, 117, 118, 119], "far": [46, 47], "farm": [3, 4, 44, 45, 46, 47, 83, 87, 88, 89, 90, 92, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 122, 125], "fashion": [83, 93, 105, 108], "fast": [46, 47], "faster": 113, "fault": [46, 47, 50, 51, 52, 113, 125], "fault_ratio": 115, "faulti": [46, 47, 48, 49, 50, 113, 115, 116, 117], "faults_by_layout": 115, "faulty_turbin": [116, 117], "fdf": 120, "fdf_flasc": 120, "fdf_user": 120, "feather": [62, 63, 113, 125], "featur": 115, "feed": 115, "felt": 115, "few": 120, "fi": [46, 50, 115, 117], "fi_pci": 117, "field": [121, 122, 125], "fig": [46, 47, 115, 117, 118, 119], "fig_format": 51, "fig_out": 115, "figsiz": [115, 117, 119], "figur": [3, 4, 8, 9, 44, 45, 46, 47, 51, 52, 53, 54, 113, 115, 116, 117], "figure_manag": 117, "figure_save_path": [115, 116, 117], "figurecanvasbas": 117, "file": [13, 15, 113, 116, 117, 125], "file_path": [118, 119], "filenam": [115, 117], "fill": [13, 15, 18, 83, 89, 105, 108], "filt": [115, 116, 117], "filter": [13, 19, 20, 21, 68, 81, 82, 116, 117, 122, 125], "filter_all_nul": 68, "filter_any_nul": 68, "filter_by_condit": [46, 47, 115], "filter_by_floris_power_curv": [46, 47], "filter_by_power_curv": [46, 47, 113, 115], "filter_by_sensor_stuck_fault": [46, 47, 115], "filter_by_ws_pow_curv": 115, "filter_df_by_faulty_impacting_turbin": [46, 116, 117], "filter_df_by_ti": 13, "filter_df_by_w": 13, "filter_df_by_wd": 13, "filter_for_faults_in_impacting_turbin": [116, 117], "filters_over_time_": 115, "filterwarn": [116, 117], "final": [13, 37, 38, 113, 116, 125], "find": [13, 15, 17, 51, 52, 83, 91, 93, 96, 98, 99, 113, 116, 117], "find_sensor_stuck_fault": 51, "find_timeshift_between_df": 96, "finish": [116, 117], "finit": [83, 93], "first": [1, 2, 10, 11, 83, 87, 109, 111, 113, 115, 116, 117, 118], "first_clean_turbid": [116, 117], "firstli": 113, "fit": [83, 86], "five": 113, "fix": 117, "fixm": 117, "flag": [46, 47, 49, 83, 90, 113, 115, 116, 117], "flasc": [112, 113, 114, 116, 118, 119, 123, 124], "flasc2024": 125, "flasc_datafram": 112, "flasc_filt": 115, "flascdatafram": [5, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 83, 86, 93, 96, 98, 100, 103, 104, 105, 107, 112, 115, 117, 118, 119], "flascfilt": [46, 113, 115], "flatten": [57, 61, 118, 119], "flatten_col": 57, "fleme": [124, 125], "float": [1, 2, 3, 4, 8, 9, 10, 11, 13, 15, 19, 20, 21, 24, 26, 29, 33, 35, 38, 40, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 60, 65, 67, 68, 72, 74, 76, 77, 79, 83, 84, 87, 88, 89, 90, 91, 92, 94, 95, 96, 99, 105, 108, 109, 110, 111, 116, 117], "float32": [13, 16, 115], "float64": [13, 16, 55, 115], "flopt": [116, 117], "flori": [0, 3, 4, 12, 44, 45, 46, 47, 53, 54, 64, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 100, 103, 104, 109, 110, 111, 113, 115, 120, 122, 123, 125], "floris_input_artifici": [118, 119], "floris_model": [116, 117], "floris_tool": [13, 26, 28, 29, 32, 33, 37, 38, 40, 42, 43, 46, 50, 116, 117], "florismodel": [46, 47, 83, 85, 86, 87, 88, 89, 90, 92, 96, 97, 100, 104, 109, 110, 111, 116, 117, 118, 119], "flow": [3, 4, 83, 92, 115, 118], "flush_figur": 117, "fm": [3, 4, 46, 47, 53, 54, 83, 85, 86, 89, 92, 96, 97, 115, 116, 117, 118, 119], "fm_in": [83, 87, 88, 90, 100, 104, 116, 117], "fm_path": [118, 119], "fmin": [96, 97], "fmt": 117, "fn_approx": 116, "folder": [115, 116, 123], "follow": [1, 2, 10, 11, 44, 45, 65, 67, 83, 86, 96, 97, 98, 99, 113, 115, 120, 121, 123], "form": [83, 93, 113], "format": [44, 45, 46, 47, 48, 49, 50, 62, 63, 105, 106, 116, 117, 119, 125], "format_dict": 117, "formatt": 117, "former": [13, 17], "forth": 120, "found": [46, 47, 83, 90, 113, 115, 120, 121, 125], "fout": [115, 116], "fp": [105, 108], "fraction": [83, 87, 88, 90], "frame": [83, 92, 125], "freestream": [83, 92, 115, 116, 117], "freq": 117, "freq_val": [1, 2, 10, 11], "frequenc": [1, 2, 8, 9, 10, 11, 68, 69, 79], "from": [1, 2, 3, 4, 10, 11, 13, 16, 26, 29, 33, 35, 37, 38, 40, 43, 44, 45, 46, 47, 55, 62, 63, 68, 69, 72, 79, 81, 82, 83, 84, 85, 86, 89, 91, 93, 94, 95, 100, 101, 105, 108, 113, 115, 116, 118, 119, 121, 123, 125, 126], "front": [113, 118, 119], "frozen": [46, 47], "fsc": [116, 117], "fto": 116, "ftool": [46, 50, 116, 117], "ftp": 113, "ftr": 116, "full": [94, 95, 120], "fun": 117, "func": 117, "function": [1, 5, 10, 13, 15, 17, 18, 25, 44, 45, 46, 47, 51, 53, 55, 57, 65, 68, 69, 72, 77, 79, 83, 84, 85, 86, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 109, 112, 113, 116, 117, 118, 119, 120, 125, 126], "further": [13, 15, 16, 113, 116, 125], "furthest": [83, 91], "futur": 115, "futurewarn": 115, "g": [44, 45, 46, 47, 83, 90, 93, 113, 114, 115, 116, 117, 120], "gap": [13, 15, 57, 60, 105, 108, 113], "gather": [46, 47], "gaussian": [83, 84, 125], "gcf": 117, "gch": [109, 110, 111, 118, 119], "gener": [3, 4, 5, 7, 13, 26, 28, 29, 32, 33, 37, 38, 40, 42, 43, 46, 47, 48, 49, 68, 74, 76, 83, 84, 93, 112, 113, 115, 121], "generate_block_list": 5, "generate_floris_hetmap": [3, 4], "genrpm_col": [62, 63], "genrpmmean": 120, "geometr": [83, 89], "get": [5, 6, 13, 22, 23, 44, 45, 46, 48, 55, 56, 83, 87, 88, 89, 90, 94, 95, 100, 101, 105, 107, 115, 116, 117], "get_agg_filt": 117, "get_all_dependent_turbin": 83, "get_all_fig_manag": 117, "get_all_impacting_turbin": [46, 50, 83, 116, 117], "get_all_impacting_turbines_geometr": 83, "get_bias_for_single_turbin": [116, 117], "get_column_mean": 13, "get_dependent_turbines_by_wd": [83, 87, 88], "get_df": [5, 6, 46, 47, 115], "get_gid": 117, "get_ipython": 117, "get_num_turbin": [13, 105, 115, 116, 117], "get_power_curv": [46, 47], "get_real_method": 117, "get_turbine_pow": [117, 118, 119], "get_turbs_in_radiu": [83, 116, 117], "get_upstream_turbs_flori": [13, 26, 28, 29, 32, 33, 37, 38, 40, 42, 43, 83, 116, 117], "get_yaw_angles_interpol": 94, "getattr": 117, "getcwd": [115, 116], "getvalu": 117, "gid": 117, "git": 123, "github": [122, 123, 125], "give": [1, 10, 68, 78, 123], "given": [1, 2, 10, 11, 13, 24, 55, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 78, 80, 96, 97, 120], "go": [46, 47, 62, 63], "goe": 115, "gone": 113, "gonzalez": [55, 117], "gonz\u00e1lez": [55, 117], "good": [83, 92, 113, 116, 117, 121], "gov": [124, 125], "grab": [46, 47, 116], "greater": [68, 74, 76, 78, 80], "green": [113, 116, 117], "grid": [83, 85, 93, 116, 118, 119], "gridlin": 117, "group": [68, 69, 77], "groupbi": 113, "guess": [116, 117], "gui": 113, "h": [96, 98], "ha": [1, 2, 10, 11, 13, 24, 44, 45, 62, 63, 68, 72, 83, 84, 92, 93, 96, 98, 113, 115, 116, 117, 120, 124], "half": [1, 2, 10, 11, 115], "halfwai": 117, "hand": [46, 47, 83, 93, 109, 110, 111], "handl": [57, 59, 62, 63, 65, 66, 68, 77], "happen": [46, 47, 117, 120], "hard": 115, "has_imag": 117, "hashabl": 63, "have": [3, 4, 13, 14, 18, 46, 47, 83, 84, 87, 89, 90, 92, 113, 115, 116, 117, 120, 125], "head": [113, 115, 116, 117, 119, 120], "heavili": 113, "help": [3, 4, 46, 47, 125], "helper": 120, "henc": [13, 15, 46, 47, 115, 116, 117], "here": [62, 63, 113, 115, 116, 117, 118], "heterogen": [3, 4], "heterogeneity_mapp": 3, "hidden": 118, "high": [46, 47, 49, 113, 115], "higher": [46, 47, 94, 95, 113], "highest": [83, 93], "highlight": [46, 47], "histor": [83, 93, 114, 120, 122, 125], "histori": [46, 47, 118, 119], "hoger": 55, "hold": [5, 6, 13, 15], "home": [115, 117], "homegin": 117, "homogen": [55, 56, 117], "homogenize_hog": [55, 117], "hostedtoolcach": 117, "hour": [13, 24, 113], "hous": [122, 125], "how": [1, 2, 10, 11, 65, 66, 68, 79, 113, 114, 115, 118, 119, 125], "howev": [83, 84, 86, 113, 116, 117, 118], "html": 115, "http": [118, 123, 125], "hypothes": [44, 45], "hypothet": 117, "hz": 115, "i": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 18, 24, 26, 29, 33, 35, 37, 38, 40, 43, 44, 45, 46, 47, 49, 50, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 72, 74, 76, 78, 79, 80, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126], "ic": 115, "id_var": 120, "idea": [44, 45], "identifi": [46, 47, 48, 49, 113, 115], "idx": [100, 102], "ignor": [1, 2, 10, 11, 13, 15, 113, 116, 117], "ii": [115, 116, 117], "illustr": 118, "imag": 117, "image_group": 117, "impact": [46, 50, 83, 88, 89, 116, 117, 125], "impacting_turbin": [83, 89], "implement": [46, 47, 83, 86, 117], "implicitli": [83, 93], "import": [13, 15, 46, 50, 113, 117, 118, 119, 120, 123, 125], "in_flasc_format": [62, 63], "includ": [1, 2, 10, 11, 13, 29, 33, 35, 38, 43, 46, 47, 65, 67, 83, 84, 91, 100, 117, 118, 120, 125], "include_itself": [13, 29, 33, 35, 38, 43, 83, 91, 116, 117], "inclus": 113, "incompat": 115, "inconsequ": 113, "inconsist": [113, 116, 117], "incorpor": [94, 95], "increas": [83, 85, 115, 116, 117], "ind_offset": 117, "index": [10, 13, 17, 18, 46, 47, 57, 58, 59, 100, 102, 120], "index_arrai": 51, "index_fault": 51, "indic": [13, 15, 17, 24, 25, 26, 28, 29, 32, 33, 37, 38, 40, 42, 43, 46, 47, 50, 51, 52, 53, 54, 68, 79, 115], "individu": [46, 47, 113, 116, 117], "inflow": [3, 4, 46, 50, 83, 85, 93, 109, 110, 111, 120], "influenc": [83, 90], "inform": [3, 4, 46, 47, 50, 57, 60, 62, 63, 83, 85, 86, 93, 113, 116, 117, 124], "inher": 125, "initi": [44, 45, 117], "inject": 117, "inlin": 115, "inlinebackend": 117, "inplac": [62, 63, 115, 120], "input": [5, 6, 13, 14, 24, 25, 57, 58, 59, 60, 61, 65, 66, 68, 69, 77, 79, 94, 95, 105, 108, 116, 117, 119, 126], "insert": [13, 15, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 115, 116, 117], "insid": 125, "inspect": [46, 47], "instanc": [44, 45, 117], "instanti": 120, "instead": [1, 2, 68, 77, 79, 113, 115, 117], "instruct": [118, 121], "int": [1, 2, 5, 6, 7, 8, 9, 10, 11, 13, 17, 22, 23, 26, 27, 28, 29, 31, 32, 33, 35, 36, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 62, 63, 65, 66, 67, 68, 77, 79, 83, 87, 88, 90, 91, 96, 97, 98, 100, 102, 105, 107, 117], "int16": [13, 16], "int32": [13, 16], "int64": 115, "int8": [13, 16], "integ": [5, 7, 13, 16, 46, 47, 109, 111], "intend": 122, "intens": [13, 19, 27, 30, 31, 32, 44, 45, 83, 85, 93, 96, 97, 115, 116, 117, 125], "intention": 121, "inter": [46, 50], "interact": [113, 115, 123], "interest": [13, 26, 29, 33, 35, 38, 40, 43, 46, 47, 50, 83, 87, 88, 89, 90, 92, 123], "interfac": [115, 116, 125], "intermedi": [13, 37, 38], "intern": [46, 47, 113, 115], "interp_method": [57, 60, 113], "interp_with_max_gap": 105, "interpol": [13, 15, 57, 60, 83, 93, 94, 95, 105, 108, 113, 116, 117, 125], "interpolate_floris_from_df_approx": 83, "introduc": [120, 121], "invalid": 113, "investig": [46, 47], "io": 113, "ip": 117, "ipynb": 121, "ipython": 117, "irregular": [83, 93], "irregularli": 115, "is_dai": [13, 24, 25], "is_day_or_night": 13, "is_operation_norm": [46, 47, 115], "is_operation_normal_": [46, 47, 113, 115], "is_operation_normal_000": [113, 115], "is_operation_normal_001": 115, "is_operation_normal_002": 115, "is_operation_normal_003": 115, "is_operation_normal_004": 115, "is_operation_normal_005": 115, "is_operation_normal_006": 115, "isna": 115, "issu": [46, 47, 50, 83, 93, 113, 115, 116, 117], "item": [100, 101, 102, 115], "iter": [44, 45, 46, 47, 68, 79, 115, 116, 117, 118], "iterat": [44, 45, 46, 47, 49], "its": [13, 18, 44, 45, 46, 47, 109, 111, 113, 116, 117, 120, 122, 123], "itself": [3, 4, 83, 91, 118], "j": [96, 97, 98, 125], "j_opt": [96, 97, 98, 99], "jensen": [109, 110, 111], "join": [115, 116, 117], "journal": 125, "jump": [13, 15, 55, 56, 116, 117], "jupyt": [62, 63, 115, 123], "just": [46, 47, 117], "k": 117, "keep": [62, 63, 115, 116, 118], "kei": [96, 97, 98, 100, 101, 102, 114], "keyboardinterrupt": 117, "kind": [105, 108], "king": 125, "knot": [55, 56, 117], "knot_dat": 117, "know": [46, 50, 116, 117, 118, 119, 121, 125], "knowledg": [116, 117], "known": [46, 47, 113], "kw": [46, 47, 115, 117], "kwarg": [62, 63, 117], "kwsyntax": 117, "label": [8, 9, 46, 47, 68, 78, 115, 117, 118, 119], "label1": 117, "label2": 117, "lag": [13, 24], "lag_hour": [13, 24], "larg": [13, 15, 44, 45, 83, 85, 93, 113, 115, 116, 122, 125], "larger": [13, 15, 44, 45, 105, 108], "largest": [68, 74, 76, 78, 80, 113], "last": [55, 56, 83, 93, 116, 117], "lat": [83, 91], "later": 117, "latex": 125, "latitud": [13, 24], "layout": [3, 4, 113], "layout_i": [115, 116, 117, 118, 119], "layout_visu": [117, 118, 119], "layout_x": [115, 116, 117, 118, 119], "layoutviz": [118, 119], "learn": [83, 86], "least": [46, 47, 48, 83, 89, 93, 116, 117, 125], "leav": 55, "left": [46, 47, 68, 74, 76, 78, 80, 83, 84, 115], "legend": [46, 47, 117, 118, 119], "len": [116, 117, 118, 119], "length": [1, 2, 5, 7, 10, 11, 44, 45, 83, 89, 94, 95, 117], "less": [1, 2, 10, 11, 68, 74, 76, 78, 80], "let": [116, 117, 119], "level": [57, 61, 64, 83, 90, 113, 117, 125], "leverag": 125, "lgd": [46, 47], "li": [116, 117], "lib": 117, "librari": [113, 115], "like": [13, 26, 28, 32, 37, 40, 42, 46, 47, 49, 50, 68, 74, 76, 78, 80, 83, 93, 115, 116, 117, 123], "limit": [3, 4, 13, 15, 46, 47, 116], "limit_numb": [83, 87, 88, 90], "line": [44, 45, 113, 115, 116, 117], "line2d": 117, "linear": [57, 60, 83, 89, 92, 93, 105, 108, 113], "linearli": [83, 93, 94, 95, 105, 108], "linearndinterpol": [94, 95], "linspac": 117, "lint": 123, "list": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 17, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 105, 106, 109, 111, 115, 116, 117, 118], "listcomp": 117, "literatur": [44, 45, 113], "ll": 118, "load": [44, 45, 109, 110, 111, 115, 116, 125], "load_data": [115, 116], "load_flori": [115, 116, 117], "load_floris_artifici": [109, 115, 116, 117], "load_floris_smarteol": 109, "loc": [83, 87, 88, 115], "local": [83, 93, 113, 116, 117, 123], "locat": [13, 24, 26, 29, 33, 35, 38, 40, 43, 83, 86, 91, 100, 103, 113], "log": [113, 117], "loggingmanag": 45, "logic": 115, "long": [1, 2, 10, 11, 62, 63, 83, 91, 113, 117], "long_data_column": [62, 63, 120], "longer": [46, 47, 113], "longitud": [13, 24], "look": [13, 15, 46, 47, 113, 115, 116, 117], "lookup": 94, "loop": [83, 87, 88], "lope": [55, 117], "loss": [13, 16, 44, 45, 83, 89, 92, 116, 122, 125], "lost": [62, 63], "lot": 113, "low": [46, 47, 49, 115], "lower": [13, 19, 20, 21, 44, 45, 83, 92, 94, 95, 113, 115], "lowest": [83, 93], "m": [46, 47, 83, 85, 87, 88, 90, 93, 94, 95, 113, 115, 116, 117, 118, 119, 125], "m_pow_lb": [46, 47], "m_pow_rb": [46, 47, 115], "m_ws_lb": [46, 47], "m_ws_rb": [46, 47], "machin": [116, 117], "made": [83, 93, 113, 123], "magnitud": [83, 88, 90], "mai": [3, 4, 46, 47, 83, 90, 92, 93, 113, 115, 116, 117, 120], "mailto": 125, "main": [112, 113, 126], "mainten": [46, 47, 113], "make": [13, 16, 46, 47, 83, 93, 113, 115, 116, 117, 118, 119, 120], "makedir": 115, "mani": [115, 116, 117, 118, 119], "manipul": [13, 62, 63, 115, 116], "manner": 113, "map": [3, 4, 8, 9, 57, 58, 115, 120], "mark": [13, 15, 46, 47, 49, 83, 87, 88, 90, 115, 116, 117], "markeredgewidth": 115, "markerfacecolor": 115, "markers": 115, "mask": [44, 45], "mast": [113, 116, 117, 125], "match": [83, 86, 96, 99, 100, 103, 116, 117], "match_y_curves_by_offset": [96, 113, 116, 117], "matplotlib": [13, 25, 46, 47, 115, 116, 117, 118, 119], "matplotlib_inlin": 117, "matrix": [116, 117], "max": [1, 2, 10, 11, 57, 58, 59, 115, 125], "max_depth": [55, 56], "max_gap": [57, 60, 105, 108, 113], "max_open_warn": 115, "max_radiu": [13, 29, 33, 35, 38, 43, 83, 91, 116, 117], "max_wd": [65, 67], "maxim": [117, 125], "maximum": [1, 2, 10, 11, 13, 29, 33, 35, 38, 43, 55, 56, 57, 59, 60, 65, 67, 68, 72, 74, 76, 77, 79, 83, 91, 94, 95, 105, 108, 113, 116, 117], "maximum_yaw_angl": [94, 95], "md": 117, "md_dict": 117, "mean": [1, 2, 10, 11, 13, 22, 26, 28, 29, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 65, 66, 67, 83, 92, 93, 94, 95, 96, 99, 109, 110, 111, 113, 115, 116, 117], "mean_wd": [65, 67], "measur": [13, 15, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 96, 97, 113, 115, 117, 119, 125], "measurement_arrai": 51, "meddlesom": [62, 63], "median": [46, 47, 57, 58, 59, 60, 65, 67, 113, 115, 125], "median_farm_power_curv": 115, "median_wd": [65, 67], "melt": 120, "member": 118, "memori": 115, "merg": [13, 15, 18], "messag": [116, 117], "met": [46, 47, 49, 113, 116, 117, 125], "metadata": [62, 63, 117, 120], "method": [1, 2, 4, 6, 8, 9, 10, 11, 13, 45, 46, 47, 55, 57, 60, 63, 68, 69, 83, 86, 93, 105, 108, 113, 115, 117, 120, 125], "metmast_col": 113, "metric": 114, "michael": [124, 125], "mid_point": 117, "mimag": 117, "min": [1, 2, 10, 11, 57, 58, 59, 68, 69, 125], "min_period": [57, 58, 59], "min_wd": [65, 67], "minim": [83, 92, 96, 98, 99, 117], "minimum": [1, 2, 10, 11, 57, 58, 59, 65, 67, 68, 69, 74, 76, 77, 79, 94, 95, 116, 117, 118, 119], "minimum_yaw_angl": [94, 95], "minut": [46, 47, 113, 115, 116], "mirror_nan": [83, 93], "misalign": 125, "misc": 125, "miscalibr": 125, "miss": [13, 15, 100, 103], "missing_data_buff": [13, 15], "mode": [55, 109, 111, 115, 116, 117], "model": [55, 83, 86, 87, 88, 89, 90, 92, 93, 100, 109, 110, 111, 113, 114, 115, 116, 120, 122, 125], "model_fit": 121, "modifi": [62, 63, 68, 69], "modul": [0, 1, 3, 5, 10, 12, 13, 44, 51, 53, 55, 62, 83, 84, 94, 96, 100, 105, 118, 121, 123, 125], "monitor": [116, 122, 125], "monoton": 105, "month": 113, "more": [13, 16, 46, 47, 50, 83, 92, 113, 114, 115, 120, 121, 123, 124, 125], "most": [55, 56, 113, 116, 117], "move": [57, 59, 125], "much": [13, 16, 115], "mudafort": 125, "multi": [57, 61], "multimod": 117, "multipl": [3, 4, 46, 47, 113, 114, 116, 117, 125], "multipli": [46, 47], "must": [1, 2, 10, 11, 113, 116, 117], "mw": 115, "n": [1, 2, 5, 7, 8, 9, 10, 11, 13, 26, 40, 68, 79, 96, 97, 115, 118, 119, 120], "n_btstrp": [44, 45], "n_consecutive_measur": [46, 47, 51, 52, 115], "n_eval_max": 51, "n_isnan": [46, 48], "n_turbin": [62, 63, 115, 117, 120], "nacel": [113, 115, 116, 117], "nacti_": 115, "nacwdir_": 115, "nacwindspe": 113, "nacwindspeed_a1": 113, "nacwindspeed_a2": 113, "nacwindspeed_a3": 113, "nacwspeed_": 115, "name": [1, 2, 8, 9, 10, 11, 13, 24, 44, 45, 46, 47, 48, 68, 70, 71, 73, 74, 75, 76, 78, 79, 80, 113, 115, 117, 118, 120, 123], "nan": [13, 14, 15, 18, 46, 47, 49, 50, 53, 54, 65, 66, 83, 93, 100, 103, 105, 108, 113, 115, 116, 117], "nan_polici": [65, 66], "nan_thrshld": [53, 54], "nativ": 120, "ndarrai": [13, 22, 55, 57, 58, 68, 72, 74, 76, 78, 80], "nearest": [13, 26, 68, 72, 83, 93, 105, 108], "necessari": 115, "necessarili": [44, 45], "need": [13, 16, 62, 63, 83, 87, 88, 90, 113, 116, 117, 118], "neg": [113, 115], "neighbor": [3, 4, 83, 89, 105, 108], "nest": [100, 101, 102], "nested_get": 100, "nested_set": 100, "new": [5, 6, 8, 9, 13, 25, 46, 47, 57, 60, 62, 63, 68, 70, 71, 72, 73, 74, 75, 76, 78, 100, 103, 114, 115, 118, 123], "next": [1, 2, 10, 11, 113, 116, 117], "night": [13, 24, 25], "no_consecutive_measur": 51, "no_iter": [46, 47], "nof": [55, 56, 116, 117], "nois": [117, 119], "nomin": [44, 45, 113], "non": [13, 18, 46, 50, 94, 95, 117, 118], "none": [1, 2, 3, 4, 8, 9, 10, 11, 13, 22, 25, 44, 45, 46, 47, 49, 51, 57, 60, 62, 63, 68, 69, 74, 76, 77, 83, 87, 88, 90, 94, 95, 96, 98, 99, 100, 102, 104, 109, 110, 111, 113, 115, 116, 117], "nonetyp": [83, 87, 88, 90], "nonhomogen": 113, "nonzero": [83, 89, 113], "normal": [46, 47, 113, 116, 117, 118], "normal_oper": 115, "normal_operation_col": [62, 63], "north": [53, 54, 113, 116, 122, 125], "northing_offset": [116, 117], "northing_offset_change_hog": 117, "not_composit": 117, "note": [3, 4, 8, 9, 44, 45, 46, 47, 57, 59, 113, 115, 116, 117], "notebook": [62, 63, 115, 117, 118, 119, 121], "noth": 117, "notic": [83, 92], "notimplementederror": 117, "now": [113, 115, 116, 117, 118, 119, 120, 123], "np": [3, 4, 5, 7, 13, 22, 46, 47, 51, 52, 55, 57, 58, 60, 65, 66, 83, 85, 87, 88, 90, 96, 97, 98, 99, 100, 104, 105, 108, 115, 116, 117, 118, 119, 120], "nrel": [122, 123, 124, 125], "nturb": [83, 84, 85, 115], "null": [68, 73, 74, 75, 76, 79, 81, 82], "nullcontext": 117, "num": [118, 119], "num_block": [5, 6, 7, 118, 119], "num_bootstrap": 118, "num_df": [68, 77], "num_points_per_combin": [118, 119], "num_turbin": [115, 116, 117], "number": [1, 2, 5, 6, 7, 10, 11, 13, 22, 23, 24, 26, 27, 29, 30, 31, 33, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 57, 58, 59, 62, 63, 68, 77, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 105, 107, 112, 113, 115, 116, 117, 118, 119, 120], "numer": [46, 47, 115, 121], "numpi": [65, 66, 67, 68, 72, 83, 90, 96, 98, 115, 116, 117, 118, 119, 120], "o": [115, 116, 117], "obj": 117, "object": [1, 2, 3, 4, 6, 8, 9, 10, 11, 13, 15, 44, 45, 46, 47, 53, 54, 62, 63, 68, 80, 83, 85, 86, 87, 88, 89, 90, 92, 96, 97, 109, 110, 111, 116, 117, 118, 119], "obstruct": 115, "obtain": [55, 120], "obviou": 113, "obvious": 113, "occur": [13, 24, 46, 47, 113, 117], "odd": 115, "oem": 115, "off": [46, 47, 83, 84, 115], "offlin": [116, 117], "offset": [44, 45, 46, 47, 53, 54, 94, 95, 96, 99, 113, 116, 125], "offshor": [114, 125], "often": [46, 47, 113, 115], "omit": [65, 66], "onc": 113, "one": [1, 2, 10, 11, 13, 18, 44, 45, 46, 47, 83, 89, 113, 114, 116, 117, 125, 126], "ones_lik": 117, "onli": [3, 4, 46, 47, 83, 90, 93, 113, 117, 119], "onto": [57, 60, 113], "open": [115, 120], "open_group": 117, "oper": [3, 4, 12, 13, 16, 46, 47, 57, 68, 77, 83, 90, 92, 94, 95, 109, 111, 113, 114, 115, 116, 118], "operation_mod": [109, 111], "operational_statu": 115, "opt": [46, 47, 117], "opt_bound": [96, 98], "opt_iters_ti": [116, 117], "opt_n": [96, 98], "opt_search_brute_dx": [44, 45, 116, 117], "opt_search_rang": [44, 45, 116, 117], "opt_work": [44, 45], "optim": [44, 45, 94, 95, 113, 116, 117, 125], "option": [1, 2, 3, 4, 8, 9, 10, 11, 13, 14, 15, 16, 22, 24, 25, 29, 33, 35, 38, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 62, 63, 68, 69, 77, 83, 84, 85, 86, 89, 91, 92, 93, 94, 95, 100, 102, 104, 109, 110, 111, 114, 115, 116, 118, 123], "orang": 113, "order": [1, 2, 10, 11, 83, 87, 88, 105, 113, 121], "orient": 117, "origin": [5, 6, 55, 62, 63, 68, 72], "orrespond": [10, 11], "other": [13, 18, 24, 62, 63, 83, 90, 91, 93, 113, 115, 116, 117, 122, 125], "otherwis": [62, 63], "our": [83, 93, 113, 115, 116, 117], "out": [46, 47, 113, 118, 119], "out_path": [115, 116, 117], "outcom": [83, 92], "outer": [83, 90], "outlier": [113, 125], "output": [51, 52, 57, 59, 83, 85, 91, 96, 97, 98, 100, 104, 105, 108, 115, 117, 118, 120], "output_fil": 115, "output_notebook": 115, "outsid": [46, 47, 83, 93, 113], "over": [13, 25, 37, 38, 44, 45, 65, 66, 68, 70, 71, 73, 74, 75, 76, 83, 87, 88, 93, 113, 116, 117], "overal": [117, 120], "overlap": [1, 2, 10, 11, 68, 72, 77, 79, 117], "overlap_dist": [68, 72], "overlay_frequ": [8, 9], "overplot": 119, "overview": 120, "overwritten": [46, 47], "own": [113, 120], "p": [46, 47, 125], "p_filters_tim": 115, "p_measur": [96, 97], "p_ws_pitch": 115, "p_ws_pow": 115, "packag": [64, 83, 87, 117, 123], "pad_inch": 117, "pair": [1, 2, 10, 11, 68, 79, 118], "panda": [13, 14, 24, 46, 47, 50, 62, 63, 83, 84, 85, 86, 87, 88, 89, 92, 93, 100, 103, 113, 115, 116, 117, 120, 125], "parallel": 116, "param": [83, 93], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 118, 122, 125], "parent": 117, "part": [113, 115, 116, 117], "particular": [13, 16, 46, 47, 50, 83, 92, 114, 115], "particularli": [46, 47], "pass": [68, 79, 117, 118], "past": [94, 95], "patch": 117, "path": [3, 4, 44, 45, 62, 63, 115, 116, 117, 118, 119, 123], "pathlib": [118, 119], "paul": [55, 117, 124, 125], "pd": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 98, 100, 104, 105, 107, 113, 115, 116, 117, 120], "pdf": [3, 4], "pdf_cutoff": [83, 84], "pdf_save_path": [3, 4], "pearson": [44, 45, 96, 98, 113], "per": [1, 10, 46, 47, 115, 118, 119], "percent": [1, 2, 118], "percentag": 113, "percentil": [1, 2, 10, 11, 68, 79, 118], "perform": [44, 45, 68, 77, 105, 108, 116, 117, 122, 125], "perform_resampl": [5, 6], "perhap": [62, 63], "period": [13, 25, 46, 47, 57, 59, 113, 115, 117], "perturb": [117, 118], "physic": [46, 47], "pink": 113, "pip": 123, "pitch": 115, "pitchangle_col": [62, 63], "pitchanglemean": 120, "pkl": [115, 116], "pl": [1, 5, 6, 10, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 81, 82], "place": [62, 63, 68, 74, 76, 78, 80, 114, 120], "plai": 125, "platform": [46, 47], "pleas": [113, 115, 116, 125], "plot": [3, 4, 8, 9, 13, 25, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 83, 92, 113, 116, 117, 118, 119], "plot_background_flow": [3, 4], "plot_energy_ratio": [8, 9, 44, 45, 116, 117, 118, 119], "plot_farm_mean_power_curv": [46, 47, 115], "plot_faults_vs_layout": 115, "plot_figur": [51, 52, 53, 54, 115, 116, 117], "plot_figures_in_notebook": 116, "plot_filters_custom_scatt": [46, 47], "plot_filters_custom_scatter_bokeh": [46, 47, 115], "plot_filters_in_tim": [46, 47, 115], "plot_filters_in_time_bokeh": [46, 47, 115], "plot_filters_in_ws_power_curv": [46, 47, 115], "plot_graph": [3, 4], "plot_it": [55, 56], "plot_iter_path": [44, 45, 116, 117], "plot_layout": [3, 4], "plot_lin": [83, 92], "plot_postprocessed_in_ws_power_curv": [46, 47, 115], "plot_sun_altitude_with_day_night_color": 13, "plot_turbine_label": [117, 118, 119], "plot_turbine_point": [117, 118, 119], "plot_uplift": [8, 9, 118], "plot_waking_direct": [118, 119], "plt": [13, 25, 46, 47, 115, 116, 117, 118, 119], "plu": [13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 83, 93], "png": [44, 45, 51, 115], "point": [1, 2, 10, 11, 44, 45, 46, 47, 55, 56, 57, 58, 83, 84, 105, 108, 113, 118, 119, 120], "pola": 118, "polar": [1, 8, 9, 10, 44, 45, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 114, 118, 125], "polar_plot": [8, 9], "pollut": [116, 117], "poncet": [55, 117], "pool": 115, "popul": [13, 15], "posit": [55, 56, 100, 103, 113, 120], "possibl": [13, 16, 83, 93, 113, 116, 117], "possibli": [13, 16, 68, 81, 82], "post": [83, 84, 125], "post_execut": 117, "postprocess": [13, 15, 46, 47, 50, 83, 84, 116, 125], "potenti": [13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 83, 93], "pour": 115, "pow": [13, 22, 62, 63, 113], "pow_": [13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 83, 84, 85, 113, 115, 117], "pow_000": [46, 47, 48, 50, 83, 84, 85, 93, 115, 117, 118, 119, 120], "pow_001": [46, 47, 48, 50, 83, 85, 93, 115, 117, 118, 119, 120], "pow_002": [46, 50, 115, 117, 118, 119, 120], "pow_003": [115, 117, 119], "pow_004": [115, 117], "pow_005": [115, 117], "pow_006": [83, 85, 93, 115], "pow_012": 115, "pow_deadband": [46, 47, 115], "pow_rang": 113, "pow_ref": [1, 2, 10, 11, 13, 26, 27, 28, 29, 40, 68, 70, 118, 119, 120], "pow_test": [68, 71, 120], "power": [1, 2, 10, 11, 13, 27, 28, 46, 47, 48, 49, 50, 68, 77, 83, 84, 85, 86, 87, 88, 90, 93, 96, 97, 100, 104, 109, 110, 113, 115, 116, 117, 118, 120, 125], "power_0": 119, "power_1": 119, "power_2": 119, "power_3": 119, "power_baseline_control": 118, "power_baseline_downstream": 118, "power_baseline_ref": 118, "power_col": [62, 63], "power_tb01": 120, "power_tb02": 120, "power_tb03": 120, "power_wakesteering_control": 118, "power_wakesteering_downstream": 118, "power_wakesteering_ref": 118, "practic": [114, 125], "pre": [1, 10, 118, 123], "precalcul": [83, 84, 93, 116, 117, 125], "precis": [13, 16, 46, 47, 115], "predefin": [68, 79, 119], "predict": [44, 45, 83, 84, 86, 92, 93, 113, 115, 116, 117], "prefer": [62, 63, 120], "prefix": [13, 22], "prepar": [113, 125], "present": [1, 2, 10, 11, 83, 92, 125], "prespecifi": [46, 47, 83, 91], "prevail": 115, "prevent": [83, 93], "previou": [46, 47, 113], "previous": [46, 47], "primarili": [100, 103, 113], "print": [8, 9, 13, 14, 16, 46, 47, 50, 51, 52, 57, 60, 83, 86, 93, 96, 97, 98, 115, 116, 117, 118, 119, 120], "print_figur": 117, "print_method": 117, "printer": 117, "printout": [62, 63], "prior": [113, 118], "privat": [46, 47], "probabl": [83, 84, 117], "problem": [44, 45, 46, 47, 115], "procedur": [55, 56, 113], "process": [46, 47, 57, 68, 77, 83, 84, 112, 117, 120, 125], "produc": [46, 47, 94, 95, 113, 115, 116, 117, 118, 125], "product": [10, 46, 47, 48, 49, 50, 83, 84, 85, 93, 113, 115, 116, 117, 126], "progress": [13, 14, 16, 116, 117], "project": [55, 117], "prolong": 113, "propag": 115, "properti": [62, 63, 65, 67], "provid": [1, 2, 8, 9, 10, 11, 13, 25, 46, 47, 68, 69, 83, 85, 86, 113, 114, 115, 118, 120, 121, 122, 125], "prune": [55, 56], "publish": 125, "publish_display_data": 117, "purpos": [115, 119], "put": [46, 47, 114], "pw_curve_df": 115, "py": [115, 116, 117], "pylabtool": 117, "pypi": 123, "pyplot": [46, 47, 115, 116, 117, 118, 119], "python": [113, 117, 123], "python3": 117, "pywak": [83, 93], "quantif": [44, 45], "quantifi": [122, 125], "quantiti": [13, 26, 28, 29, 32, 33, 35, 37, 38, 40, 42, 43, 57, 59, 125], "queri": [46, 47], "question": [100, 101, 102], "quickli": [83, 89, 93, 115], "quit": [118, 119], "r": [83, 91, 117, 118, 119, 125], "radiu": [13, 26, 29, 33, 35, 38, 40, 43, 68, 77, 79, 83, 91], "rais": [8, 9, 62, 63, 68, 69, 115, 116, 117], "ramp": [94, 95], "ramp_down_w": [94, 95], "ramp_up_w": [94, 95], "rand": 120, "randn": [118, 119], "random": [117, 118, 119, 120], "rang": [13, 19, 20, 21, 26, 28, 29, 32, 33, 37, 38, 40, 42, 43, 44, 45, 68, 72, 83, 92, 93, 96, 98, 99, 113, 115, 116, 117, 118, 119], "rapid": [83, 84], "rate": [46, 47], "rather": [13, 15, 46, 47, 68, 73, 74, 75, 76, 83, 86, 126], "ratio": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 44, 45, 68, 72, 81, 82, 83, 93, 112, 113, 116, 117, 122, 125, 126], "raw": [83, 93, 112, 115, 117, 125], "raw_activepowermean": 120, "raw_artificial_data": 115, "raw_data_process": 113, "raw_shutdowndur": 120, "raw_windspeedmean": 120, "raw_yawanglemean": 120, "rcparam": 115, "re": [83, 84, 86, 120, 123], "read": [46, 47], "read_csv": 115, "read_feath": 116, "read_pickl": 116, "readi": 123, "readili": 113, "readonli": 117, "real": [13, 16, 83, 92, 113, 121], "realli": [116, 117], "reason": [115, 116, 117], "recach": 117, "recalibr": 117, "receiv": [68, 69], "recent": [113, 116, 117], "recogn": 115, "recommend": [83, 93, 113, 115, 121, 123], "reconfigur": 114, "rectangular": [83, 85], "red": [113, 116, 117], "reduc": [13, 16, 113, 115], "reduct": [13, 16], "ref": [68, 81, 82], "ref_col": [1, 2, 8, 9, 10, 11, 68, 70, 77, 81, 82], "ref_turbin": [1, 2, 10, 11, 68, 79, 119], "refer": [1, 2, 10, 11, 13, 27, 55, 56, 68, 77, 79, 81, 82, 83, 92, 96, 99, 100, 103, 104, 113, 114, 116, 117, 118, 120], "refin": [94, 95, 96, 97, 116, 117], "refine_with_fmin": [96, 97], "reflect": [68, 72, 77, 79], "regard": 125, "region": [46, 47, 94, 95, 116, 117], "regress": [55, 56], "rel": [46, 47, 113, 114, 116, 117, 125], "relat": 125, "relev": [13, 24, 29, 33, 35, 38, 43, 53, 54], "reli": [113, 122, 125], "relpath": [115, 116], "remain": [114, 115], "remaind": [83, 93], "rememb": 123, "remov": [13, 14, 46, 47, 68, 73, 74, 75, 76, 77, 79, 83, 89, 96, 98, 113, 115, 116, 125], "remove_all_nul": [1, 2, 8, 9, 10, 11, 68, 73, 74, 75, 76, 77, 79], "renam": 113, "render": 117, "repeat": [5, 7, 55, 113], "replac": [13, 18, 100, 103, 123], "replic": [100, 103], "replicate_nan_valu": 100, "report": [46, 50, 113, 115], "repositori": [0, 12, 64, 121, 122, 123, 124, 125], "repres": [83, 90, 100, 103, 116, 117, 120, 125, 126], "represent": [62, 63], "requir": [1, 2, 10, 11, 46, 50, 68, 77, 81, 82, 113, 115, 120], "resampl": [5, 6, 57, 60, 96, 98, 113], "resample_energy_t": [5, 6], "rescal": 115, "research": 125, "reset": [46, 47, 113], "reset_filt": [46, 47], "reset_index": [113, 115], "resgroup": [83, 86], "resim_flori": 100, "resimul": [100, 103, 104], "resiz": 117, "resolut": [44, 45, 113, 115], "respect": [44, 45, 83, 93, 94, 95, 113, 119, 125], "result": [1, 2, 8, 9, 10, 11, 46, 47, 55, 56, 62, 63, 68, 72, 77, 83, 84, 85, 92, 105, 108, 116, 117, 118], "retain": 115, "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 120, 124, 126], "return_by_column": [51, 52], "return_index_map": [57, 58, 115], "return_influence_magnitud": [83, 90], "revers": [55, 56, 119], "review": 125, "rglope": [55, 117], "rich": [122, 125], "right": [46, 47, 68, 74, 76, 78, 80, 83, 84], "role": 125, "root": 123, "root_path": [115, 116], "rose": [83, 92, 93, 113, 114], "roughli": [116, 117, 121], "round": [113, 116, 117], "routin": [55, 56], "row": [5, 6, 13, 14, 15, 17, 18, 26, 28, 29, 32, 33, 37, 38, 40, 42, 43, 46, 50, 68, 72, 77, 83, 87, 88, 89, 90, 92, 94, 95, 116, 117, 118, 120], "rub\u00e9n": [55, 117], "run": [46, 47, 83, 84, 87, 88, 90, 113, 115, 116, 117, 118, 119], "runner": [115, 117], "runtimeerror": [68, 69], "runtimewarn": 115, "safe": [46, 47, 83, 89, 117], "salcedo": [55, 117], "same": [5, 6, 13, 18, 44, 45, 46, 47, 62, 63, 68, 72, 83, 84, 93, 100, 103, 113, 115, 118, 120], "sampl": [1, 2, 10, 11, 83, 93, 113], "save": [3, 4, 8, 9, 44, 45, 62, 63, 83, 85, 113, 117, 118, 125], "save_figur": [115, 116], "save_path": [44, 45, 51, 116, 117], "save_turbine_inflow_conditions_to_df": [83, 85], "savefig": 115, "scada": [0, 12, 44, 45, 46, 47, 48, 49, 50, 55, 56, 64, 83, 86, 92, 100, 104, 113, 114, 115, 116, 117, 122, 125], "scada_col": 113, "scalar": 117, "scale": [44, 45], "scatter": [46, 47], "scenario": [83, 93, 116, 117], "scheme": [8, 9], "scienc": 125, "scipi": [65, 66, 94, 95], "script": [113, 115, 116], "seaborn": 118, "search": [44, 45, 116, 117], "second": [1, 2, 10, 11, 13, 15, 57, 58, 59, 83, 90, 113, 115, 116, 117, 118, 119], "see": [113, 114, 115, 116, 123, 125], "seed": 117, "seem": [116, 117], "select": [113, 117], "self": [46, 47, 49, 62, 63, 113, 115, 117], "sensor": [46, 47, 51, 52, 83, 93, 113, 115, 125], "separ": [8, 9, 44, 45, 115], "sequenti": 120, "seri": [55, 117], "serial": [94, 95], "serv": [83, 92, 113], "server": 113, "set": [1, 2, 3, 4, 10, 11, 13, 24, 37, 38, 44, 45, 46, 47, 57, 60, 68, 81, 82, 83, 85, 92, 93, 94, 95, 100, 102, 113, 114, 115, 116, 118, 119, 120, 125], "set_pow_ref_by_n_closest_upstream_turbin": 13, "set_pow_ref_by_turbin": [13, 119], "set_pow_ref_by_upstream_turbin": 13, "set_pow_ref_by_upstream_turbines_in_radiu": [13, 116, 117], "set_ti_by_all_turbin": 13, "set_ti_by_turbin": 13, "set_ti_by_upstream_turbin": 13, "set_ti_by_upstream_turbines_in_radiu": 13, "set_wd_by_all_turbin": [13, 116, 117, 119], "set_wd_by_radius_from_turbin": 13, "set_wd_by_turbin": [13, 116, 117], "set_wd_by_upstream_turbin": 13, "set_wd_by_upstream_turbines_in_radiu": 13, "set_ws_by_all_turbin": 13, "set_ws_by_n_closest_upstream_turbin": 13, "set_ws_by_turbin": [13, 119], "set_ws_by_upstream_turbin": 13, "set_ws_by_upstream_turbines_in_radiu": [13, 116, 117], "set_xlabel": [117, 118, 119], "set_ylabel": [117, 118, 119], "setpoint": 115, "setup": 123, "setup_floris_model": 116, "sever": [46, 47, 117, 118], "shape": [115, 117], "share": 113, "sharex": [118, 119], "shed": [46, 50, 116, 117], "shift": [44, 45, 96, 97, 98, 113, 116, 117], "shorth": 55, "should": [1, 2, 10, 11, 13, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 57, 59, 68, 72, 83, 89, 92, 93, 105, 109, 110, 111, 113, 115, 116, 117, 120], "show": [8, 9, 44, 45, 46, 47, 50, 113, 115, 116, 118, 119], "show_uncorrected_data": [44, 45, 116, 117], "show_wind_direction_distribut": [8, 9, 118, 119], "show_wind_speed_distribut": [8, 9, 118, 119], "shown": [8, 9, 46, 47, 55, 113, 118], "shutdown": [46, 47], "shutdowndur": 120, "side": 113, "sig": 117, "signal": [13, 37, 38, 46, 47, 113, 115, 116, 117, 120], "signifi": 115, "significantli": [113, 116, 117], "similar": [113, 126], "similarli": [62, 63, 113, 115, 116, 117], "simlei": 125, "simpl": [83, 89, 118, 119], "simpler": 113, "simpli": [13, 15, 83, 88, 113, 116, 117, 120], "simplic": 117, "simplifi": [83, 89, 113], "simul": [53, 54, 83, 85, 89, 125], "sinc": [46, 47, 113, 116, 117, 118], "singl": [8, 9, 113, 126], "sinner": [124, 125], "site": 117, "situat": [46, 47, 49, 113], "size": [13, 16, 44, 45, 46, 47, 68, 74, 76, 77, 79, 83, 85, 90, 93, 117, 125], "slice": [113, 116, 117], "slightli": [44, 45, 46, 47, 83, 92], "slope": [83, 89, 92], "slow": [116, 117], "small": [116, 117], "smaller": 113, "smallest": [68, 74, 76, 78, 80, 118], "smarteol": [114, 120, 126], "sn": 118, "so": [46, 47, 50, 62, 63, 83, 92, 113, 115, 116, 117], "softwar": 125, "solut": [46, 47, 83, 84, 85, 93, 116, 117, 125], "solv": [44, 45, 115, 121], "some": [68, 69, 115, 117, 119], "someon": [13, 18], "somewher": [46, 47], "sort": [13, 17, 18, 62, 63, 83, 88, 91, 105, 115, 117], "sort_by_dist": [83, 91, 116, 117], "sort_valu": 115, "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 120, 123, 125], "source_path": 115, "space": [44, 45], "speak": 121, "special": 117, "specif": [46, 47, 48, 68, 77, 83, 93, 113, 114, 115, 120], "specifi": [1, 2, 10, 11, 13, 22, 44, 45, 46, 47, 65, 66, 68, 77, 78, 80, 83, 88, 90, 109, 111, 113, 115, 116, 117, 118, 125], "speed": [1, 2, 3, 4, 8, 9, 10, 11, 13, 16, 21, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 68, 76, 77, 79, 81, 82, 83, 85, 86, 87, 88, 90, 93, 94, 95, 100, 104, 113, 115, 116, 117, 120, 125], "sql": 113, "squar": [96, 99], "squeez": 118, "stackoverflow": [100, 101, 102], "stale": 117, "standard": [46, 47, 51, 52, 57, 59, 65, 67, 83, 84, 109, 110, 111], "start": [13, 15, 94, 95, 96, 98, 114, 116, 117, 120], "start_filt": 117, "stat": [65, 66], "state": 113, "static": 115, "statist": [65, 67, 68, 77, 96, 98], "statu": [46, 47, 49, 53, 54, 115], "std": [57, 58, 59, 125], "std_wd": [65, 67], "stddev_threshold": [46, 47, 51, 52, 115], "steer": [94, 95, 114, 118, 121, 125], "step": [1, 2, 10, 11, 13, 37, 38, 44, 45, 46, 47, 53, 54, 68, 74, 76, 77, 79, 83, 84, 92, 93, 96, 97, 98, 113, 118, 119, 121], "stepsiz": [116, 117], "still": [13, 29, 33, 35, 38, 43, 83, 91, 105, 108, 115, 120], "stop_raster": 117, "storag": [13, 16, 113, 125], "store": [8, 9, 62, 63, 116, 117, 118, 120], "str": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 22, 24, 44, 45, 46, 47, 55, 56, 57, 60, 62, 63, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 93, 100, 101, 102, 105, 108, 109, 110, 111], "straightforward": 120, "straightforwardli": 113, "streamlit": 113, "strictli": [1, 2, 10, 11], "stride_trick": 117, "string": [46, 47, 53, 54, 68, 79, 115], "strongest": [83, 87], "strongli": [113, 123], "structur": [5, 6], "stuck": [46, 47, 51, 52, 113, 115, 125], "style": 120, "subclass": [62, 63, 120], "subdirectori": 121, "submodul": 112, "subok": 117, "subplot": [115, 117, 118, 119], "subset": [8, 9, 46, 47], "subtleti": 113, "subtract": [68, 72, 113], "successfulli": 117, "suffici": [46, 50], "suggest": [46, 47], "suit": [113, 118, 122, 125], "sum": [1, 2, 10, 11, 68, 69], "sun": [13, 24, 25], "sun_altitud": [13, 24, 25], "sunris": [13, 24], "sunrise_altitud": [13, 24], "sunset": [13, 24], "sunset_altitud": [13, 24], "superfici": 55, "suppli": [119, 120], "support": [120, 125], "suppos": 120, "supposedli": [83, 89], "suppress_composit": 117, "suppresscomposit": 117, "sure": [46, 47, 113, 115, 116, 117], "surround": 113, "svg": 117, "switch": 118, "sychron": 125, "synchron": 113, "syntax": 114, "synthet": [122, 125], "system": 120, "t": [1, 2, 10, 11, 83, 87, 88, 91, 115, 117, 118, 119], "t0": [96, 98, 119], "t000": [116, 117], "t001": [116, 117], "t002": [116, 117], "t003": [116, 117], "t004": [116, 117], "t005": [116, 117], "t006": [116, 117], "t1": [96, 98, 119], "t2": 119, "t3": 119, "t_idx": 117, "t_step": [96, 98], "tabl": [5, 6, 10, 44, 45, 68, 69, 83, 85, 93, 94, 109, 110, 116, 117, 124], "take": [13, 15, 68, 77, 94, 95, 100, 104, 113, 115, 116, 117], "taken": [120, 125], "target_i": [105, 108], "tb01": 120, "tb02": 120, "tb03": 120, "td": [53, 54, 115, 116, 117], "team": [124, 125], "technic": 125, "term": [1, 2, 10, 11, 44, 45, 113], "termin": 117, "test": [1, 2, 10, 11, 44, 45, 68, 77, 79, 81, 82, 83, 90, 92, 96, 99, 113, 114, 116, 117, 118, 120], "test_col": [1, 2, 8, 9, 10, 11, 68, 71, 77, 81, 82], "test_turbin": [1, 2, 10, 11, 44, 45, 68, 79, 83, 90, 116, 117, 118, 119], "test_turbines_subset": [44, 45, 116, 117], "text": [115, 117, 118, 119], "than": [13, 15, 44, 45, 46, 47, 50, 68, 73, 74, 75, 76, 78, 80, 83, 86, 105, 108, 113, 115], "thei": [1, 2, 10, 11, 13, 29, 33, 35, 38, 43, 55, 68, 79, 113, 116, 117], "them": [46, 47, 113, 116, 117], "therebi": [83, 84, 115], "therefor": [83, 93, 113, 116], "thi": [3, 4, 5, 6, 13, 15, 16, 17, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 65, 67, 68, 69, 72, 77, 79, 83, 84, 85, 86, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 108, 113, 115, 116, 117, 118, 119, 120, 121, 123, 125], "thing": [115, 116, 122], "third": [115, 118], "thirteenth": 115, "thoma": [55, 117], "those": [1, 2, 10, 11, 46, 47, 83, 89, 92, 115, 118], "though": [83, 92, 113], "three": [83, 84, 114, 125], "threshold": [46, 47, 51, 52, 53, 54, 55, 56, 117], "through": [55, 113, 115, 116, 117, 121, 123], "throughout": [115, 116, 117, 121], "thrown": [13, 18], "thrust": [109, 110], "thu": 113, "ti": [3, 13, 27, 30, 31, 32, 33, 46, 47, 50, 51, 52, 83, 84, 85, 93, 113, 115, 116, 117, 125], "ti_": [13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 115], "ti_000": [83, 85, 115], "ti_001": 115, "ti_002": 115, "ti_003": 115, "ti_004": 115, "ti_005": 115, "ti_006": [83, 85, 115], "ti_arrai": [83, 85, 117], "ti_mask": [44, 45], "ti_rang": [13, 19], "ti_truth": 115, "tick": 117, "tick1lin": 117, "tick2lin": 117, "ticklabel": 117, "ticks_to_draw": 117, "tie": 117, "tight": 117, "tight_layout": 115, "tile": 117, "time": [5, 7, 13, 14, 15, 17, 18, 24, 25, 44, 45, 46, 47, 48, 53, 54, 55, 57, 58, 59, 60, 62, 63, 83, 93, 96, 97, 98, 105, 106, 113, 115, 116, 117, 118, 119, 120], "time_arrai": [57, 60, 105, 106, 113], "time_col": [62, 63], "time_mask": [44, 45, 116, 117], "time_oper": [113, 116], "time_seri": [117, 118], "timedelta": [53, 54, 57, 58, 59, 105, 106, 116, 117], "timedelta64": [96, 98], "timeseri": [83, 93, 116, 117, 118, 119, 125], "timeshift": [113, 125], "timestamp": [13, 24, 46, 47, 50, 113, 115], "timestamp_startformat": 120, "timestep": [57, 60, 105, 106], "timezon": 113, "titl": [46, 47, 115, 118, 119, 125], "tlb1": 117, "tlb2": 117, "tn": 115, "to_csv": 115, "to_datetim": [44, 45, 115], "to_feath": [62, 63], "to_pickl": [115, 116], "todo": [62, 63], "togeth": 117, "too": [46, 47, 62, 63, 115, 116, 117], "took": 117, "tool": [83, 93, 113, 117, 120, 121, 122, 123, 125], "toolbox": [113, 122], "top": [46, 47, 64, 115], "total": [10, 116, 117, 125], "toward": 113, "traceback": [116, 117], "track": 117, "transient": 117, "transit": [94, 95, 118], "travers": [100, 101, 102], "treat": [57, 59], "tree": [55, 56], "trend": [46, 47], "tri": 118, "true": [1, 2, 5, 6, 8, 9, 10, 11, 13, 16, 33, 35, 38, 43, 46, 47, 50, 51, 52, 53, 54, 57, 58, 59, 60, 62, 63, 65, 67, 68, 77, 83, 85, 90, 93, 96, 98, 99, 105, 108, 113, 115, 116, 117, 118, 119, 120], "trust": 113, "try": [46, 47, 115, 117], "tune": 100, "tupl": [1, 2, 3, 4, 10, 11, 44, 45, 46, 47, 55, 56, 57, 58, 65, 67, 68, 69, 83, 90, 96, 99, 117], "turb_no": [13, 26, 29, 33, 35, 38, 40, 43, 83, 91, 116, 117], "turb_wd_consist": [116, 117], "turbin": [1, 2, 3, 4, 10, 11, 13, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 62, 63, 68, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 104, 105, 107, 109, 111, 114, 115, 119, 120, 122, 125], "turbine_list": [13, 22, 46, 49], "turbine_nam": [46, 47, 62, 63, 115], "turbine_num_digit": [62, 63], "turbine_numb": [13, 27, 30, 31, 36, 39, 41], "turbine_pow": 117, "turbine_subset": [46, 47], "turbine_upstream": [96, 97], "turbine_weight": [83, 89, 115, 116, 117], "turbinenam": 120, "turbineok": 115, "turbines_downstream": [96, 97], "turbines_sorted_by_dist": [116, 117], "turbopark": [109, 110, 111], "turbul": [13, 19, 27, 30, 31, 32, 44, 45, 83, 85, 93, 96, 97, 115, 116, 117, 125], "turbulence_intens": [94, 95, 117, 118, 119], "turbulenceintensity_80m": 115, "turn": 123, "twain": [55, 117], "two": [1, 2, 10, 11, 13, 17, 18, 24, 44, 45, 46, 47, 62, 63, 68, 81, 82, 96, 98, 99, 100, 103, 113, 116, 117, 118, 119, 125], "type": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 117, 125], "typic": [13, 16, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 83, 84, 89, 92, 93, 94, 95, 113, 116, 117], "un": [83, 86], "unbias": 117, "uncalibr": 113, "uncertain": 113, "uncertainflorismodel": [83, 84], "uncertainti": [44, 45, 109, 110, 111], "unchang": [115, 116], "uncommon": [44, 45], "uncorrect": [44, 45], "under": [44, 45, 124], "understand": 121, "uniform": 117, "union": [8, 9, 44, 45, 55, 56], "uniqu": [46, 47], "unless": [8, 9, 68, 77], "unlink": [116, 117], "unrealist": 113, "unsort": [13, 17, 18], "unstack": 113, "unsur": [116, 117], "until": [13, 29, 33, 35, 38, 43, 83, 84, 85, 115], "unus": [51, 52], "unwak": [83, 92], "unzip": 115, "up": [13, 16, 46, 47, 62, 63, 83, 86, 93, 94, 95, 113, 116, 117, 118, 125], "updat": [100, 103, 115], "uplift": [1, 2, 8, 9, 10, 11, 68, 79, 120, 125], "uplift_absolut": [1, 2, 68, 79], "uplift_col": [8, 9], "uplift_df_name1_df_name2": [1, 2, 10, 11], "uplift_nam": [1, 2, 10, 11, 68, 79, 118], "uplift_names_subset": [8, 9], "uplift_pair": [1, 2, 10, 11, 68, 79, 118], "upper": [13, 19, 20, 21, 44, 45, 46, 47], "upsampl": 125, "upstream": [3, 4, 13, 26, 28, 29, 32, 33, 35, 37, 38, 40, 42, 43, 46, 50, 83, 92, 96, 97, 116, 117, 119, 125], "uq": [44, 45], "url": 125, "us": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 15, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 55, 56, 62, 63, 68, 69, 72, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 125, 126], "usag": [46, 47, 113, 118, 120, 125, 126], "use_bokeh_for_plot": 115, "use_bokeh_plotting_librari": 115, "use_circular_statist": [96, 98], "use_predefined_ref": [1, 2, 10, 11, 68, 79, 118, 119], "use_predefined_w": [1, 2, 10, 11, 68, 79, 118, 119], "use_predefined_wd": [1, 2, 10, 11, 68, 79, 118, 119], "useabl": 113, "user": [46, 47, 62, 63, 83, 93, 113, 115, 116, 118, 119, 121, 125], "userwarn": [68, 69, 116, 117], "utc": [13, 24, 120], "util": [13, 26, 28, 29, 32, 33, 37, 38, 40, 42, 43, 46, 50, 112, 115, 116, 117, 121, 122], "utilities_exampl": [115, 116, 117], "v": [46, 47, 113], "v1": [114, 118], "valid": [46, 47, 57, 58, 68, 77, 79, 81, 82, 83, 93, 113, 115, 116, 122, 125], "valu": [1, 2, 3, 4, 5, 7, 10, 11, 13, 14, 15, 18, 27, 28, 30, 31, 32, 34, 36, 37, 39, 41, 42, 44, 45, 46, 47, 53, 54, 55, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 113, 115, 116, 117, 118, 119, 120, 126], "value_column": 120, "value_nam": 120, "valueerror": [8, 9, 117], "vane": 113, "vane_": 115, "var": [55, 56], "var_nam": 120, "vari": [83, 92], "variabl": [13, 16, 26, 28, 29, 32, 33, 37, 38, 40, 42, 43, 44, 45, 46, 47, 49, 55, 56, 83, 85, 94, 95, 113, 115, 116, 117, 125], "variable_column": 120, "variant": 113, "variat": [46, 47], "variou": [44, 45, 46, 47, 113], "ve": 118, "vector": [96, 98, 113], "venter": 55, "venv": 123, "verbos": [13, 14, 16, 46, 47, 50, 51, 52, 57, 60, 83, 86, 93, 96, 97, 98, 113, 115, 116, 117], "veri": [46, 47, 48, 83, 89, 113, 115, 116, 117, 125], "version": [115, 118, 119, 120, 125], "via": [100, 101, 102, 119], "view": 117, "virtual": 123, "visual": [3, 4, 118, 125], "w": [1, 2, 8, 9, 10, 11, 13, 39, 40, 41, 42, 43, 62, 63, 68, 69, 75, 77, 81, 82, 83, 84, 85, 91, 93, 113, 116, 117, 118, 119, 120], "wa": [46, 47, 55, 114, 115, 116, 117, 120], "wai": [13, 15, 83, 86, 113, 115, 120, 121], "wake": [44, 45, 46, 50, 83, 86, 89, 92, 94, 95, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 122, 125], "wake_model": [109, 110, 111], "wake_slop": [83, 89, 92], "wakest": [118, 119], "want": [46, 47, 62, 63, 100, 103, 105, 108, 115, 116, 117], "warn": [62, 63, 83, 86, 93, 115, 116, 117], "wd": [1, 2, 3, 4, 10, 11, 13, 34, 35, 36, 37, 38, 44, 45, 46, 50, 55, 56, 62, 63, 68, 69, 73, 77, 81, 82, 83, 84, 85, 87, 88, 93, 113, 116, 117, 118, 119, 120], "wd_": [13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 113, 115, 116, 117], "wd_0": 119, "wd_000": [46, 47, 50, 83, 85, 113, 115, 117, 119, 120], "wd_001": [46, 50, 113, 115, 117, 119, 120], "wd_002": [46, 50, 115, 117, 119, 120], "wd_003": [46, 47, 113, 115, 117, 119], "wd_004": [115, 117], "wd_005": [115, 117], "wd_006": [83, 85, 115, 117], "wd_1": 119, "wd_2": 119, "wd_3": 119, "wd_arrai": [3, 4, 83, 85, 87, 88, 89, 90, 116, 117, 118, 119], "wd_bia": [44, 45, 116, 117], "wd_bias_list": [116, 117], "wd_bin": [1, 2, 3, 10, 11, 68, 74], "wd_bin_overlap_radiu": [1, 2, 8, 9, 10, 11, 68, 77, 79, 118], "wd_bin_width": [3, 4, 44, 45], "wd_chang": 117, "wd_col": [1, 2, 8, 9, 10, 11, 68, 73, 74, 77, 81, 82], "wd_mask": [44, 45], "wd_max": [1, 2, 8, 9, 10, 11, 68, 74, 77, 79], "wd_min": [1, 2, 8, 9, 10, 11, 68, 74, 77, 79], "wd_point": [118, 119], "wd_rang": [13, 20], "wd_ref": [116, 117], "wd_std": [83, 84, 109, 110, 111], "wd_step": [1, 2, 8, 9, 10, 11, 44, 45, 68, 74, 77, 79, 83, 92, 116, 117], "wd_test": [116, 117], "wd_truth": 115, "wd_turbin": [1, 2, 10, 11, 68, 79, 119], "we": [3, 4, 46, 47, 50, 62, 63, 83, 93, 113, 115, 116, 117, 118, 120, 121, 123], "week": [46, 47, 113], "weight": [1, 2, 10, 11, 68, 69, 79, 83, 89], "weight_bi": [1, 2, 8, 9, 10, 11, 68, 69, 79], "weigth": [1, 2, 10, 11], "welcom": 122, "well": [13, 25, 118], "were": [46, 47, 114, 125], "west": 119, "westerli": 118, "what": [44, 45, 83, 92, 113, 116, 117, 125], "when": [1, 2, 10, 11, 44, 45, 46, 47, 49, 62, 63, 83, 85, 100, 103, 109, 111, 115, 117, 120, 123], "where": [1, 2, 3, 4, 5, 7, 10, 11, 13, 14, 15, 44, 45, 46, 47, 57, 58, 68, 72, 83, 92, 113, 116, 117, 118, 119, 120, 121], "whether": [3, 4, 8, 9, 13, 24, 46, 47, 49, 51, 52, 53, 54, 55, 56, 65, 67, 68, 79, 83, 90], "which": [1, 2, 10, 11, 13, 18, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 55, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 79, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 105, 108, 112, 113, 115, 116, 118, 120, 123, 125], "while": [115, 116, 117, 118, 125], "whose": [68, 74, 76, 78, 80], "wide": [62, 63, 117, 119], "widespread": 113, "widget": 115, "width": [1, 2, 10, 11, 44, 45, 57, 58, 59], "wind": [1, 2, 3, 4, 8, 9, 10, 11, 13, 20, 21, 26, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 55, 56, 62, 63, 65, 66, 67, 68, 72, 74, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 104, 109, 110, 111, 114, 115, 122, 125, 126], "wind_data": [116, 117, 118, 119], "wind_dir_tb01": 120, "wind_dir_tb02": 120, "wind_dir_tb03": 120, "wind_direct": [94, 95, 117, 118, 119], "wind_spe": [94, 95, 117, 118, 119], "wind_speed_tb01": 120, "wind_speed_tb02": 120, "wind_speed_tb03": 120, "winddirection_80m": [113, 115], "winddirection_col": [62, 63], "window": [46, 47, 57, 58, 59, 113, 117], "window_add": 113, "window_width": [57, 58, 59, 115, 116], "windspe": [113, 115], "windspeed_80m": 115, "windspeed_col": [62, 63], "windspeedmean": 120, "wise": [46, 47], "within": [13, 15, 29, 33, 35, 38, 43, 46, 47, 55, 68, 72, 77, 83, 91, 113, 114, 116, 117, 118, 120, 125], "without": [13, 16, 68, 69, 77, 83, 84, 89, 118], "wn": [116, 117], "work": [62, 63, 115, 117, 118, 119, 120, 123], "worker": [44, 45], "workflow": 120, "would": [46, 47, 83, 86, 113, 116, 117, 125], "wrap": [68, 72, 96, 99, 105, 108, 113, 117, 125], "wrap_0deg_to_360deg": [83, 93], "wrap_360": [116, 117], "wrap_around_360": [105, 108], "wrapper": [65, 66, 83, 87, 88], "write": [83, 85, 125], "ws_": [13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 113, 115, 117], "ws_0": 119, "ws_000": [46, 47, 48, 83, 85, 113, 115, 117, 119, 120], "ws_001": [46, 47, 48, 115, 117, 119, 120], "ws_002": [115, 117, 120], "ws_003": [46, 47, 115, 117], "ws_004": [115, 117], "ws_005": [115, 117], "ws_006": [83, 85, 115, 117], "ws_1": 119, "ws_arrai": [83, 85, 117, 118, 119], "ws_bin": [1, 2, 10, 11, 46, 47, 68, 74, 76], "ws_col": [1, 2, 8, 9, 10, 11, 68, 75, 76, 77, 81, 82], "ws_deadband": [46, 47, 115], "ws_mask": [44, 45, 116, 117], "ws_max": [1, 2, 8, 9, 10, 11, 68, 74, 76, 77, 79], "ws_min": [1, 2, 8, 9, 10, 11, 68, 74, 76, 77, 79], "ws_pitch_": 115, "ws_point": [118, 119], "ws_pow_": 115, "ws_pow_postprocessed_": 115, "ws_power_": 115, "ws_rang": [3, 4, 13, 21, 113], "ws_step": [1, 2, 8, 9, 10, 11, 44, 45, 68, 74, 76, 77, 79], "ws_test": [83, 87, 88, 90, 116, 117], "ws_truth": 115, "ws_turbin": [1, 2, 10, 11, 68, 79, 119], "wtg": [115, 116, 117], "www": 118, "x": [13, 26, 29, 33, 35, 38, 40, 43, 46, 47, 55, 83, 90, 96, 97, 98, 105, 108, 116, 117, 118, 119, 120], "x0": [116, 117], "x64": 117, "x_col": [46, 47, 115], "x_opt": [96, 97, 98], "x_search_bound": [116, 117], "x_turb": [13, 26, 29, 33, 35, 38, 40, 43, 83, 91, 116, 117], "xlabel": [46, 47, 115, 118, 119], "xp": [105, 108], "y": [3, 4, 13, 26, 29, 33, 35, 38, 40, 43, 46, 47, 96, 98, 105, 108, 117, 118, 119], "y_col": [46, 47, 115], "y_data": 55, "y_regr": 55, "y_shift_rang": [96, 98], "y_turb": [13, 26, 29, 33, 35, 38, 40, 43, 83, 91, 116, 117], "yaml": [118, 119], "yaw": [55, 56, 94, 95, 100, 104, 113, 118, 119, 125], "yaw_": [113, 115, 116], "yaw_000": 113, "yaw_001": 113, "yaw_angl": [100, 104, 118], "yaw_angles_opt": [94, 95], "yaw_optimizer_visu": 125, "yawanglemean": 120, "year": 125, "yet": [46, 47, 113, 116], "yield": [83, 85, 92, 114], "ylabel": [46, 47, 55, 115, 118, 119], "ylim": [3, 4], "you": [46, 47, 49, 100, 103, 105, 108, 113, 115, 121, 123, 125], "your": [13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 83, 92, 93, 115, 123, 125], "yref": [96, 99], "ytest": [96, 99], "zero": [1, 2, 10, 11, 46, 47, 94, 95, 115, 116, 117, 118], "zip": 115, "zipfil": 115, "zoh": [13, 15], "zoom": 115}, "titles": ["flasc.analysis", "flasc.analysis.energy_ratio", "flasc.analysis.energy_ratio.compute_energy_ratio", "flasc.analysis.energy_ratio_heterogeneity_mapper", "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper", "flasc.analysis.energy_ratio_input", "flasc.analysis.energy_ratio_input.EnergyRatioInput", "flasc.analysis.energy_ratio_input.generate_block_list", "flasc.analysis.energy_ratio_output", "flasc.analysis.energy_ratio_output.EnergyRatioOutput", "flasc.analysis.total_uplift", "flasc.analysis.total_uplift.compute_total_uplift", "flasc.data_processing", "flasc.data_processing.dataframe_manipulations", "flasc.data_processing.dataframe_manipulations.df_drop_nan_rows", "flasc.data_processing.dataframe_manipulations.df_find_and_fill_data_gaps_with_missing", "flasc.data_processing.dataframe_manipulations.df_reduce_precision", "flasc.data_processing.dataframe_manipulations.df_sort_and_find_duplicates", "flasc.data_processing.dataframe_manipulations.df_sort_and_fix_duplicates", "flasc.data_processing.dataframe_manipulations.filter_df_by_ti", "flasc.data_processing.dataframe_manipulations.filter_df_by_wd", "flasc.data_processing.dataframe_manipulations.filter_df_by_ws", "flasc.data_processing.dataframe_manipulations.get_column_mean", "flasc.data_processing.dataframe_manipulations.get_num_turbines", "flasc.data_processing.dataframe_manipulations.is_day_or_night", "flasc.data_processing.dataframe_manipulations.plot_sun_altitude_with_day_night_color", "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_n_closest_upstream_turbines", "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_turbines", "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines", "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines_in_radius", "flasc.data_processing.dataframe_manipulations.set_ti_by_all_turbines", "flasc.data_processing.dataframe_manipulations.set_ti_by_turbines", "flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines", "flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines_in_radius", "flasc.data_processing.dataframe_manipulations.set_wd_by_all_turbines", "flasc.data_processing.dataframe_manipulations.set_wd_by_radius_from_turbine", "flasc.data_processing.dataframe_manipulations.set_wd_by_turbines", "flasc.data_processing.dataframe_manipulations.set_wd_by_upstream_turbines", "flasc.data_processing.dataframe_manipulations.set_wd_by_upstream_turbines_in_radius", "flasc.data_processing.dataframe_manipulations.set_ws_by_all_turbines", "flasc.data_processing.dataframe_manipulations.set_ws_by_n_closest_upstream_turbines", "flasc.data_processing.dataframe_manipulations.set_ws_by_turbines", "flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines", "flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines_in_radius", "flasc.data_processing.energy_ratio_wd_bias_estimation", "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation", "flasc.data_processing.filtering", "flasc.data_processing.filtering.FlascFilter", "flasc.data_processing.filtering.df_get_no_faulty_measurements", "flasc.data_processing.filtering.df_mark_turbdata_as_faulty", "flasc.data_processing.filtering.filter_df_by_faulty_impacting_turbines", "flasc.data_processing.find_sensor_faults", "flasc.data_processing.find_sensor_faults.find_sensor_stuck_faults", "flasc.data_processing.northing_offset", "flasc.data_processing.northing_offset.crosscheck_northing_offset_consistency", "flasc.data_processing.northing_offset_change_hoger", "flasc.data_processing.northing_offset_change_hoger.homogenize_hoger", "flasc.data_processing.time_operations", "flasc.data_processing.time_operations.df_downsample", "flasc.data_processing.time_operations.df_movingaverage", "flasc.data_processing.time_operations.df_resample_by_interpolation", "flasc.data_processing.time_operations.flatten_cols", "flasc.flasc_dataframe", "flasc.flasc_dataframe.FlascDataFrame", "flasc.utilities", "flasc.utilities.circular_statistics", "flasc.utilities.circular_statistics.calc_wd_mean_radial", "flasc.utilities.circular_statistics.calculate_wd_statistics", "flasc.utilities.energy_ratio_utilities", "flasc.utilities.energy_ratio_utilities.add_bin_weights", "flasc.utilities.energy_ratio_utilities.add_power_ref", "flasc.utilities.energy_ratio_utilities.add_power_test", "flasc.utilities.energy_ratio_utilities.add_reflected_rows", "flasc.utilities.energy_ratio_utilities.add_wd", "flasc.utilities.energy_ratio_utilities.add_wd_bin", "flasc.utilities.energy_ratio_utilities.add_ws", "flasc.utilities.energy_ratio_utilities.add_ws_bin", "flasc.utilities.energy_ratio_utilities.bin_and_group_dataframe", "flasc.utilities.energy_ratio_utilities.bin_column", "flasc.utilities.energy_ratio_utilities.check_compute_energy_ratio_inputs", "flasc.utilities.energy_ratio_utilities.cut", "flasc.utilities.energy_ratio_utilities.filter_all_nulls", "flasc.utilities.energy_ratio_utilities.filter_any_nulls", "flasc.utilities.floris_tools", "flasc.utilities.floris_tools.add_gaussian_blending_to_floris_approx_table", "flasc.utilities.floris_tools.calc_floris_approx_table", "flasc.utilities.floris_tools.estimate_ws_with_floris", "flasc.utilities.floris_tools.get_all_dependent_turbines", "flasc.utilities.floris_tools.get_all_impacting_turbines", "flasc.utilities.floris_tools.get_all_impacting_turbines_geometrical", "flasc.utilities.floris_tools.get_dependent_turbines_by_wd", "flasc.utilities.floris_tools.get_turbs_in_radius", "flasc.utilities.floris_tools.get_upstream_turbs_floris", "flasc.utilities.floris_tools.interpolate_floris_from_df_approx", "flasc.utilities.lookup_table_tools", "flasc.utilities.lookup_table_tools.get_yaw_angles_interpolant", "flasc.utilities.optimization", "flasc.utilities.optimization.estimate_ti", "flasc.utilities.optimization.find_timeshift_between_dfs", "flasc.utilities.optimization.match_y_curves_by_offset", "flasc.utilities.tuner_utilities", "flasc.utilities.tuner_utilities.nested_get", "flasc.utilities.tuner_utilities.nested_set", "flasc.utilities.tuner_utilities.replicate_nan_values", "flasc.utilities.tuner_utilities.resim_floris", "flasc.utilities.utilities", "flasc.utilities.utilities.estimate_dt", "flasc.utilities.utilities.get_num_turbines", "flasc.utilities.utilities.interp_with_max_gap", "flasc.utilities.utilities_examples", "flasc.utilities.utilities_examples.load_floris_artificial", "flasc.utilities.utilities_examples.load_floris_smarteole", "API Documentation", "Raw data processing", "Energy ratio analysis", "<strong>Import dependencies</strong>", "<strong>Import dependencies</strong>", "Northing Calibration in FLASC", "Demonstrate energy ratio syntax", "Demonstrate energy ratio options", "FLASC data format", "Getting started", "FLASC documentation", "Installation", "Licensing", "Overview", "Total uplift"], "titleterms": {"0": [115, 116, 118], "1": [115, 116], "2": [115, 116, 118], "3": [115, 116], "4": [116, 117], "5": [116, 117], "6": [116, 117], "7": 116, "a_00_initial_download": 113, "a_01_to_common_format_df": 113, "a_02_basic_filt": 113, "a_03_check_sensor_stuck_fault": 113, "a_04_wspowercurve_filtering_cod": 113, "a_04_wspowercurve_filtering_gui": 113, "a_05a_plot_faults_with_layout": 113, "a_05b_cross_compare_wd_measurement_calibr": 113, "a_06a_determine_timeshift_datasourc": 113, "a_06b_apply_timeshift_df": 113, "a_07a_estimate_wd_bias_per_turbin": 113, "a_07b_wd_bias_to_df": 113, "a_08_plot_energy_ratio": 113, "add": 118, "add_bin_weight": 69, "add_gaussian_blending_to_floris_approx_t": 84, "add_power_ref": 70, "add_power_test": 71, "add_reflected_row": 72, "add_w": 75, "add_wd": 73, "add_wd_bin": 74, "add_ws_bin": 76, "analysi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 114, 125], "angl": 117, "api": 112, "ar": 117, "assembl": 118, "bia": [116, 117], "bias": [116, 117], "bias_estim": 45, "bin_and_group_datafram": 77, "bin_column": 78, "calc_floris_approx_t": 85, "calc_wd_mean_radi": 66, "calcul": 118, "calculate_wd_statist": 67, "calibr": 117, "chang": [117, 118], "check": 117, "check_compute_energy_ratio_input": 79, "circular_statist": [65, 66, 67], "citat": 125, "clean": 117, "common": 115, "compar": 116, "comput": [118, 119], "compute_energy_ratio": 2, "compute_total_uplift": 11, "convert": 120, "correct": [116, 117], "creat": 120, "cross": [116, 117], "crosscheck_northing_offset_consist": 54, "cut": 80, "data": [113, 115, 116, 117, 120], "data_process": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 125], "datafram": 118, "dataframe_manipul": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "dataset": [118, 119], "deal": [116, 117], "demonstr": [114, 118, 119], "depend": [115, 116], "develop": 123, "df_downsampl": 58, "df_drop_nan_row": 14, "df_find_and_fill_data_gaps_with_miss": 15, "df_get_no_faulty_measur": 48, "df_mark_turbdata_as_faulti": 49, "df_movingaverag": 59, "df_reduce_precis": 16, "df_resample_by_interpol": 60, "df_sort_and_find_dupl": 17, "df_sort_and_fix_dupl": 18, "direct": [116, 117, 118, 119], "document": [112, 122], "energi": [114, 118, 119], "energy_ratio": [1, 2], "energy_ratio_heterogeneity_mapp": [3, 4], "energy_ratio_input": [5, 6, 7], "energy_ratio_output": [8, 9], "energy_ratio_util": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], "energy_ratio_wd_bias_estim": [44, 45], "energyratioinput": 6, "energyratiooutput": [9, 118], "error": 117, "estim": [116, 117], "estimate_dt": 106, "estimate_ti": 97, "estimate_ws_with_flori": 86, "exampl": [113, 114, 121], "export": 120, "farm": 113, "fault": [115, 116, 117], "file": 115, "filter": [46, 47, 48, 49, 50, 113, 115], "filter_all_nul": 81, "filter_any_nul": 82, "filter_df_by_faulty_impacting_turbin": 50, "filter_df_by_ti": 19, "filter_df_by_w": 21, "filter_df_by_wd": 20, "final": 117, "find_sensor_fault": [51, 52], "find_sensor_stuck_fault": 52, "find_timeshift_between_df": 98, "flasc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 117, 120, 121, 122, 125], "flasc_datafram": [62, 63], "flascdatafram": [63, 120], "flascfilt": 47, "flatten_col": 61, "flori": [116, 117, 118, 119], "floris_tool": [83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "format": [113, 115, 120], "from": [117, 120], "gener": [117, 118, 119], "generate_block_list": 7, "get": 121, "get_all_dependent_turbin": 87, "get_all_impacting_turbin": 88, "get_all_impacting_turbines_geometr": 89, "get_column_mean": 22, "get_dependent_turbines_by_wd": 90, "get_num_turbin": [23, 107], "get_turbs_in_radiu": 91, "get_upstream_turbs_flori": 92, "get_yaw_angles_interpol": 95, "heterogeneity_mapp": 4, "hoger": 117, "homegen": 117, "homogenize_hog": 56, "illustr": [117, 119], "import": [115, 116], "initi": [115, 116], "input": 118, "instal": [121, 123], "inter": [116, 117], "interp_with_max_gap": 108, "interpolate_floris_from_df_approx": 93, "is_day_or_night": 24, "layout": [115, 117], "licens": 124, "literatur": 125, "load": 117, "load_floris_artifici": 110, "load_floris_smarteol": 111, "local": 115, "long": 120, "lookup_table_tool": [94, 95], "match_y_curves_by_offset": 99, "measur": 116, "model": 117, "necessari": 113, "nested_get": 101, "nested_set": 102, "nois": 118, "north": 117, "northing_offset": [53, 54], "northing_offset_change_hog": [55, 56], "offset": 117, "oper": 117, "optim": [96, 97, 98, 99], "option": [113, 119], "outlier": 115, "overview": 125, "packag": 125, "panda": 118, "plot": 115, "plot_sun_altitude_with_day_night_color": 25, "postprocess": 115, "power": 119, "pre": 119, "process": [113, 116], "pulldown": [115, 116], "py": 113, "question": 125, "ratio": [114, 118, 119], "raw": 113, "recalcul": 117, "refer": 119, "remain": [116, 117], "remov": 117, "replicate_nan_valu": 103, "resim_flori": 104, "respect": [117, 118], "retriev": 113, "save": [115, 116], "set": 117, "set_pow_ref_by_n_closest_upstream_turbin": 26, "set_pow_ref_by_turbin": 27, "set_pow_ref_by_upstream_turbin": 28, "set_pow_ref_by_upstream_turbines_in_radiu": 29, "set_ti_by_all_turbin": 30, "set_ti_by_turbin": 31, "set_ti_by_upstream_turbin": 32, "set_ti_by_upstream_turbines_in_radiu": 33, "set_wd_by_all_turbin": 34, "set_wd_by_radius_from_turbin": 35, "set_wd_by_turbin": 36, "set_wd_by_upstream_turbin": 37, "set_wd_by_upstream_turbines_in_radiu": 38, "set_ws_by_all_turbin": 39, "set_ws_by_n_closest_upstream_turbin": 40, "set_ws_by_turbin": 41, "set_ws_by_upstream_turbin": 42, "set_ws_by_upstream_turbines_in_radiu": 43, "show": 117, "signal": 118, "singl": [116, 117], "some": 118, "speed": [118, 119], "start": 121, "steadi": 117, "step": [115, 116, 117], "syntax": 118, "tabl": 113, "tall": 113, "three": 113, "time_oper": [57, 58, 59, 60, 61], "total": 126, "total_uplift": [10, 11], "tuner_util": [100, 101, 102, 103, 104], "turbin": [113, 116, 117, 118], "uncertainti": 118, "up": 120, "uplift": [118, 126], "us": 120, "usag": 114, "user": 120, "util": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 125], "utilities_exampl": [109, 110, 111], "v": 115, "which": 117, "wide": [113, 120], "wind": [113, 116, 117, 118, 119, 120], "yaw": 117}})