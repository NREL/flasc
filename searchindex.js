Search.setIndex({"alltitles": {"API Documentation": [[107, null]], "Assemble the pandas dataframes and add some noise to the wind speed and direction signals": [[110, "assemble-the-pandas-dataframes-and-add-some-noise-to-the-wind-speed-and-direction-signals"]], "Calculating Uplift": [[110, "calculating-uplift"]], "Change uncertainty calculation": [[110, "change-uncertainty-calculation"]], "Citation": [[117, "citation"]], "Compute the energy ratio of turbine 2, with respect to turbine 0": [[110, "compute-the-energy-ratio-of-turbine-2-with-respect-to-turbine-0"]], "Computing the energy ratio": [[110, "computing-the-energy-ratio"]], "Converting Wide and Long": [[112, "converting-wide-and-long"]], "Creating a FlascDataFrame from User Data": [[112, "creating-a-flascdataframe-from-user-data"]], "Data filtering": [[108, "data-filtering"]], "Demonstrate energy ratio options": [[111, null]], "Demonstrate energy ratio syntax": [[110, null]], "Energy Ratio Input": [[110, "energy-ratio-input"]], "Energy ratio analysis": [[109, null]], "EnergyRatioOutput": [[110, "energyratiooutput"]], "Example Tall data format for a three turbine wind farm": [[108, "id1"]], "Example Wide data format for a three turbine wind farm": [[108, "id2"]], "Examples demonstrating energy ratio usage": [[109, "examples-demonstrating-energy-ratio-usage"]], "Exporting to wind-up format": [[112, "exporting-to-wind-up-format"]], "FLASC data format": [[112, null]], "FLASC documentation": [[114, null]], "FLASC examples": [[113, "flasc-examples"]], "FLASC package": [[117, "flasc-package"]], "FlascDataFrame": [[112, "flascdataframe"]], "Format data to a wide table format (if necessary)": [[108, "format-data-to-a-wide-table-format-if-necessary"]], "Generate dataset with FLORIS": [[110, "generate-dataset-with-floris"], [111, "generate-dataset-with-floris"]], "Getting started": [[113, null]], "Illustrating pre-computing reference wind speed, direction and power": [[111, "illustrating-pre-computing-reference-wind-speed-direction-and-power"]], "Install FLASC": [[113, "install-flasc"]], "Installation": [[115, null]], "Installation for developers": [[115, "installation-for-developers"]], "Licensing": [[116, null]], "Literature": [[117, "literature"]], "Overview": [[117, null]], "Questions": [[117, "questions"]], "Raw data processing": [[108, null]], "Raw data retrieval": [[108, "raw-data-retrieval"]], "Total uplift": [[118, null]], "Using FlascDataFrame": [[112, "using-flascdataframe"]], "a_00_initial_download.py": [[108, "a-00-initial-download-py"]], "a_01_to_common_format_df.py": [[108, "a-01-to-common-format-df-py"]], "a_02_basic_filters.py": [[108, "a-02-basic-filters-py"]], "a_03_check_sensor_stuck_faults.py": [[108, "a-03-check-sensor-stuck-faults-py"]], "a_04_wspowercurve_filtering_code.py": [[108, "a-04-wspowercurve-filtering-code-py"]], "a_04_wspowercurve_filtering_gui.py (optional)": [[108, "a-04-wspowercurve-filtering-gui-py-optional"]], "a_05a_plot_faults_with_layout.py (optional)": [[108, "a-05a-plot-faults-with-layout-py-optional"]], "a_05b_cross_compare_wd_measurement_calibrations.py (optional)": [[108, "a-05b-cross-compare-wd-measurement-calibrations-py-optional"]], "a_06a_determine_timeshift_datasources.py (optional)": [[108, "a-06a-determine-timeshift-datasources-py-optional"]], "a_06b_apply_timeshift_dfs.py (optional)": [[108, "a-06b-apply-timeshift-dfs-py-optional"]], "a_07a_estimate_wd_bias_per_turbine.py": [[108, "a-07a-estimate-wd-bias-per-turbine-py"]], "a_07b_wd_bias_to_df.py": [[108, "a-07b-wd-bias-to-df-py"]], "a_08_plot_energy_ratios.py": [[108, "a-08-plot-energy-ratios-py"]], "flasc.analysis": [[0, null], [117, "flasc-analysis"]], "flasc.analysis.energy_ratio": [[1, null]], "flasc.analysis.energy_ratio.compute_energy_ratio": [[2, null]], "flasc.analysis.energy_ratio_heterogeneity_mapper": [[3, null]], "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper": [[4, null]], "flasc.analysis.energy_ratio_input": [[5, null]], "flasc.analysis.energy_ratio_input.EnergyRatioInput": [[6, null]], "flasc.analysis.energy_ratio_input.generate_block_list": [[7, null]], "flasc.analysis.energy_ratio_output": [[8, null]], "flasc.analysis.energy_ratio_output.EnergyRatioOutput": [[9, null]], "flasc.analysis.total_uplift": [[10, null]], "flasc.analysis.total_uplift.compute_total_uplift": [[11, null]], "flasc.data_processing": [[12, null], [117, "flasc-data-processing"]], "flasc.data_processing.dataframe_manipulations": [[13, null]], "flasc.data_processing.dataframe_manipulations.df_drop_nan_rows": [[14, null]], "flasc.data_processing.dataframe_manipulations.df_find_and_fill_data_gaps_with_missing": [[15, null]], "flasc.data_processing.dataframe_manipulations.df_reduce_precision": [[16, null]], "flasc.data_processing.dataframe_manipulations.df_sort_and_find_duplicates": [[17, null]], "flasc.data_processing.dataframe_manipulations.df_sort_and_fix_duplicates": [[18, null]], "flasc.data_processing.dataframe_manipulations.filter_df_by_ti": [[19, null]], "flasc.data_processing.dataframe_manipulations.filter_df_by_wd": [[20, null]], "flasc.data_processing.dataframe_manipulations.filter_df_by_ws": [[21, null]], "flasc.data_processing.dataframe_manipulations.get_column_mean": [[22, null]], "flasc.data_processing.dataframe_manipulations.get_num_turbines": [[23, null]], "flasc.data_processing.dataframe_manipulations.is_day_or_night": [[24, null]], "flasc.data_processing.dataframe_manipulations.plot_sun_altitude_with_day_night_color": [[25, null]], "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_n_closest_upstream_turbines": [[26, null]], "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_turbines": [[27, null]], "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines": [[28, null]], "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines_in_radius": [[29, null]], "flasc.data_processing.dataframe_manipulations.set_ti_by_all_turbines": [[30, null]], "flasc.data_processing.dataframe_manipulations.set_ti_by_turbines": [[31, null]], "flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines": [[32, null]], "flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines_in_radius": [[33, null]], "flasc.data_processing.dataframe_manipulations.set_wd_by_all_turbines": [[34, null]], "flasc.data_processing.dataframe_manipulations.set_wd_by_radius_from_turbine": [[35, null]], "flasc.data_processing.dataframe_manipulations.set_wd_by_turbines": [[36, null]], "flasc.data_processing.dataframe_manipulations.set_ws_by_all_turbines": [[37, null]], "flasc.data_processing.dataframe_manipulations.set_ws_by_n_closest_upstream_turbines": [[38, null]], "flasc.data_processing.dataframe_manipulations.set_ws_by_turbines": [[39, null]], "flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines": [[40, null]], "flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines_in_radius": [[41, null]], "flasc.data_processing.energy_ratio_wd_bias_estimation": [[42, null]], "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation": [[43, null]], "flasc.data_processing.filtering": [[44, null]], "flasc.data_processing.filtering.FlascFilter": [[45, null]], "flasc.data_processing.filtering.df_get_no_faulty_measurements": [[46, null]], "flasc.data_processing.filtering.df_mark_turbdata_as_faulty": [[47, null]], "flasc.data_processing.filtering.filter_df_by_faulty_impacting_turbines": [[48, null]], "flasc.data_processing.find_sensor_faults": [[49, null]], "flasc.data_processing.find_sensor_faults.find_sensor_stuck_faults": [[50, null]], "flasc.data_processing.northing_offset": [[51, null]], "flasc.data_processing.northing_offset.crosscheck_northing_offset_consistency": [[52, null]], "flasc.data_processing.time_operations": [[53, null]], "flasc.data_processing.time_operations.df_downsample": [[54, null]], "flasc.data_processing.time_operations.df_movingaverage": [[55, null]], "flasc.data_processing.time_operations.df_resample_by_interpolation": [[56, null]], "flasc.data_processing.time_operations.flatten_cols": [[57, null]], "flasc.flasc_dataframe": [[58, null]], "flasc.flasc_dataframe.FlascDataFrame": [[59, null]], "flasc.utilities": [[60, null], [117, "flasc-utilities"]], "flasc.utilities.circular_statistics": [[61, null]], "flasc.utilities.circular_statistics.calc_wd_mean_radial": [[62, null]], "flasc.utilities.circular_statistics.calculate_wd_statistics": [[63, null]], "flasc.utilities.energy_ratio_utilities": [[64, null]], "flasc.utilities.energy_ratio_utilities.add_bin_weights": [[65, null]], "flasc.utilities.energy_ratio_utilities.add_power_ref": [[66, null]], "flasc.utilities.energy_ratio_utilities.add_power_test": [[67, null]], "flasc.utilities.energy_ratio_utilities.add_reflected_rows": [[68, null]], "flasc.utilities.energy_ratio_utilities.add_wd": [[69, null]], "flasc.utilities.energy_ratio_utilities.add_wd_bin": [[70, null]], "flasc.utilities.energy_ratio_utilities.add_ws": [[71, null]], "flasc.utilities.energy_ratio_utilities.add_ws_bin": [[72, null]], "flasc.utilities.energy_ratio_utilities.bin_and_group_dataframe": [[73, null]], "flasc.utilities.energy_ratio_utilities.bin_column": [[74, null]], "flasc.utilities.energy_ratio_utilities.check_compute_energy_ratio_inputs": [[75, null]], "flasc.utilities.energy_ratio_utilities.cut": [[76, null]], "flasc.utilities.energy_ratio_utilities.filter_all_nulls": [[77, null]], "flasc.utilities.energy_ratio_utilities.filter_any_nulls": [[78, null]], "flasc.utilities.floris_tools": [[79, null]], "flasc.utilities.floris_tools.add_gaussian_blending_to_floris_approx_table": [[80, null]], "flasc.utilities.floris_tools.calc_floris_approx_table": [[81, null]], "flasc.utilities.floris_tools.get_all_dependent_turbines": [[82, null]], "flasc.utilities.floris_tools.get_all_impacting_turbines": [[83, null]], "flasc.utilities.floris_tools.get_all_impacting_turbines_geometrical": [[84, null]], "flasc.utilities.floris_tools.get_dependent_turbines_by_wd": [[85, null]], "flasc.utilities.floris_tools.get_turbs_in_radius": [[86, null]], "flasc.utilities.floris_tools.get_upstream_turbs_floris": [[87, null]], "flasc.utilities.floris_tools.interpolate_floris_from_df_approx": [[88, null]], "flasc.utilities.lookup_table_tools": [[89, null]], "flasc.utilities.lookup_table_tools.get_yaw_angles_interpolant": [[90, null]], "flasc.utilities.optimization": [[91, null]], "flasc.utilities.optimization.estimate_ti": [[92, null]], "flasc.utilities.optimization.find_timeshift_between_dfs": [[93, null]], "flasc.utilities.optimization.match_y_curves_by_offset": [[94, null]], "flasc.utilities.tuner_utilities": [[95, null]], "flasc.utilities.tuner_utilities.nested_get": [[96, null]], "flasc.utilities.tuner_utilities.nested_set": [[97, null]], "flasc.utilities.tuner_utilities.replicate_nan_values": [[98, null]], "flasc.utilities.tuner_utilities.resim_floris": [[99, null]], "flasc.utilities.utilities": [[100, null]], "flasc.utilities.utilities.estimate_dt": [[101, null]], "flasc.utilities.utilities.get_num_turbines": [[102, null]], "flasc.utilities.utilities.interp_with_max_gap": [[103, null]], "flasc.utilities.utilities_examples": [[104, null]], "flasc.utilities.utilities_examples.load_floris_artificial": [[105, null]], "flasc.utilities.utilities_examples.load_floris_smarteole": [[106, null]]}, "docnames": ["_autosummary/flasc.analysis", "_autosummary/flasc.analysis.energy_ratio", "_autosummary/flasc.analysis.energy_ratio.compute_energy_ratio", "_autosummary/flasc.analysis.energy_ratio_heterogeneity_mapper", "_autosummary/flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper", "_autosummary/flasc.analysis.energy_ratio_input", "_autosummary/flasc.analysis.energy_ratio_input.EnergyRatioInput", "_autosummary/flasc.analysis.energy_ratio_input.generate_block_list", "_autosummary/flasc.analysis.energy_ratio_output", "_autosummary/flasc.analysis.energy_ratio_output.EnergyRatioOutput", "_autosummary/flasc.analysis.total_uplift", "_autosummary/flasc.analysis.total_uplift.compute_total_uplift", "_autosummary/flasc.data_processing", "_autosummary/flasc.data_processing.dataframe_manipulations", "_autosummary/flasc.data_processing.dataframe_manipulations.df_drop_nan_rows", "_autosummary/flasc.data_processing.dataframe_manipulations.df_find_and_fill_data_gaps_with_missing", "_autosummary/flasc.data_processing.dataframe_manipulations.df_reduce_precision", "_autosummary/flasc.data_processing.dataframe_manipulations.df_sort_and_find_duplicates", "_autosummary/flasc.data_processing.dataframe_manipulations.df_sort_and_fix_duplicates", "_autosummary/flasc.data_processing.dataframe_manipulations.filter_df_by_ti", "_autosummary/flasc.data_processing.dataframe_manipulations.filter_df_by_wd", "_autosummary/flasc.data_processing.dataframe_manipulations.filter_df_by_ws", "_autosummary/flasc.data_processing.dataframe_manipulations.get_column_mean", "_autosummary/flasc.data_processing.dataframe_manipulations.get_num_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.is_day_or_night", "_autosummary/flasc.data_processing.dataframe_manipulations.plot_sun_altitude_with_day_night_color", "_autosummary/flasc.data_processing.dataframe_manipulations.set_pow_ref_by_n_closest_upstream_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_pow_ref_by_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines_in_radius", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ti_by_all_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ti_by_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines_in_radius", "_autosummary/flasc.data_processing.dataframe_manipulations.set_wd_by_all_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_wd_by_radius_from_turbine", "_autosummary/flasc.data_processing.dataframe_manipulations.set_wd_by_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_all_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_n_closest_upstream_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines_in_radius", "_autosummary/flasc.data_processing.energy_ratio_wd_bias_estimation", "_autosummary/flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation", "_autosummary/flasc.data_processing.filtering", "_autosummary/flasc.data_processing.filtering.FlascFilter", "_autosummary/flasc.data_processing.filtering.df_get_no_faulty_measurements", "_autosummary/flasc.data_processing.filtering.df_mark_turbdata_as_faulty", "_autosummary/flasc.data_processing.filtering.filter_df_by_faulty_impacting_turbines", "_autosummary/flasc.data_processing.find_sensor_faults", "_autosummary/flasc.data_processing.find_sensor_faults.find_sensor_stuck_faults", "_autosummary/flasc.data_processing.northing_offset", "_autosummary/flasc.data_processing.northing_offset.crosscheck_northing_offset_consistency", "_autosummary/flasc.data_processing.time_operations", "_autosummary/flasc.data_processing.time_operations.df_downsample", "_autosummary/flasc.data_processing.time_operations.df_movingaverage", "_autosummary/flasc.data_processing.time_operations.df_resample_by_interpolation", "_autosummary/flasc.data_processing.time_operations.flatten_cols", "_autosummary/flasc.flasc_dataframe", "_autosummary/flasc.flasc_dataframe.FlascDataFrame", "_autosummary/flasc.utilities", "_autosummary/flasc.utilities.circular_statistics", "_autosummary/flasc.utilities.circular_statistics.calc_wd_mean_radial", "_autosummary/flasc.utilities.circular_statistics.calculate_wd_statistics", "_autosummary/flasc.utilities.energy_ratio_utilities", "_autosummary/flasc.utilities.energy_ratio_utilities.add_bin_weights", "_autosummary/flasc.utilities.energy_ratio_utilities.add_power_ref", "_autosummary/flasc.utilities.energy_ratio_utilities.add_power_test", "_autosummary/flasc.utilities.energy_ratio_utilities.add_reflected_rows", "_autosummary/flasc.utilities.energy_ratio_utilities.add_wd", "_autosummary/flasc.utilities.energy_ratio_utilities.add_wd_bin", "_autosummary/flasc.utilities.energy_ratio_utilities.add_ws", "_autosummary/flasc.utilities.energy_ratio_utilities.add_ws_bin", "_autosummary/flasc.utilities.energy_ratio_utilities.bin_and_group_dataframe", "_autosummary/flasc.utilities.energy_ratio_utilities.bin_column", "_autosummary/flasc.utilities.energy_ratio_utilities.check_compute_energy_ratio_inputs", "_autosummary/flasc.utilities.energy_ratio_utilities.cut", "_autosummary/flasc.utilities.energy_ratio_utilities.filter_all_nulls", "_autosummary/flasc.utilities.energy_ratio_utilities.filter_any_nulls", "_autosummary/flasc.utilities.floris_tools", "_autosummary/flasc.utilities.floris_tools.add_gaussian_blending_to_floris_approx_table", "_autosummary/flasc.utilities.floris_tools.calc_floris_approx_table", "_autosummary/flasc.utilities.floris_tools.get_all_dependent_turbines", "_autosummary/flasc.utilities.floris_tools.get_all_impacting_turbines", "_autosummary/flasc.utilities.floris_tools.get_all_impacting_turbines_geometrical", "_autosummary/flasc.utilities.floris_tools.get_dependent_turbines_by_wd", "_autosummary/flasc.utilities.floris_tools.get_turbs_in_radius", "_autosummary/flasc.utilities.floris_tools.get_upstream_turbs_floris", "_autosummary/flasc.utilities.floris_tools.interpolate_floris_from_df_approx", "_autosummary/flasc.utilities.lookup_table_tools", "_autosummary/flasc.utilities.lookup_table_tools.get_yaw_angles_interpolant", "_autosummary/flasc.utilities.optimization", "_autosummary/flasc.utilities.optimization.estimate_ti", "_autosummary/flasc.utilities.optimization.find_timeshift_between_dfs", "_autosummary/flasc.utilities.optimization.match_y_curves_by_offset", "_autosummary/flasc.utilities.tuner_utilities", "_autosummary/flasc.utilities.tuner_utilities.nested_get", "_autosummary/flasc.utilities.tuner_utilities.nested_set", "_autosummary/flasc.utilities.tuner_utilities.replicate_nan_values", "_autosummary/flasc.utilities.tuner_utilities.resim_floris", "_autosummary/flasc.utilities.utilities", "_autosummary/flasc.utilities.utilities.estimate_dt", "_autosummary/flasc.utilities.utilities.get_num_turbines", "_autosummary/flasc.utilities.utilities.interp_with_max_gap", "_autosummary/flasc.utilities.utilities_examples", "_autosummary/flasc.utilities.utilities_examples.load_floris_artificial", "_autosummary/flasc.utilities.utilities_examples.load_floris_smarteole", "api", "data_processing", "energy_ratio", "examples/03_energy_ratio/00_demo_energy_ratio_syntax", "examples/03_energy_ratio/01_demo_energy_ratio_options", "flasc_data_format", "getting_started", "index", "installation", "licensing", "overview", "total_uplift"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/flasc.analysis.rst", "_autosummary/flasc.analysis.energy_ratio.rst", "_autosummary/flasc.analysis.energy_ratio.compute_energy_ratio.rst", "_autosummary/flasc.analysis.energy_ratio_heterogeneity_mapper.rst", "_autosummary/flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.rst", "_autosummary/flasc.analysis.energy_ratio_input.rst", "_autosummary/flasc.analysis.energy_ratio_input.EnergyRatioInput.rst", "_autosummary/flasc.analysis.energy_ratio_input.generate_block_list.rst", "_autosummary/flasc.analysis.energy_ratio_output.rst", "_autosummary/flasc.analysis.energy_ratio_output.EnergyRatioOutput.rst", "_autosummary/flasc.analysis.total_uplift.rst", "_autosummary/flasc.analysis.total_uplift.compute_total_uplift.rst", "_autosummary/flasc.data_processing.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.df_drop_nan_rows.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.df_find_and_fill_data_gaps_with_missing.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.df_reduce_precision.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.df_sort_and_find_duplicates.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.df_sort_and_fix_duplicates.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.filter_df_by_ti.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.filter_df_by_wd.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.filter_df_by_ws.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.get_column_mean.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.get_num_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.is_day_or_night.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.plot_sun_altitude_with_day_night_color.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_pow_ref_by_n_closest_upstream_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_pow_ref_by_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines_in_radius.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ti_by_all_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ti_by_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines_in_radius.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_wd_by_all_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_wd_by_radius_from_turbine.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_wd_by_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_all_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_n_closest_upstream_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines.rst", "_autosummary/flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines_in_radius.rst", "_autosummary/flasc.data_processing.energy_ratio_wd_bias_estimation.rst", "_autosummary/flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation.rst", "_autosummary/flasc.data_processing.filtering.rst", "_autosummary/flasc.data_processing.filtering.FlascFilter.rst", "_autosummary/flasc.data_processing.filtering.df_get_no_faulty_measurements.rst", "_autosummary/flasc.data_processing.filtering.df_mark_turbdata_as_faulty.rst", "_autosummary/flasc.data_processing.filtering.filter_df_by_faulty_impacting_turbines.rst", "_autosummary/flasc.data_processing.find_sensor_faults.rst", "_autosummary/flasc.data_processing.find_sensor_faults.find_sensor_stuck_faults.rst", "_autosummary/flasc.data_processing.northing_offset.rst", "_autosummary/flasc.data_processing.northing_offset.crosscheck_northing_offset_consistency.rst", "_autosummary/flasc.data_processing.time_operations.rst", "_autosummary/flasc.data_processing.time_operations.df_downsample.rst", "_autosummary/flasc.data_processing.time_operations.df_movingaverage.rst", "_autosummary/flasc.data_processing.time_operations.df_resample_by_interpolation.rst", "_autosummary/flasc.data_processing.time_operations.flatten_cols.rst", "_autosummary/flasc.flasc_dataframe.rst", "_autosummary/flasc.flasc_dataframe.FlascDataFrame.rst", "_autosummary/flasc.utilities.rst", "_autosummary/flasc.utilities.circular_statistics.rst", "_autosummary/flasc.utilities.circular_statistics.calc_wd_mean_radial.rst", "_autosummary/flasc.utilities.circular_statistics.calculate_wd_statistics.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.add_bin_weights.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.add_power_ref.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.add_power_test.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.add_reflected_rows.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.add_wd.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.add_wd_bin.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.add_ws.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.add_ws_bin.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.bin_and_group_dataframe.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.bin_column.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.check_compute_energy_ratio_inputs.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.cut.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.filter_all_nulls.rst", "_autosummary/flasc.utilities.energy_ratio_utilities.filter_any_nulls.rst", "_autosummary/flasc.utilities.floris_tools.rst", "_autosummary/flasc.utilities.floris_tools.add_gaussian_blending_to_floris_approx_table.rst", "_autosummary/flasc.utilities.floris_tools.calc_floris_approx_table.rst", "_autosummary/flasc.utilities.floris_tools.get_all_dependent_turbines.rst", "_autosummary/flasc.utilities.floris_tools.get_all_impacting_turbines.rst", "_autosummary/flasc.utilities.floris_tools.get_all_impacting_turbines_geometrical.rst", "_autosummary/flasc.utilities.floris_tools.get_dependent_turbines_by_wd.rst", "_autosummary/flasc.utilities.floris_tools.get_turbs_in_radius.rst", "_autosummary/flasc.utilities.floris_tools.get_upstream_turbs_floris.rst", "_autosummary/flasc.utilities.floris_tools.interpolate_floris_from_df_approx.rst", "_autosummary/flasc.utilities.lookup_table_tools.rst", "_autosummary/flasc.utilities.lookup_table_tools.get_yaw_angles_interpolant.rst", "_autosummary/flasc.utilities.optimization.rst", "_autosummary/flasc.utilities.optimization.estimate_ti.rst", "_autosummary/flasc.utilities.optimization.find_timeshift_between_dfs.rst", "_autosummary/flasc.utilities.optimization.match_y_curves_by_offset.rst", "_autosummary/flasc.utilities.tuner_utilities.rst", "_autosummary/flasc.utilities.tuner_utilities.nested_get.rst", "_autosummary/flasc.utilities.tuner_utilities.nested_set.rst", "_autosummary/flasc.utilities.tuner_utilities.replicate_nan_values.rst", "_autosummary/flasc.utilities.tuner_utilities.resim_floris.rst", "_autosummary/flasc.utilities.utilities.rst", "_autosummary/flasc.utilities.utilities.estimate_dt.rst", "_autosummary/flasc.utilities.utilities.get_num_turbines.rst", "_autosummary/flasc.utilities.utilities.interp_with_max_gap.rst", "_autosummary/flasc.utilities.utilities_examples.rst", "_autosummary/flasc.utilities.utilities_examples.load_floris_artificial.rst", "_autosummary/flasc.utilities.utilities_examples.load_floris_smarteole.rst", "api.rst", "data_processing.rst", "energy_ratio.md", "examples/03_energy_ratio/00_demo_energy_ratio_syntax.ipynb", "examples/03_energy_ratio/01_demo_energy_ratio_options.ipynb", "flasc_data_format.ipynb", "getting_started.md", "index.md", "installation.md", "licensing.rst", "overview.md", "total_uplift.md"], "indexentries": {"_attrs (flasc.flasc_dataframe.flascdataframe attribute)": [[59, "flasc.flasc_dataframe.FlascDataFrame._attrs", false]], "_cache (flasc.flasc_dataframe.flascdataframe attribute)": [[59, "flasc.flasc_dataframe.FlascDataFrame._cache", false]], "_compute_energy_ratio_bootstrap() (in module flasc.analysis.energy_ratio)": [[1, "flasc.analysis.energy_ratio._compute_energy_ratio_bootstrap", false]], "_compute_energy_ratio_single() (in module flasc.analysis.energy_ratio)": [[1, "flasc.analysis.energy_ratio._compute_energy_ratio_single", false]], "_compute_total_uplift_bootstrap() (in module flasc.analysis.total_uplift)": [[10, "flasc.analysis.total_uplift._compute_total_uplift_bootstrap", false]], "_compute_total_uplift_single() (in module flasc.analysis.total_uplift)": [[10, "flasc.analysis.total_uplift._compute_total_uplift_single", false]], "_compute_ws_counts() (flasc.analysis.energy_ratio_output.energyratiooutput method)": [[8, "flasc.analysis.energy_ratio_output.EnergyRatioOutput._compute_ws_counts", false], [9, "flasc.analysis.energy_ratio_output.EnergyRatioOutput._compute_ws_counts", false]], "_constructor (flasc.flasc_dataframe.flascdataframe property)": [[58, "flasc.flasc_dataframe.FlascDataFrame._constructor", false], [59, "flasc.flasc_dataframe.FlascDataFrame._constructor", false]], "_convert_long_to_wide() (flasc.flasc_dataframe.flascdataframe method)": [[58, "flasc.flasc_dataframe.FlascDataFrame._convert_long_to_wide", false], [59, "flasc.flasc_dataframe.FlascDataFrame._convert_long_to_wide", false]], "_convert_wide_to_long() (flasc.flasc_dataframe.flascdataframe method)": [[58, "flasc.flasc_dataframe.FlascDataFrame._convert_wide_to_long", false], [59, "flasc.flasc_dataframe.FlascDataFrame._convert_wide_to_long", false]], "_fi_set_ws_wd_ti() (in module flasc.utilities.floris_tools)": [[79, "flasc.utilities.floris_tools._fi_set_ws_wd_ti", false]], "_find_sensor_stuck_single_timearray() (in module flasc.data_processing.find_sensor_faults)": [[49, "flasc.data_processing.find_sensor_faults._find_sensor_stuck_single_timearray", false]], "_get_all_unique_flags() (flasc.data_processing.filtering.flascfilter method)": [[44, "flasc.data_processing.filtering.FlascFilter._get_all_unique_flags", false], [45, "flasc.data_processing.filtering.FlascFilter._get_all_unique_flags", false]], "_get_energy_ratio() (in module flasc.analysis.energy_ratio_heterogeneity_mapper)": [[3, "flasc.analysis.energy_ratio_heterogeneity_mapper._get_energy_ratio", false]], "_get_energy_ratios_allbins() (flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation method)": [[42, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation._get_energy_ratios_allbins", false], [43, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation._get_energy_ratios_allbins", false]], "_get_mean_power_curves() (flasc.data_processing.filtering.flascfilter method)": [[44, "flasc.data_processing.filtering.FlascFilter._get_mean_power_curves", false], [45, "flasc.data_processing.filtering.FlascFilter._get_mean_power_curves", false]], "_interpolate_with_max_gap() (in module flasc.utilities.utilities)": [[100, "flasc.utilities.utilities._interpolate_with_max_gap", false]], "_load_er_input_for_wd_bias() (flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation method)": [[42, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation._load_er_input_for_wd_bias", false], [43, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation._load_er_input_for_wd_bias", false]], "_metadata (flasc.flasc_dataframe.flascdataframe attribute)": [[58, "flasc.flasc_dataframe.FlascDataFrame._metadata", false], [59, "flasc.flasc_dataframe.FlascDataFrame._metadata", false]], "_mgr (flasc.flasc_dataframe.flascdataframe attribute)": [[59, "flasc.flasc_dataframe.FlascDataFrame._mgr", false]], "_plot_top_sensor_faults() (in module flasc.data_processing.find_sensor_faults)": [[49, "flasc.data_processing.find_sensor_faults._plot_top_sensor_faults", false]], "_process_single_wd() (flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper method)": [[3, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper._process_single_wd", false], [4, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper._process_single_wd", false]], "_repr_html_() (flasc.flasc_dataframe.flascdataframe method)": [[58, "flasc.flasc_dataframe.FlascDataFrame._repr_html_", false], [59, "flasc.flasc_dataframe.FlascDataFrame._repr_html_", false]], "_reset_mean_power_curves() (flasc.data_processing.filtering.flascfilter method)": [[44, "flasc.data_processing.filtering.FlascFilter._reset_mean_power_curves", false], [45, "flasc.data_processing.filtering.FlascFilter._reset_mean_power_curves", false]], "_set_col_by_n_closest_upstream_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations._set_col_by_n_closest_upstream_turbines", false]], "_set_col_by_radius_from_turbine() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations._set_col_by_radius_from_turbine", false]], "_set_col_by_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations._set_col_by_turbines", false]], "_set_col_by_upstream_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations._set_col_by_upstream_turbines", false]], "_set_col_by_upstream_turbines_in_radius() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations._set_col_by_upstream_turbines_in_radius", false]], "_set_legend_alpha_to_one() (flasc.data_processing.filtering.flascfilter method)": [[44, "flasc.data_processing.filtering.FlascFilter._set_legend_alpha_to_one", false], [45, "flasc.data_processing.filtering.FlascFilter._set_legend_alpha_to_one", false]], "add_bin_weights() (in module flasc.utilities.energy_ratio_utilities)": [[64, "flasc.utilities.energy_ratio_utilities.add_bin_weights", false], [65, "flasc.utilities.energy_ratio_utilities.add_bin_weights", false]], "add_gaussian_blending_to_floris_approx_table() (in module flasc.utilities.floris_tools)": [[79, "flasc.utilities.floris_tools.add_gaussian_blending_to_floris_approx_table", false], [80, "flasc.utilities.floris_tools.add_gaussian_blending_to_floris_approx_table", false]], "add_power_ref() (in module flasc.utilities.energy_ratio_utilities)": [[64, "flasc.utilities.energy_ratio_utilities.add_power_ref", false], [66, "flasc.utilities.energy_ratio_utilities.add_power_ref", false]], "add_power_test() (in module flasc.utilities.energy_ratio_utilities)": [[64, "flasc.utilities.energy_ratio_utilities.add_power_test", false], [67, "flasc.utilities.energy_ratio_utilities.add_power_test", false]], "add_reflected_rows() (in module flasc.utilities.energy_ratio_utilities)": [[64, "flasc.utilities.energy_ratio_utilities.add_reflected_rows", false], [68, "flasc.utilities.energy_ratio_utilities.add_reflected_rows", false]], "add_wd() (in module flasc.utilities.energy_ratio_utilities)": [[64, "flasc.utilities.energy_ratio_utilities.add_wd", false], [69, "flasc.utilities.energy_ratio_utilities.add_wd", false]], "add_wd_bin() (in module flasc.utilities.energy_ratio_utilities)": [[64, "flasc.utilities.energy_ratio_utilities.add_wd_bin", false], [70, "flasc.utilities.energy_ratio_utilities.add_wd_bin", false]], "add_ws() (in module flasc.utilities.energy_ratio_utilities)": [[64, "flasc.utilities.energy_ratio_utilities.add_ws", false], [71, "flasc.utilities.energy_ratio_utilities.add_ws", false]], "add_ws_bin() (in module flasc.utilities.energy_ratio_utilities)": [[64, "flasc.utilities.energy_ratio_utilities.add_ws_bin", false], [72, "flasc.utilities.energy_ratio_utilities.add_ws_bin", false]], "bias_estimation (class in flasc.data_processing.energy_ratio_wd_bias_estimation)": [[42, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation", false], [43, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation", false]], "bin_and_group_dataframe() (in module flasc.utilities.energy_ratio_utilities)": [[64, "flasc.utilities.energy_ratio_utilities.bin_and_group_dataframe", false], [73, "flasc.utilities.energy_ratio_utilities.bin_and_group_dataframe", false]], "bin_column() (in module flasc.utilities.energy_ratio_utilities)": [[64, "flasc.utilities.energy_ratio_utilities.bin_column", false], [74, "flasc.utilities.energy_ratio_utilities.bin_column", false]], "calc_floris_approx_table() (in module flasc.utilities.floris_tools)": [[79, "flasc.utilities.floris_tools.calc_floris_approx_table", false], [81, "flasc.utilities.floris_tools.calc_floris_approx_table", false]], "calc_wd_mean_radial() (in module flasc.utilities.circular_statistics)": [[61, "flasc.utilities.circular_statistics.calc_wd_mean_radial", false], [62, "flasc.utilities.circular_statistics.calc_wd_mean_radial", false]], "calculate_baseline() (flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation method)": [[42, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation.calculate_baseline", false], [43, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation.calculate_baseline", false]], "calculate_wd_statistics() (in module flasc.utilities.circular_statistics)": [[61, "flasc.utilities.circular_statistics.calculate_wd_statistics", false], [63, "flasc.utilities.circular_statistics.calculate_wd_statistics", false]], "check_compute_energy_ratio_inputs() (in module flasc.utilities.energy_ratio_utilities)": [[64, "flasc.utilities.energy_ratio_utilities.check_compute_energy_ratio_inputs", false], [75, "flasc.utilities.energy_ratio_utilities.check_compute_energy_ratio_inputs", false]], "check_flasc_format() (flasc.flasc_dataframe.flascdataframe method)": [[58, "flasc.flasc_dataframe.FlascDataFrame.check_flasc_format", false], [59, "flasc.flasc_dataframe.FlascDataFrame.check_flasc_format", false]], "compute_energy_ratio() (in module flasc.analysis.energy_ratio)": [[1, "flasc.analysis.energy_ratio.compute_energy_ratio", false], [2, "flasc.analysis.energy_ratio.compute_energy_ratio", false]], "compute_total_uplift() (in module flasc.analysis.total_uplift)": [[10, "flasc.analysis.total_uplift.compute_total_uplift", false], [11, "flasc.analysis.total_uplift.compute_total_uplift", false]], "convert_time_to_datetime() (flasc.flasc_dataframe.flascdataframe method)": [[58, "flasc.flasc_dataframe.FlascDataFrame.convert_time_to_datetime", false], [59, "flasc.flasc_dataframe.FlascDataFrame.convert_time_to_datetime", false]], "convert_to_flasc_format() (flasc.flasc_dataframe.flascdataframe method)": [[58, "flasc.flasc_dataframe.FlascDataFrame.convert_to_flasc_format", false], [59, "flasc.flasc_dataframe.FlascDataFrame.convert_to_flasc_format", false]], "convert_to_user_format() (flasc.flasc_dataframe.flascdataframe method)": [[58, "flasc.flasc_dataframe.FlascDataFrame.convert_to_user_format", false], [59, "flasc.flasc_dataframe.FlascDataFrame.convert_to_user_format", false]], "copy_metadata() (flasc.flasc_dataframe.flascdataframe method)": [[58, "flasc.flasc_dataframe.FlascDataFrame.copy_metadata", false], [59, "flasc.flasc_dataframe.FlascDataFrame.copy_metadata", false]], "crosscheck_northing_offset_consistency() (in module flasc.data_processing.northing_offset)": [[51, "flasc.data_processing.northing_offset.crosscheck_northing_offset_consistency", false], [52, "flasc.data_processing.northing_offset.crosscheck_northing_offset_consistency", false]], "cut() (in module flasc.utilities.energy_ratio_utilities)": [[64, "flasc.utilities.energy_ratio_utilities.cut", false], [76, "flasc.utilities.energy_ratio_utilities.cut", false]], "df_downsample() (in module flasc.data_processing.time_operations)": [[53, "flasc.data_processing.time_operations.df_downsample", false], [54, "flasc.data_processing.time_operations.df_downsample", false]], "df_drop_nan_rows() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.df_drop_nan_rows", false], [14, "flasc.data_processing.dataframe_manipulations.df_drop_nan_rows", false]], "df_find_and_fill_data_gaps_with_missing() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.df_find_and_fill_data_gaps_with_missing", false], [15, "flasc.data_processing.dataframe_manipulations.df_find_and_fill_data_gaps_with_missing", false]], "df_get_no_faulty_measurements() (in module flasc.data_processing.filtering)": [[44, "flasc.data_processing.filtering.df_get_no_faulty_measurements", false], [46, "flasc.data_processing.filtering.df_get_no_faulty_measurements", false]], "df_mark_turbdata_as_faulty() (in module flasc.data_processing.filtering)": [[44, "flasc.data_processing.filtering.df_mark_turbdata_as_faulty", false], [47, "flasc.data_processing.filtering.df_mark_turbdata_as_faulty", false]], "df_movingaverage() (in module flasc.data_processing.time_operations)": [[53, "flasc.data_processing.time_operations.df_movingaverage", false], [55, "flasc.data_processing.time_operations.df_movingaverage", false]], "df_reduce_precision() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.df_reduce_precision", false], [16, "flasc.data_processing.dataframe_manipulations.df_reduce_precision", false]], "df_resample_by_interpolation() (in module flasc.data_processing.time_operations)": [[53, "flasc.data_processing.time_operations.df_resample_by_interpolation", false], [56, "flasc.data_processing.time_operations.df_resample_by_interpolation", false]], "df_sort_and_find_duplicates() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.df_sort_and_find_duplicates", false], [17, "flasc.data_processing.dataframe_manipulations.df_sort_and_find_duplicates", false]], "df_sort_and_fix_duplicates() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.df_sort_and_fix_duplicates", false], [18, "flasc.data_processing.dataframe_manipulations.df_sort_and_fix_duplicates", false]], "energyratioinput (class in flasc.analysis.energy_ratio_input)": [[5, "flasc.analysis.energy_ratio_input.EnergyRatioInput", false], [6, "flasc.analysis.energy_ratio_input.EnergyRatioInput", false]], "energyratiooutput (class in flasc.analysis.energy_ratio_output)": [[8, "flasc.analysis.energy_ratio_output.EnergyRatioOutput", false], [9, "flasc.analysis.energy_ratio_output.EnergyRatioOutput", false]], "estimate_dt() (in module flasc.utilities.utilities)": [[100, "flasc.utilities.utilities.estimate_dt", false], [101, "flasc.utilities.utilities.estimate_dt", false]], "estimate_heterogeneity() (flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper method)": [[3, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.estimate_heterogeneity", false], [4, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.estimate_heterogeneity", false]], "estimate_ti() (in module flasc.utilities.optimization)": [[91, "flasc.utilities.optimization.estimate_ti", false], [92, "flasc.utilities.optimization.estimate_ti", false]], "estimate_wd_bias() (flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation method)": [[42, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation.estimate_wd_bias", false], [43, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation.estimate_wd_bias", false]], "export_to_windup_format() (flasc.flasc_dataframe.flascdataframe method)": [[58, "flasc.flasc_dataframe.FlascDataFrame.export_to_windup_format", false], [59, "flasc.flasc_dataframe.FlascDataFrame.export_to_windup_format", false]], "filter_all_nulls() (in module flasc.utilities.energy_ratio_utilities)": [[64, "flasc.utilities.energy_ratio_utilities.filter_all_nulls", false], [77, "flasc.utilities.energy_ratio_utilities.filter_all_nulls", false]], "filter_any_nulls() (in module flasc.utilities.energy_ratio_utilities)": [[64, "flasc.utilities.energy_ratio_utilities.filter_any_nulls", false], [78, "flasc.utilities.energy_ratio_utilities.filter_any_nulls", false]], "filter_by_condition() (flasc.data_processing.filtering.flascfilter method)": [[44, "flasc.data_processing.filtering.FlascFilter.filter_by_condition", false], [45, "flasc.data_processing.filtering.FlascFilter.filter_by_condition", false]], "filter_by_floris_power_curve() (flasc.data_processing.filtering.flascfilter method)": [[44, "flasc.data_processing.filtering.FlascFilter.filter_by_floris_power_curve", false], [45, "flasc.data_processing.filtering.FlascFilter.filter_by_floris_power_curve", false]], "filter_by_power_curve() (flasc.data_processing.filtering.flascfilter method)": [[44, "flasc.data_processing.filtering.FlascFilter.filter_by_power_curve", false], [45, "flasc.data_processing.filtering.FlascFilter.filter_by_power_curve", false]], "filter_by_sensor_stuck_faults() (flasc.data_processing.filtering.flascfilter method)": [[44, "flasc.data_processing.filtering.FlascFilter.filter_by_sensor_stuck_faults", false], [45, "flasc.data_processing.filtering.FlascFilter.filter_by_sensor_stuck_faults", false]], "filter_df_by_faulty_impacting_turbines() (in module flasc.data_processing.filtering)": [[44, "flasc.data_processing.filtering.filter_df_by_faulty_impacting_turbines", false], [48, "flasc.data_processing.filtering.filter_df_by_faulty_impacting_turbines", false]], "filter_df_by_ti() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.filter_df_by_ti", false], [19, "flasc.data_processing.dataframe_manipulations.filter_df_by_ti", false]], "filter_df_by_wd() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.filter_df_by_wd", false], [20, "flasc.data_processing.dataframe_manipulations.filter_df_by_wd", false]], "filter_df_by_ws() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.filter_df_by_ws", false], [21, "flasc.data_processing.dataframe_manipulations.filter_df_by_ws", false]], "find_sensor_stuck_faults() (in module flasc.data_processing.find_sensor_faults)": [[49, "flasc.data_processing.find_sensor_faults.find_sensor_stuck_faults", false], [50, "flasc.data_processing.find_sensor_faults.find_sensor_stuck_faults", false]], "find_timeshift_between_dfs() (in module flasc.utilities.optimization)": [[91, "flasc.utilities.optimization.find_timeshift_between_dfs", false], [93, "flasc.utilities.optimization.find_timeshift_between_dfs", false]], "flasc.analysis": [[0, "module-flasc.analysis", false]], "flasc.analysis.energy_ratio": [[1, "module-flasc.analysis.energy_ratio", false]], "flasc.analysis.energy_ratio_heterogeneity_mapper": [[3, "module-flasc.analysis.energy_ratio_heterogeneity_mapper", false]], "flasc.analysis.energy_ratio_input": [[5, "module-flasc.analysis.energy_ratio_input", false]], "flasc.analysis.energy_ratio_output": [[8, "module-flasc.analysis.energy_ratio_output", false]], "flasc.analysis.total_uplift": [[10, "module-flasc.analysis.total_uplift", false]], "flasc.data_processing": [[12, "module-flasc.data_processing", false]], "flasc.data_processing.dataframe_manipulations": [[13, "module-flasc.data_processing.dataframe_manipulations", false]], "flasc.data_processing.energy_ratio_wd_bias_estimation": [[42, "module-flasc.data_processing.energy_ratio_wd_bias_estimation", false]], "flasc.data_processing.filtering": [[44, "module-flasc.data_processing.filtering", false]], "flasc.data_processing.find_sensor_faults": [[49, "module-flasc.data_processing.find_sensor_faults", false]], "flasc.data_processing.northing_offset": [[51, "module-flasc.data_processing.northing_offset", false]], "flasc.data_processing.time_operations": [[53, "module-flasc.data_processing.time_operations", false]], "flasc.flasc_dataframe": [[58, "module-flasc.flasc_dataframe", false]], "flasc.utilities": [[60, "module-flasc.utilities", false]], "flasc.utilities.circular_statistics": [[61, "module-flasc.utilities.circular_statistics", false]], "flasc.utilities.energy_ratio_utilities": [[64, "module-flasc.utilities.energy_ratio_utilities", false]], "flasc.utilities.floris_tools": [[79, "module-flasc.utilities.floris_tools", false]], "flasc.utilities.lookup_table_tools": [[89, "module-flasc.utilities.lookup_table_tools", false]], "flasc.utilities.optimization": [[91, "module-flasc.utilities.optimization", false]], "flasc.utilities.tuner_utilities": [[95, "module-flasc.utilities.tuner_utilities", false]], "flasc.utilities.utilities": [[100, "module-flasc.utilities.utilities", false]], "flasc.utilities.utilities_examples": [[104, "module-flasc.utilities.utilities_examples", false]], "flascdataframe (class in flasc.flasc_dataframe)": [[58, "flasc.flasc_dataframe.FlascDataFrame", false], [59, "flasc.flasc_dataframe.FlascDataFrame", false]], "flascfilter (class in flasc.data_processing.filtering)": [[44, "flasc.data_processing.filtering.FlascFilter", false], [45, "flasc.data_processing.filtering.FlascFilter", false]], "flatten_cols() (in module flasc.data_processing.time_operations)": [[53, "flasc.data_processing.time_operations.flatten_cols", false], [57, "flasc.data_processing.time_operations.flatten_cols", false]], "generate_block_list() (in module flasc.analysis.energy_ratio_input)": [[5, "flasc.analysis.energy_ratio_input.generate_block_list", false], [7, "flasc.analysis.energy_ratio_input.generate_block_list", false]], "generate_floris_hetmap() (flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper method)": [[3, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.generate_floris_hetmap", false], [4, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.generate_floris_hetmap", false]], "get_all_dependent_turbines() (in module flasc.utilities.floris_tools)": [[79, "flasc.utilities.floris_tools.get_all_dependent_turbines", false], [82, "flasc.utilities.floris_tools.get_all_dependent_turbines", false]], "get_all_impacting_turbines() (in module flasc.utilities.floris_tools)": [[79, "flasc.utilities.floris_tools.get_all_impacting_turbines", false], [83, "flasc.utilities.floris_tools.get_all_impacting_turbines", false]], "get_all_impacting_turbines_geometrical() (in module flasc.utilities.floris_tools)": [[79, "flasc.utilities.floris_tools.get_all_impacting_turbines_geometrical", false], [84, "flasc.utilities.floris_tools.get_all_impacting_turbines_geometrical", false]], "get_column_mean() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.get_column_mean", false], [22, "flasc.data_processing.dataframe_manipulations.get_column_mean", false]], "get_dependent_turbines_by_wd() (in module flasc.utilities.floris_tools)": [[79, "flasc.utilities.floris_tools.get_dependent_turbines_by_wd", false], [85, "flasc.utilities.floris_tools.get_dependent_turbines_by_wd", false]], "get_df() (flasc.analysis.energy_ratio_input.energyratioinput method)": [[5, "flasc.analysis.energy_ratio_input.EnergyRatioInput.get_df", false], [6, "flasc.analysis.energy_ratio_input.EnergyRatioInput.get_df", false]], "get_df() (flasc.data_processing.filtering.flascfilter method)": [[44, "flasc.data_processing.filtering.FlascFilter.get_df", false], [45, "flasc.data_processing.filtering.FlascFilter.get_df", false]], "get_num_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.get_num_turbines", false], [23, "flasc.data_processing.dataframe_manipulations.get_num_turbines", false]], "get_num_turbines() (in module flasc.utilities.utilities)": [[100, "flasc.utilities.utilities.get_num_turbines", false], [102, "flasc.utilities.utilities.get_num_turbines", false]], "get_power_curve() (flasc.data_processing.filtering.flascfilter method)": [[44, "flasc.data_processing.filtering.FlascFilter.get_power_curve", false], [45, "flasc.data_processing.filtering.FlascFilter.get_power_curve", false]], "get_turbs_in_radius() (in module flasc.utilities.floris_tools)": [[79, "flasc.utilities.floris_tools.get_turbs_in_radius", false], [86, "flasc.utilities.floris_tools.get_turbs_in_radius", false]], "get_upstream_turbs_floris() (in module flasc.utilities.floris_tools)": [[79, "flasc.utilities.floris_tools.get_upstream_turbs_floris", false], [87, "flasc.utilities.floris_tools.get_upstream_turbs_floris", false]], "get_yaw_angles_interpolant() (in module flasc.utilities.lookup_table_tools)": [[89, "flasc.utilities.lookup_table_tools.get_yaw_angles_interpolant", false], [90, "flasc.utilities.lookup_table_tools.get_yaw_angles_interpolant", false]], "heterogeneity_mapper (class in flasc.analysis.energy_ratio_heterogeneity_mapper)": [[3, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper", false], [4, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper", false]], "in_flasc_format (flasc.flasc_dataframe.flascdataframe property)": [[58, "flasc.flasc_dataframe.FlascDataFrame.in_flasc_format", false], [59, "flasc.flasc_dataframe.FlascDataFrame.in_flasc_format", false]], "interp_with_max_gap() (in module flasc.utilities.utilities)": [[100, "flasc.utilities.utilities.interp_with_max_gap", false], [103, "flasc.utilities.utilities.interp_with_max_gap", false]], "interpolate_floris_from_df_approx() (in module flasc.utilities.floris_tools)": [[79, "flasc.utilities.floris_tools.interpolate_floris_from_df_approx", false], [88, "flasc.utilities.floris_tools.interpolate_floris_from_df_approx", false]], "is_day_or_night() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.is_day_or_night", false], [24, "flasc.data_processing.dataframe_manipulations.is_day_or_night", false]], "load_floris_artificial() (in module flasc.utilities.utilities_examples)": [[104, "flasc.utilities.utilities_examples.load_floris_artificial", false], [105, "flasc.utilities.utilities_examples.load_floris_artificial", false]], "load_floris_smarteole() (in module flasc.utilities.utilities_examples)": [[104, "flasc.utilities.utilities_examples.load_floris_smarteole", false], [106, "flasc.utilities.utilities_examples.load_floris_smarteole", false]], "match_y_curves_by_offset() (in module flasc.utilities.optimization)": [[91, "flasc.utilities.optimization.match_y_curves_by_offset", false], [94, "flasc.utilities.optimization.match_y_curves_by_offset", false]], "module": [[0, "module-flasc.analysis", false], [1, "module-flasc.analysis.energy_ratio", false], [3, "module-flasc.analysis.energy_ratio_heterogeneity_mapper", false], [5, "module-flasc.analysis.energy_ratio_input", false], [8, "module-flasc.analysis.energy_ratio_output", false], [10, "module-flasc.analysis.total_uplift", false], [12, "module-flasc.data_processing", false], [13, "module-flasc.data_processing.dataframe_manipulations", false], [42, "module-flasc.data_processing.energy_ratio_wd_bias_estimation", false], [44, "module-flasc.data_processing.filtering", false], [49, "module-flasc.data_processing.find_sensor_faults", false], [51, "module-flasc.data_processing.northing_offset", false], [53, "module-flasc.data_processing.time_operations", false], [58, "module-flasc.flasc_dataframe", false], [60, "module-flasc.utilities", false], [61, "module-flasc.utilities.circular_statistics", false], [64, "module-flasc.utilities.energy_ratio_utilities", false], [79, "module-flasc.utilities.floris_tools", false], [89, "module-flasc.utilities.lookup_table_tools", false], [91, "module-flasc.utilities.optimization", false], [95, "module-flasc.utilities.tuner_utilities", false], [100, "module-flasc.utilities.utilities", false], [104, "module-flasc.utilities.utilities_examples", false]], "n_turbines (flasc.flasc_dataframe.flascdataframe property)": [[58, "flasc.flasc_dataframe.FlascDataFrame.n_turbines", false], [59, "flasc.flasc_dataframe.FlascDataFrame.n_turbines", false]], "nested_get() (in module flasc.utilities.tuner_utilities)": [[95, "flasc.utilities.tuner_utilities.nested_get", false], [96, "flasc.utilities.tuner_utilities.nested_get", false]], "nested_set() (in module flasc.utilities.tuner_utilities)": [[95, "flasc.utilities.tuner_utilities.nested_set", false], [97, "flasc.utilities.tuner_utilities.nested_set", false]], "plot_energy_ratios() (flasc.analysis.energy_ratio_output.energyratiooutput method)": [[8, "flasc.analysis.energy_ratio_output.EnergyRatioOutput.plot_energy_ratios", false], [9, "flasc.analysis.energy_ratio_output.EnergyRatioOutput.plot_energy_ratios", false]], "plot_energy_ratios() (flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation method)": [[42, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation.plot_energy_ratios", false], [43, "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation.plot_energy_ratios", false]], "plot_farm_mean_power_curve() (flasc.data_processing.filtering.flascfilter method)": [[44, "flasc.data_processing.filtering.FlascFilter.plot_farm_mean_power_curve", false], [45, "flasc.data_processing.filtering.FlascFilter.plot_farm_mean_power_curve", false]], "plot_filters_custom_scatter() (flasc.data_processing.filtering.flascfilter method)": [[44, "flasc.data_processing.filtering.FlascFilter.plot_filters_custom_scatter", false], [45, "flasc.data_processing.filtering.FlascFilter.plot_filters_custom_scatter", false]], "plot_filters_custom_scatter_bokeh() (flasc.data_processing.filtering.flascfilter method)": [[44, "flasc.data_processing.filtering.FlascFilter.plot_filters_custom_scatter_bokeh", false], [45, "flasc.data_processing.filtering.FlascFilter.plot_filters_custom_scatter_bokeh", false]], "plot_filters_in_time() (flasc.data_processing.filtering.flascfilter method)": [[44, "flasc.data_processing.filtering.FlascFilter.plot_filters_in_time", false], [45, "flasc.data_processing.filtering.FlascFilter.plot_filters_in_time", false]], "plot_filters_in_time_bokeh() (flasc.data_processing.filtering.flascfilter method)": [[44, "flasc.data_processing.filtering.FlascFilter.plot_filters_in_time_bokeh", false], [45, "flasc.data_processing.filtering.FlascFilter.plot_filters_in_time_bokeh", false]], "plot_filters_in_ws_power_curve() (flasc.data_processing.filtering.flascfilter method)": [[44, "flasc.data_processing.filtering.FlascFilter.plot_filters_in_ws_power_curve", false], [45, "flasc.data_processing.filtering.FlascFilter.plot_filters_in_ws_power_curve", false]], "plot_graphs() (flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper method)": [[3, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.plot_graphs", false], [4, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.plot_graphs", false]], "plot_layout() (flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper method)": [[3, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.plot_layout", false], [4, "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper.plot_layout", false]], "plot_postprocessed_in_ws_power_curve() (flasc.data_processing.filtering.flascfilter method)": [[44, "flasc.data_processing.filtering.FlascFilter.plot_postprocessed_in_ws_power_curve", false], [45, "flasc.data_processing.filtering.FlascFilter.plot_postprocessed_in_ws_power_curve", false]], "plot_sun_altitude_with_day_night_color() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.plot_sun_altitude_with_day_night_color", false], [25, "flasc.data_processing.dataframe_manipulations.plot_sun_altitude_with_day_night_color", false]], "plot_uplift() (flasc.analysis.energy_ratio_output.energyratiooutput method)": [[8, "flasc.analysis.energy_ratio_output.EnergyRatioOutput.plot_uplift", false], [9, "flasc.analysis.energy_ratio_output.EnergyRatioOutput.plot_uplift", false]], "replicate_nan_values() (in module flasc.utilities.tuner_utilities)": [[95, "flasc.utilities.tuner_utilities.replicate_nan_values", false], [98, "flasc.utilities.tuner_utilities.replicate_nan_values", false]], "resample_energy_table() (flasc.analysis.energy_ratio_input.energyratioinput method)": [[5, "flasc.analysis.energy_ratio_input.EnergyRatioInput.resample_energy_table", false], [6, "flasc.analysis.energy_ratio_input.EnergyRatioInput.resample_energy_table", false]], "reset_filters() (flasc.data_processing.filtering.flascfilter method)": [[44, "flasc.data_processing.filtering.FlascFilter.reset_filters", false], [45, "flasc.data_processing.filtering.FlascFilter.reset_filters", false]], "resim_floris() (in module flasc.utilities.tuner_utilities)": [[95, "flasc.utilities.tuner_utilities.resim_floris", false], [99, "flasc.utilities.tuner_utilities.resim_floris", false]], "set_pow_ref_by_n_closest_upstream_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_n_closest_upstream_turbines", false], [26, "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_n_closest_upstream_turbines", false]], "set_pow_ref_by_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_turbines", false], [27, "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_turbines", false]], "set_pow_ref_by_upstream_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines", false], [28, "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines", false]], "set_pow_ref_by_upstream_turbines_in_radius() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines_in_radius", false], [29, "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines_in_radius", false]], "set_ti_by_all_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_ti_by_all_turbines", false], [30, "flasc.data_processing.dataframe_manipulations.set_ti_by_all_turbines", false]], "set_ti_by_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_ti_by_turbines", false], [31, "flasc.data_processing.dataframe_manipulations.set_ti_by_turbines", false]], "set_ti_by_upstream_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines", false], [32, "flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines", false]], "set_ti_by_upstream_turbines_in_radius() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines_in_radius", false], [33, "flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines_in_radius", false]], "set_wd_by_all_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_wd_by_all_turbines", false], [34, "flasc.data_processing.dataframe_manipulations.set_wd_by_all_turbines", false]], "set_wd_by_radius_from_turbine() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_wd_by_radius_from_turbine", false], [35, "flasc.data_processing.dataframe_manipulations.set_wd_by_radius_from_turbine", false]], "set_wd_by_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_wd_by_turbines", false], [36, "flasc.data_processing.dataframe_manipulations.set_wd_by_turbines", false]], "set_ws_by_all_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_ws_by_all_turbines", false], [37, "flasc.data_processing.dataframe_manipulations.set_ws_by_all_turbines", false]], "set_ws_by_n_closest_upstream_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_ws_by_n_closest_upstream_turbines", false], [38, "flasc.data_processing.dataframe_manipulations.set_ws_by_n_closest_upstream_turbines", false]], "set_ws_by_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_ws_by_turbines", false], [39, "flasc.data_processing.dataframe_manipulations.set_ws_by_turbines", false]], "set_ws_by_upstream_turbines() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines", false], [40, "flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines", false]], "set_ws_by_upstream_turbines_in_radius() (in module flasc.data_processing.dataframe_manipulations)": [[13, "flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines_in_radius", false], [41, "flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines_in_radius", false]], "to_feather() (flasc.flasc_dataframe.flascdataframe method)": [[58, "flasc.flasc_dataframe.FlascDataFrame.to_feather", false], [59, "flasc.flasc_dataframe.FlascDataFrame.to_feather", false]]}, "objects": {"flasc": [[0, 0, 0, "-", "analysis"], [12, 0, 0, "-", "data_processing"], [58, 0, 0, "-", "flasc_dataframe"], [60, 0, 0, "-", "utilities"]], "flasc.analysis": [[1, 0, 0, "-", "energy_ratio"], [3, 0, 0, "-", "energy_ratio_heterogeneity_mapper"], [5, 0, 0, "-", "energy_ratio_input"], [8, 0, 0, "-", "energy_ratio_output"], [10, 0, 0, "-", "total_uplift"]], "flasc.analysis.energy_ratio": [[1, 1, 1, "", "_compute_energy_ratio_bootstrap"], [1, 1, 1, "", "_compute_energy_ratio_single"], [2, 1, 1, "", "compute_energy_ratio"]], "flasc.analysis.energy_ratio_heterogeneity_mapper": [[3, 1, 1, "", "_get_energy_ratio"], [4, 2, 1, "", "heterogeneity_mapper"]], "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper": [[4, 3, 1, "", "_process_single_wd"], [4, 3, 1, "", "estimate_heterogeneity"], [4, 3, 1, "", "generate_floris_hetmap"], [4, 3, 1, "", "plot_graphs"], [4, 3, 1, "", "plot_layout"]], "flasc.analysis.energy_ratio_input": [[6, 2, 1, "", "EnergyRatioInput"], [7, 1, 1, "", "generate_block_list"]], "flasc.analysis.energy_ratio_input.EnergyRatioInput": [[6, 3, 1, "", "get_df"], [6, 3, 1, "", "resample_energy_table"]], "flasc.analysis.energy_ratio_output": [[9, 2, 1, "", "EnergyRatioOutput"]], "flasc.analysis.energy_ratio_output.EnergyRatioOutput": [[9, 3, 1, "", "_compute_ws_counts"], [9, 3, 1, "", "plot_energy_ratios"], [9, 3, 1, "", "plot_uplift"]], "flasc.analysis.total_uplift": [[10, 1, 1, "", "_compute_total_uplift_bootstrap"], [10, 1, 1, "", "_compute_total_uplift_single"], [11, 1, 1, "", "compute_total_uplift"]], "flasc.data_processing": [[13, 0, 0, "-", "dataframe_manipulations"], [42, 0, 0, "-", "energy_ratio_wd_bias_estimation"], [44, 0, 0, "-", "filtering"], [49, 0, 0, "-", "find_sensor_faults"], [51, 0, 0, "-", "northing_offset"], [53, 0, 0, "-", "time_operations"]], "flasc.data_processing.dataframe_manipulations": [[13, 1, 1, "", "_set_col_by_n_closest_upstream_turbines"], [13, 1, 1, "", "_set_col_by_radius_from_turbine"], [13, 1, 1, "", "_set_col_by_turbines"], [13, 1, 1, "", "_set_col_by_upstream_turbines"], [13, 1, 1, "", "_set_col_by_upstream_turbines_in_radius"], [14, 1, 1, "", "df_drop_nan_rows"], [15, 1, 1, "", "df_find_and_fill_data_gaps_with_missing"], [16, 1, 1, "", "df_reduce_precision"], [17, 1, 1, "", "df_sort_and_find_duplicates"], [18, 1, 1, "", "df_sort_and_fix_duplicates"], [19, 1, 1, "", "filter_df_by_ti"], [20, 1, 1, "", "filter_df_by_wd"], [21, 1, 1, "", "filter_df_by_ws"], [22, 1, 1, "", "get_column_mean"], [23, 1, 1, "", "get_num_turbines"], [24, 1, 1, "", "is_day_or_night"], [25, 1, 1, "", "plot_sun_altitude_with_day_night_color"], [26, 1, 1, "", "set_pow_ref_by_n_closest_upstream_turbines"], [27, 1, 1, "", "set_pow_ref_by_turbines"], [28, 1, 1, "", "set_pow_ref_by_upstream_turbines"], [29, 1, 1, "", "set_pow_ref_by_upstream_turbines_in_radius"], [30, 1, 1, "", "set_ti_by_all_turbines"], [31, 1, 1, "", "set_ti_by_turbines"], [32, 1, 1, "", "set_ti_by_upstream_turbines"], [33, 1, 1, "", "set_ti_by_upstream_turbines_in_radius"], [34, 1, 1, "", "set_wd_by_all_turbines"], [35, 1, 1, "", "set_wd_by_radius_from_turbine"], [36, 1, 1, "", "set_wd_by_turbines"], [37, 1, 1, "", "set_ws_by_all_turbines"], [38, 1, 1, "", "set_ws_by_n_closest_upstream_turbines"], [39, 1, 1, "", "set_ws_by_turbines"], [40, 1, 1, "", "set_ws_by_upstream_turbines"], [41, 1, 1, "", "set_ws_by_upstream_turbines_in_radius"]], "flasc.data_processing.energy_ratio_wd_bias_estimation": [[43, 2, 1, "", "bias_estimation"]], "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation": [[43, 3, 1, "", "_get_energy_ratios_allbins"], [43, 3, 1, "", "_load_er_input_for_wd_bias"], [43, 3, 1, "", "calculate_baseline"], [43, 3, 1, "", "estimate_wd_bias"], [43, 3, 1, "", "plot_energy_ratios"]], "flasc.data_processing.filtering": [[45, 2, 1, "", "FlascFilter"], [46, 1, 1, "", "df_get_no_faulty_measurements"], [47, 1, 1, "", "df_mark_turbdata_as_faulty"], [48, 1, 1, "", "filter_df_by_faulty_impacting_turbines"]], "flasc.data_processing.filtering.FlascFilter": [[45, 3, 1, "", "_get_all_unique_flags"], [45, 3, 1, "", "_get_mean_power_curves"], [45, 3, 1, "", "_reset_mean_power_curves"], [45, 3, 1, "", "_set_legend_alpha_to_one"], [45, 3, 1, "", "filter_by_condition"], [45, 3, 1, "", "filter_by_floris_power_curve"], [45, 3, 1, "", "filter_by_power_curve"], [45, 3, 1, "", "filter_by_sensor_stuck_faults"], [45, 3, 1, "", "get_df"], [45, 3, 1, "", "get_power_curve"], [45, 3, 1, "", "plot_farm_mean_power_curve"], [45, 3, 1, "", "plot_filters_custom_scatter"], [45, 3, 1, "", "plot_filters_custom_scatter_bokeh"], [45, 3, 1, "", "plot_filters_in_time"], [45, 3, 1, "", "plot_filters_in_time_bokeh"], [45, 3, 1, "", "plot_filters_in_ws_power_curve"], [45, 3, 1, "", "plot_postprocessed_in_ws_power_curve"], [45, 3, 1, "", "reset_filters"]], "flasc.data_processing.find_sensor_faults": [[49, 1, 1, "", "_find_sensor_stuck_single_timearray"], [49, 1, 1, "", "_plot_top_sensor_faults"], [50, 1, 1, "", "find_sensor_stuck_faults"]], "flasc.data_processing.northing_offset": [[52, 1, 1, "", "crosscheck_northing_offset_consistency"]], "flasc.data_processing.time_operations": [[54, 1, 1, "", "df_downsample"], [55, 1, 1, "", "df_movingaverage"], [56, 1, 1, "", "df_resample_by_interpolation"], [57, 1, 1, "", "flatten_cols"]], "flasc.flasc_dataframe": [[59, 2, 1, "", "FlascDataFrame"]], "flasc.flasc_dataframe.FlascDataFrame": [[59, 4, 1, "", "_attrs"], [59, 4, 1, "", "_cache"], [59, 5, 1, "", "_constructor"], [59, 3, 1, "", "_convert_long_to_wide"], [59, 3, 1, "", "_convert_wide_to_long"], [59, 4, 1, "", "_metadata"], [59, 4, 1, "", "_mgr"], [59, 3, 1, "", "_repr_html_"], [59, 3, 1, "", "check_flasc_format"], [59, 3, 1, "", "convert_time_to_datetime"], [59, 3, 1, "", "convert_to_flasc_format"], [59, 3, 1, "", "convert_to_user_format"], [59, 3, 1, "", "copy_metadata"], [59, 3, 1, "", "export_to_windup_format"], [59, 5, 1, "", "in_flasc_format"], [59, 5, 1, "", "n_turbines"], [59, 3, 1, "", "to_feather"]], "flasc.utilities": [[61, 0, 0, "-", "circular_statistics"], [64, 0, 0, "-", "energy_ratio_utilities"], [79, 0, 0, "-", "floris_tools"], [89, 0, 0, "-", "lookup_table_tools"], [91, 0, 0, "-", "optimization"], [95, 0, 0, "-", "tuner_utilities"], [100, 0, 0, "-", "utilities"], [104, 0, 0, "-", "utilities_examples"]], "flasc.utilities.circular_statistics": [[62, 1, 1, "", "calc_wd_mean_radial"], [63, 1, 1, "", "calculate_wd_statistics"]], "flasc.utilities.energy_ratio_utilities": [[65, 1, 1, "", "add_bin_weights"], [66, 1, 1, "", "add_power_ref"], [67, 1, 1, "", "add_power_test"], [68, 1, 1, "", "add_reflected_rows"], [69, 1, 1, "", "add_wd"], [70, 1, 1, "", "add_wd_bin"], [71, 1, 1, "", "add_ws"], [72, 1, 1, "", "add_ws_bin"], [73, 1, 1, "", "bin_and_group_dataframe"], [74, 1, 1, "", "bin_column"], [75, 1, 1, "", "check_compute_energy_ratio_inputs"], [76, 1, 1, "", "cut"], [77, 1, 1, "", "filter_all_nulls"], [78, 1, 1, "", "filter_any_nulls"]], "flasc.utilities.floris_tools": [[79, 1, 1, "", "_fi_set_ws_wd_ti"], [80, 1, 1, "", "add_gaussian_blending_to_floris_approx_table"], [81, 1, 1, "", "calc_floris_approx_table"], [82, 1, 1, "", "get_all_dependent_turbines"], [83, 1, 1, "", "get_all_impacting_turbines"], [84, 1, 1, "", "get_all_impacting_turbines_geometrical"], [85, 1, 1, "", "get_dependent_turbines_by_wd"], [86, 1, 1, "", "get_turbs_in_radius"], [87, 1, 1, "", "get_upstream_turbs_floris"], [88, 1, 1, "", "interpolate_floris_from_df_approx"]], "flasc.utilities.lookup_table_tools": [[90, 1, 1, "", "get_yaw_angles_interpolant"]], "flasc.utilities.optimization": [[92, 1, 1, "", "estimate_ti"], [93, 1, 1, "", "find_timeshift_between_dfs"], [94, 1, 1, "", "match_y_curves_by_offset"]], "flasc.utilities.tuner_utilities": [[96, 1, 1, "", "nested_get"], [97, 1, 1, "", "nested_set"], [98, 1, 1, "", "replicate_nan_values"], [99, 1, 1, "", "resim_floris"]], "flasc.utilities.utilities": [[100, 1, 1, "", "_interpolate_with_max_gap"], [101, 1, 1, "", "estimate_dt"], [102, 1, 1, "", "get_num_turbines"], [103, 1, 1, "", "interp_with_max_gap"]], "flasc.utilities.utilities_examples": [[105, 1, 1, "", "load_floris_artificial"], [106, 1, 1, "", "load_floris_smarteole"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property"}, "terms": {"": [13, 15, 24, 44, 45, 47, 48, 79, 81, 82, 83, 85, 87, 88, 89, 90, 104, 106, 108, 109, 110, 111, 112, 113, 115, 117], "0": [1, 2, 3, 4, 5, 7, 10, 11, 13, 15, 24, 42, 43, 44, 45, 48, 49, 50, 51, 52, 61, 62, 63, 64, 65, 68, 70, 72, 73, 79, 80, 81, 82, 83, 84, 85, 87, 88, 91, 93, 104, 105, 106, 108, 111, 112, 117], "00": [79, 88], "000": 112, "00001": [79, 84], "001": [44, 45, 49, 50, 79, 81, 82, 83, 85], "007": 112, "01": [42, 43, 44, 45, 79, 81, 88, 108], "02": 108, "022422": 112, "02_download_and_format_dataset": 113, "03": [79, 81, 88, 108], "03_energy_ratio": 109, "03d": [13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 108], "04": [42, 43, 108], "044990": 112, "047833": 112, "05": [44, 45, 49, 108], "053966": 111, "055732": 112, "06": [79, 81, 110, 111, 118], "07": 108, "072941": 111, "08": [42, 43, 79, 88], "086485": 111, "09": [79, 81], "097041": 112, "0e": [44, 45], "0e6": [79, 88], "1": [1, 2, 3, 4, 5, 7, 10, 11, 13, 15, 42, 43, 44, 45, 48, 53, 54, 55, 56, 64, 72, 73, 79, 80, 81, 84, 87, 88, 91, 93, 108, 110, 111, 112, 117], "10": [5, 6, 7, 13, 15, 42, 43, 44, 45, 79, 81, 82, 83, 85, 88, 89, 90, 91, 93, 108, 110, 111, 112], "100": [79, 81, 82, 83, 85, 88, 91, 93, 112], "1000": [110, 111, 112], "101": [79, 81], "102": [3, 4, 79, 81, 82, 83, 84, 85, 91, 93], "103": [79, 81], "104": [79, 81, 82, 83, 85, 91, 93], "105": [3, 4, 79, 81, 84], "106": [79, 81, 82, 83, 85, 91, 93], "107": [79, 81], "108": [3, 4, 79, 81, 82, 83, 84, 85, 91, 93], "108940": 112, "109": [79, 81], "11": [3, 4, 44, 45, 79, 81, 88, 108, 111], "110": [79, 81, 82, 83, 85, 91, 93], "111": [3, 4, 79, 81, 84], "112": [79, 81, 82, 83, 85, 91, 93], "113": [79, 81], "114": [3, 4, 79, 81, 82, 83, 84, 85, 91, 93], "114141": 112, "115": [79, 81], "116": [79, 81, 82, 83, 85, 91, 93], "117": [3, 4, 79, 81, 84], "118": [79, 81, 82, 83, 85, 91, 93], "119": [79, 81], "119992": 111, "12": [3, 4, 44, 45, 79, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 108], "120": [3, 4, 51, 52, 79, 81, 82, 83, 84, 85, 91, 93], "1202808": [79, 88], "121": [79, 81], "122": [79, 81, 82, 83, 85, 91, 93], "123": [3, 4, 79, 81, 84], "124": [79, 81, 82, 83, 85, 91, 93], "125": [79, 81], "1251108": [79, 88], "126": [3, 4, 79, 81, 82, 83, 84, 85, 91, 93, 110, 111], "127": [79, 81], "128": [79, 81, 82, 83, 85, 91, 93], "129": [3, 4, 79, 81, 84], "129195": 111, "13": [44, 45, 79, 81], "130": [79, 81, 82, 83, 85, 91, 93], "131": [79, 81], "132": [3, 4, 79, 81, 82, 83, 84, 85, 91, 93], "133": [79, 81], "134": [79, 81, 82, 83, 85, 91, 93], "135": [3, 4, 79, 81, 84], "136": [79, 81, 82, 83, 85, 91, 93], "137": [79, 81], "138": [3, 4, 79, 81, 82, 83, 84, 85, 91, 93], "139": [79, 81], "14": [44, 45, 79, 81, 82, 83, 85, 91, 93, 108], "140": [79, 81, 82, 83, 85, 91, 93], "141": [3, 4, 79, 81, 84], "141997": 111, "142": [79, 81, 82, 83, 85, 91, 93], "143": [79, 81], "144": [3, 4, 79, 81, 82, 83, 84, 85, 91, 93], "145": [79, 81], "146": [79, 81, 82, 83, 85, 91, 93], "14692690": [95, 96, 97], "147": [3, 4, 79, 81, 84], "148": [79, 81, 82, 83, 85, 91, 93], "149": [79, 81], "15": [3, 4, 44, 45, 79, 81, 84, 88, 108, 112], "150": [3, 4, 79, 81, 82, 83, 84, 85, 91, 93], "151": [79, 81], "152": [79, 81, 82, 83, 85, 91, 93], "153": [3, 4, 79, 81, 84], "154": [79, 81, 82, 83, 85, 91, 93], "154165": 112, "155": [79, 81], "156": [3, 4, 79, 81, 82, 83, 84, 85, 91, 93], "157": [79, 81], "157323": 112, "158": [79, 81, 82, 83, 85, 91, 93], "159": [3, 4, 79, 81, 84], "16": [44, 45, 79, 81, 82, 83, 85, 91, 93, 112], "160": [79, 81, 82, 83, 85, 91, 93], "161": [79, 81], "162": [3, 4, 79, 81, 82, 83, 84, 85, 91, 93], "163": [79, 81], "164": [79, 81, 82, 83, 85, 91, 93], "165": [3, 4, 79, 81, 84], "166": [79, 81, 82, 83, 85, 91, 93], "167": [79, 81], "168": [3, 4, 79, 81, 82, 83, 84, 85, 91, 93], "169": [79, 81], "17": [44, 45, 79, 81, 112], "170": [79, 81, 82, 83, 85, 91, 93], "171": [3, 4, 79, 81, 84], "171201": 111, "172": [79, 81, 82, 83, 85, 91, 93], "173": [79, 81], "173844": 112, "174": [3, 4, 79, 81, 82, 83, 84, 85, 91, 93], "175": [79, 81, 112], "176": [79, 81, 82, 83, 85, 91, 93, 112], "177": [3, 4, 79, 81, 84, 112], "178": [79, 81, 82, 83, 85, 91, 93, 112], "179": [79, 81, 112], "18": [3, 4, 44, 45, 79, 81, 82, 83, 84, 85, 88, 91, 93, 112], "180": [3, 4, 42, 43, 79, 81, 82, 83, 84, 85, 91, 93, 108, 112], "1801": [79, 81], "180232": 111, "181": [79, 81], "182": [79, 81, 82, 83, 85], "183": [3, 4, 79, 81, 84], "184": [79, 81, 82, 83, 85], "185": [79, 81], "186": [3, 4, 79, 81, 82, 83, 84, 85], "187": [79, 81], "188": [79, 81, 82, 83, 85], "189": [3, 4, 79, 81, 84], "19": [44, 45, 79, 81, 112], "190": [79, 81, 82, 83, 85], "191": [79, 81], "192": [3, 4, 79, 81, 82, 83, 84, 85], "193": [79, 81], "194": [79, 81, 82, 83, 85], "195": [3, 4, 79, 81, 84], "196": [79, 81, 82, 83, 85], "197": [79, 81], "198": [3, 4, 79, 81, 82, 83, 84, 85], "199": [79, 81], "199632": 111, "1hz": 108, "2": [1, 2, 3, 4, 10, 11, 13, 16, 42, 43, 44, 45, 48, 64, 70, 73, 79, 81, 82, 83, 85, 87, 88, 89, 90, 91, 93, 108, 111, 112, 117], "20": [44, 45, 79, 81, 82, 83, 85, 88, 91, 93, 110, 112], "200": [42, 43, 79, 81, 82, 83, 85, 110], "200404": 111, "201": [3, 4, 79, 81, 84], "2018": [79, 88], "2019": [42, 43, 108, 113, 117], "202": [79, 81, 82, 83, 85], "2020": 108, "2022": [109, 117], "2024": 117, "203": [79, 81], "204": [3, 4, 79, 81, 82, 83, 84, 85], "205": [79, 81], "206": [79, 81, 82, 83, 85], "207": [3, 4, 79, 81, 84], "208": [79, 81, 82, 83, 85], "209": [79, 81], "209891": 112, "21": [3, 4, 44, 45, 79, 81, 84], "210": [3, 4, 79, 81, 82, 83, 84, 85], "211": [79, 81], "212": [79, 81, 82, 83, 85], "213": [3, 4, 79, 81, 84, 88], "214": [79, 81, 82, 83, 85], "215": [79, 81, 88], "216": [3, 4, 79, 81, 82, 83, 84, 85], "217": [79, 81], "217710": 111, "218": [79, 81, 82, 83, 85], "219": [3, 4, 79, 81, 84], "22": [44, 45, 79, 81, 82, 83, 85, 91, 93, 117], "220": [79, 81, 82, 83, 85], "221": [79, 81], "222": [3, 4, 79, 81, 82, 83, 84, 85], "223": [79, 81], "224": [79, 81, 82, 83, 85], "225": [3, 4, 79, 81, 84], "226": [79, 81, 82, 83, 85], "227": [79, 81], "227997": 111, "228": [3, 4, 79, 81, 82, 83, 84, 85], "229": [79, 81], "22nd": 108, "23": [44, 45, 79, 81, 88], "230": [79, 81, 82, 83, 85], "231": [3, 4, 79, 81, 84], "232": [79, 81, 82, 83, 85], "233": [79, 81], "234": [3, 4, 79, 81, 82, 83, 84, 85], "235": [79, 81], "236": [79, 81, 82, 83, 85], "237": [3, 4, 79, 81, 84], "238": [79, 81, 82, 83, 85], "239": [79, 81], "23rd": 108, "24": [3, 4, 44, 45, 79, 81, 82, 83, 84, 85, 88, 91, 93], "240": [3, 4, 79, 81, 82, 83, 84, 85], "241": [79, 81], "242": [79, 81, 82, 83, 85], "243": [3, 4, 79, 81, 84], "243896": 112, "244": [79, 81, 82, 83, 85], "245": [79, 81], "246": [3, 4, 79, 81, 82, 83, 84, 85], "247": [79, 81], "248": [79, 81, 82, 83, 85, 111], "249": [3, 4, 79, 81, 84, 111], "25": [44, 45, 79, 81, 88, 110, 111], "250": [79, 81, 82, 83, 85, 110, 111], "250283": 112, "251": [79, 81, 111], "252": [3, 4, 79, 81, 82, 83, 84, 85, 111], "253": [79, 81, 111], "254": [79, 81, 82, 83, 85], "255": [3, 4, 79, 81, 84], "255111": 112, "256": [79, 81, 82, 83, 85], "257": [79, 81], "258": [3, 4, 79, 81, 82, 83, 84, 85], "259": [79, 81], "26": [79, 81, 82, 83, 85, 91, 93], "260": [79, 81, 82, 83, 85], "261": [3, 4, 79, 81, 84], "262": [79, 81, 82, 83, 85], "263": [79, 81], "264": [3, 4, 79, 81, 82, 83, 84, 85], "265": [79, 81], "266": [79, 81, 82, 83, 85], "267": [3, 4, 79, 81, 84], "268": [79, 81, 82, 83, 85], "269": [79, 81], "27": [3, 4, 79, 81, 84], "270": [3, 4, 79, 81, 82, 83, 84, 85, 112], "271": [79, 81, 112], "272": [79, 81, 82, 83, 85, 112], "2725108": [79, 88], "273": [3, 4, 79, 81, 84], "274": [79, 81, 82, 83, 85, 112], "274572": 112, "275": [79, 81, 112], "276": [3, 4, 79, 81, 82, 83, 84, 85, 112], "277": [79, 81], "278": [79, 81, 82, 83, 85, 112], "279": [3, 4, 79, 81, 84, 112], "28": [79, 81, 82, 83, 85, 91, 93, 117], "280": [79, 81, 82, 83, 85], "281": [79, 81], "282": [3, 4, 79, 81, 82, 83, 84, 85], "283": [79, 81], "284": [79, 81, 82, 83, 85], "285": [3, 4, 79, 81, 84], "286": [79, 81, 82, 83, 85], "287": [79, 81], "288": [3, 4, 79, 81, 82, 83, 84, 85], "288347": 111, "289": [79, 81], "289985": 112, "29": [79, 81], "290": [79, 81, 82, 83, 85, 110, 111], "291": [3, 4, 79, 81, 84], "292": [79, 81, 82, 83, 85], "292339": 112, "293": [79, 81], "294": [3, 4, 79, 81, 82, 83, 84, 85], "295": [79, 81], "295360": 112, "2957021": [79, 88], "296": [79, 81, 82, 83, 85], "297": [3, 4, 79, 81, 84], "298": [79, 81, 82, 83, 85], "299": [79, 81], "3": [3, 4, 42, 43, 44, 45, 48, 49, 50, 58, 59, 79, 80, 81, 84, 88, 108, 110, 111, 112, 116], "30": [3, 4, 79, 81, 82, 83, 84, 85, 88, 91, 93], "300": [3, 4, 49, 79, 81, 82, 83, 84, 85], "301": [79, 81], "302": [79, 81, 82, 83, 85], "303": [3, 4, 79, 81, 84], "304": [79, 81, 82, 83, 85], "305": [79, 81], "306": [3, 4, 79, 81, 82, 83, 84, 85], "307": [79, 81], "308": [79, 81, 82, 83, 85], "309": [3, 4, 79, 81, 84], "31": [79, 81, 88], "310": [79, 81, 82, 83, 85], "3100": 108, "311": [79, 81], "312": [3, 4, 79, 81, 82, 83, 84, 85], "313": [79, 81], "314": [79, 81, 82, 83, 85], "315": [3, 4, 79, 81, 84], "316": [79, 81, 82, 83, 85], "317": [79, 81], "318": [3, 4, 79, 81, 82, 83, 84, 85], "319": [79, 81], "32": [79, 81, 82, 83, 85, 91, 93], "320": [79, 81, 82, 83, 85], "3200": 108, "321": [3, 4, 79, 81, 84], "322": [79, 81, 82, 83, 85], "322416": 112, "323": [79, 81], "32395": [79, 81], "32396": [79, 81], "32397": [79, 81], "32398": [79, 81], "32399": [79, 81, 88], "324": [3, 4, 79, 81, 82, 83, 84, 85], "32400": [79, 81, 88], "325": [79, 81], "326": [79, 81, 82, 83, 85], "327": [3, 4, 79, 81, 84], "328": [79, 81, 82, 83, 85], "329": [79, 81], "33": [3, 4, 79, 81, 84, 108], "330": [3, 4, 79, 81, 82, 83, 84, 85], "331": [79, 81], "332": [79, 81, 82, 83, 85], "333": [3, 4, 79, 81, 84], "333061": 111, "334": [79, 81, 82, 83, 85], "335": [79, 81], "336": [3, 4, 79, 81, 82, 83, 84, 85], "337": [79, 81], "338": [79, 81, 82, 83, 85], "339": [3, 4, 79, 81, 84], "34": [79, 81, 82, 83, 85, 91, 93], "340": [79, 81, 82, 83, 85], "341": [79, 81], "342": [3, 4, 79, 81, 82, 83, 84, 85], "343": [79, 81], "344": [79, 81, 82, 83, 85], "345": [3, 4, 79, 81, 84], "346": [79, 81, 82, 83, 85], "347": [79, 81], "348": [3, 4, 79, 81, 82, 83, 84, 85], "349": [79, 81], "349405": 111, "35": [79, 81], "350": [79, 81, 82, 83, 85], "351": [3, 4, 79, 81, 84], "352": [79, 81, 82, 83, 85], "353": [79, 81], "354": [3, 4, 44, 48, 79, 81, 82, 83, 84, 85], "355": [79, 81], "356": [79, 81, 82, 83, 85], "357": [3, 4, 44, 48, 79, 81, 84, 88], "358": [79, 81, 82, 83, 85, 88], "359": [79, 81], "36": [3, 4, 79, 81, 82, 83, 84, 85, 91, 93], "360": [1, 2, 3, 4, 10, 11, 61, 63, 64, 68, 70, 73, 79, 81, 88, 100, 103, 108, 117], "37": [79, 81], "370797": 112, "370868": 111, "379395": 111, "38": [79, 81, 82, 83, 85, 91, 93], "3825108": [79, 88], "383641": 112, "3860281": [79, 88], "388782": 111, "39": [3, 4, 79, 81, 84], "396779": 112, "3987634": [79, 88], "3rd": 110, "4": [42, 43, 44, 45, 48, 79, 81, 82, 83, 85, 88, 89, 90, 91, 93, 108, 109, 110, 111, 112], "40": [79, 81, 82, 83, 85, 88, 91, 93], "400": 111, "41": [79, 81], "42": [3, 4, 79, 81, 82, 83, 84, 85, 91, 93], "423": 112, "4235128": [79, 88], "43": [79, 81], "436916": 111, "44": [79, 81, 82, 83, 85, 91, 93], "440083": 112, "440443": 111, "442289": 112, "45": [3, 4, 79, 81, 84], "455": 112, "46": [79, 81, 82, 83, 85, 91, 93], "462": 112, "47": [79, 81], "477371": 112, "48": [3, 4, 79, 81, 82, 83, 84, 85, 91, 93], "484212": 112, "49": [79, 81], "492146": 112, "5": [1, 2, 10, 11, 13, 15, 26, 38, 42, 43, 44, 45, 48, 49, 51, 52, 53, 56, 64, 72, 79, 81, 88, 89, 90, 108, 110, 111, 112], "50": [1, 2, 10, 11, 44, 45, 51, 52, 64, 72, 73, 79, 81, 82, 83, 85, 91, 93, 111], "500": [110, 111], "51": [3, 4, 79, 81, 84], "511451": 112, "52": [79, 81, 82, 83, 85, 91, 93], "52103": [79, 88], "52104": [79, 88], "521269": 112, "53": [79, 81], "538207": 111, "54": [3, 4, 79, 81, 82, 83, 84, 85, 91, 93], "540727": 111, "542": 112, "546011": 111, "547837": 112, "55": [79, 81], "554335": 112, "56": [79, 81, 82, 83, 85, 91, 93], "560999": 111, "562856": 111, "566": 112, "566947": 112, "569": 112, "57": [3, 4, 79, 81, 84], "58": [79, 81, 82, 83, 85, 91, 93], "59": [79, 81], "592": 112, "593468": 112, "6": [3, 4, 42, 43, 44, 45, 48, 49, 79, 81, 82, 83, 84, 85, 88, 91, 93, 111], "60": [3, 4, 53, 54, 55, 79, 81, 82, 83, 84, 85, 91, 93], "601": 112, "607715": 112, "61": [79, 81], "616": 112, "62": [79, 81, 82, 83, 85, 91, 93], "63": [3, 4, 79, 81, 84], "634": 112, "64": [79, 81, 82, 83, 85, 91, 93], "649006": 112, "65": [79, 81, 88], "66": [3, 4, 79, 81, 82, 83, 84, 85, 91, 93], "663": 112, "668966": 112, "67": [79, 81], "673": 112, "68": [79, 81, 82, 83, 85, 91, 93], "680095": 111, "685290": 112, "686": 112, "687513": 111, "69": [3, 4, 79, 81, 84], "692111": [79, 88], "692168": 111, "695027": 112, "7": [44, 45, 79, 81, 88, 108, 112], "70": [79, 81, 82, 83, 85, 91, 93], "700910": 112, "71": [79, 81], "710710": 112, "719751": 112, "72": [3, 4, 79, 81, 82, 83, 84, 85, 91, 93], "720": [91, 93], "723871": 111, "725108": [79, 88], "73": [79, 81], "731": 112, "731222": 112, "734227": 111, "74": [79, 81, 82, 83, 85, 91, 93], "740": 112, "75": [3, 4, 79, 81, 84], "750400": 111, "76": [79, 81, 82, 83, 85, 91, 93], "764663": 112, "77": [79, 81], "78": [3, 4, 79, 81, 82, 83, 84, 85, 91, 93], "79": [79, 81], "794": 112, "795184": 112, "8": [3, 4, 44, 45, 79, 81, 82, 83, 85, 88, 91, 93, 111, 112], "80": [79, 81, 82, 83, 85, 91, 93, 110], "802": 112, "81": [3, 4, 79, 81, 84, 88], "810269": 112, "819674": 111, "82": [79, 81, 82, 83, 85, 91, 93], "821647": 112, "822967": 112, "825108": [79, 88], "826": 112, "83": [79, 81], "837": 112, "84": [3, 4, 79, 81, 82, 83, 84, 85, 91, 93], "840122": 111, "85": [79, 81], "855": 112, "858161": [79, 88], "86": [79, 81, 82, 83, 85, 91, 93], "866645": 111, "87": [3, 4, 79, 81, 84], "88": [79, 81, 82, 83, 85, 91, 93], "880755": [79, 81], "880772": [79, 81], "880781": [79, 81], "880829": [79, 81], "880843": [79, 81], "881165": [79, 81], "888900": 112, "89": [79, 81], "898695": 111, "8th": 112, "9": [3, 4, 44, 45, 79, 81, 82, 83, 84, 85, 88, 108, 112], "90": [3, 4, 79, 81, 82, 83, 84, 85, 91, 93], "906913": 112, "91": [79, 81], "92": [79, 81, 82, 83, 85, 91, 93], "93": [3, 4, 79, 81, 84], "930408": 111, "94": [79, 81, 82, 83, 85, 91, 93], "95": [1, 2, 10, 11, 44, 45, 79, 81], "954207": 112, "959345": 111, "96": [3, 4, 79, 81, 82, 83, 84, 85, 91, 93], "97": [79, 81], "98": [79, 81, 82, 83, 85, 91, 93], "99": [3, 4, 44, 45, 79, 81, 84, 88], "993278": 111, "995": [79, 80], "A": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 18, 24, 25, 42, 43, 44, 45, 48, 53, 54, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 95, 96, 97, 98, 99, 108, 112, 115, 117], "As": 112, "But": 112, "By": [42, 43, 79, 88, 112], "For": [44, 45, 47, 79, 82, 83, 87, 88, 95, 98, 108, 112, 116, 117], "If": [1, 2, 8, 9, 10, 11, 13, 15, 18, 22, 25, 42, 43, 44, 45, 48, 53, 56, 58, 59, 64, 65, 73, 79, 82, 83, 85, 88, 89, 90, 95, 97, 100, 103, 108, 115, 117], "In": [1, 2, 10, 11, 42, 43, 79, 88, 108, 110, 117], "It": [13, 18, 64, 73, 79, 87, 88, 108, 117, 118], "One": [89, 90, 108], "That": 115, "The": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 15, 17, 24, 25, 42, 43, 44, 45, 46, 48, 49, 50, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 84, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117], "Then": 115, "There": 108, "These": [44, 45, 47, 108, 117], "To": [79, 88, 115], "With": [108, 109], "_": [108, 117], "_attr": 59, "_cach": 59, "_channel_name_map_invers": [58, 59], "_compute_energy_ratio_bootstrap": 1, "_compute_energy_ratio_singl": 1, "_compute_total_uplift_bootstrap": 10, "_compute_total_uplift_singl": 10, "_compute_ws_count": [8, 9], "_constructor": [58, 59], "_convert_long_to_wid": [58, 59], "_convert_wide_to_long": [58, 59], "_description_": [3, 4], "_fi_set_ws_wd_ti": 79, "_find_sensor_stuck_single_timearrai": 49, "_get_all_unique_flag": [44, 45], "_get_energy_ratio": 3, "_get_energy_ratios_allbin": [42, 43], "_get_mean_power_curv": [44, 45], "_gui": 108, "_interpolate_with_max_gap": 100, "_is_uplift": [8, 9], "_load_er_input_for_wd_bia": [42, 43], "_long_data_column": [58, 59], "_max": [1, 2, 10, 11], "_metadata": [58, 59], "_mgr": 59, "_plot_top_sensor_fault": 49, "_process_single_wd": [3, 4], "_repr_html_": [58, 59], "_reset_mean_power_curv": [44, 45], "_set_col_by_n_closest_upstream_turbin": 13, "_set_col_by_radius_from_turbin": 13, "_set_col_by_turbin": 13, "_set_col_by_upstream_turbin": 13, "_set_col_by_upstream_turbines_in_radiu": 13, "_set_legend_alpha_to_on": [44, 45], "_step": [1, 2, 10, 11], "_type_": [3, 4], "_user_format": [58, 59], "a1": 108, "a2": 108, "a3": 108, "about": [13, 16, 58, 59, 108], "abov": [44, 45, 79, 88, 108, 110, 111, 112, 115], "absolut": [1, 2, 64, 75], "accept": [64, 75], "access": [95, 96, 97, 108, 115], "accommod": 108, "accord": [44, 45, 48, 64, 74, 76, 79, 86, 87, 108], "account": [53, 54], "accur": [79, 84, 87, 88], "achiev": [79, 80], "across": [1, 2, 10, 11, 64, 66, 67, 69, 70, 71, 72, 79, 80], "act": 110, "activ": 115, "activepowermean": 112, "actual": [44, 45, 108], "ad": [13, 64, 65, 68, 108, 112], "add": [13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 64, 65, 66, 67, 68, 69, 70, 71, 72, 79, 80, 108, 115], "add_bin_weight": 64, "add_gaussian_blending_to_floris_approx_t": 79, "add_power_ref": 64, "add_power_test": 64, "add_reflected_row": 64, "add_w": 64, "add_wd": 64, "add_wd_bin": 64, "add_ws_bin": 64, "addit": [13, 15, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 64, 66, 67, 69, 70, 71, 72, 74, 112, 113], "addition": [8, 9, 42, 43, 79, 88, 89, 90, 117], "address": [13, 18, 117], "adher": 112, "adjust": 108, "affect": [79, 84, 87], "after": [13, 15, 91, 93, 108], "again": [64, 68, 110, 113, 115], "against": 108, "aggreg": [44, 45, 64, 73], "agreement": 108, "al": [79, 81, 109, 117], "algorithm": [44, 45, 108], "align": [108, 110, 111, 112], "all": [1, 2, 3, 4, 8, 9, 10, 11, 13, 14, 15, 22, 27, 28, 30, 31, 32, 34, 36, 37, 39, 40, 44, 45, 64, 69, 70, 71, 72, 73, 75, 77, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 108, 111, 117], "all_flag": [44, 45], "all_influence_magnitud": [79, 85], "allow": [13, 16, 44, 45, 64, 73, 79, 80, 88, 100, 103, 108, 117], "allow_convert_to_integ": [13, 16], "along": [61, 62, 63], "alpha": [44, 45], "alreadi": [108, 110], "also": [3, 4, 13, 16, 29, 33, 41, 42, 43, 44, 45, 79, 81, 88, 91, 93, 108, 109, 110, 112, 114, 115, 117], "altern": [110, 117], "although": [64, 75], "altitud": [13, 24, 25], "alwai": [108, 112], "ambient": [3, 4, 79, 87, 88, 117], "among": 114, "amount": 117, "an": [1, 2, 5, 6, 7, 10, 11, 13, 15, 17, 18, 25, 42, 43, 44, 45, 58, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 76, 79, 85, 88, 89, 90, 95, 97, 108, 109, 110, 112, 113, 115, 117], "analag": 110, "analys": [108, 109, 117], "analysi": [12, 13, 15, 60, 79, 88, 107, 108, 110, 111, 112, 113, 114], "analyz": 108, "angl": [61, 62, 89, 90, 91, 94, 95, 99, 108, 110, 117], "angle_wrap": [91, 94], "angles_array_deg": [61, 62, 63], "angular": [53, 54, 55, 117], "ani": [1, 2, 8, 9, 10, 11, 13, 15, 16, 42, 43, 44, 45, 48, 49, 50, 59, 64, 69, 70, 71, 72, 73, 78, 79, 82, 83, 84, 85, 88, 95, 96, 97, 108, 115], "annual": 109, "anoth": [58, 59, 112, 118], "anywher": 108, "app": 108, "appear": [64, 65, 79, 82, 95, 98], "append": [108, 110, 111], "appli": [79, 80, 89, 90, 108], "applic": 108, "apply_filters_to_df": [44, 45], "approach": [79, 87, 115], "appropri": 112, "approxim": [5, 6, 79, 81, 110], "ar": [1, 2, 10, 11, 13, 15, 22, 26, 29, 33, 35, 38, 41, 42, 43, 44, 45, 48, 53, 56, 58, 59, 61, 62, 64, 65, 70, 72, 75, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 98, 104, 105, 106, 107, 108, 109, 110, 112, 115, 117], "arang": [3, 4, 44, 45, 79, 81, 91, 93, 110, 111, 112], "aren": [1, 2, 10, 11], "arg": [58, 59], "argument": [42, 43, 112], "aris": [44, 45], "around": [44, 45, 64, 68, 100, 103, 108, 109, 114, 117], "arrai": [3, 4, 5, 7, 13, 22, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 49, 50, 53, 56, 61, 62, 63, 64, 68, 70, 72, 74, 76, 79, 81, 82, 83, 84, 85, 86, 91, 92, 93, 94, 95, 99, 100, 103, 104, 106, 110, 111, 117], "arraymanag": 59, "artifici": 113, "ascend": 100, "assess": 112, "asset": [3, 4], "assign": [1, 2, 10, 11, 44, 45, 48, 64, 65, 108], "assum": [44, 45, 61, 62, 79, 88, 100, 104, 106, 108, 111, 112], "assume_sort": 100, "assumpt": [79, 88], "atmospher": 117, "attribut": [43, 59], "author": 117, "automat": [89, 90, 100, 101], "avail": [1, 2, 10, 11, 44, 45, 108, 114, 115, 117], "averag": [13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 53, 54, 55, 64, 66, 67, 69, 70, 71, 72, 91, 93, 108, 110, 111, 112, 117], "avoid": [79, 88], "ax": [8, 9, 13, 25, 44, 45, 110, 111], "axarr": [8, 9, 110, 111], "axi": [3, 4, 13, 25, 44, 45, 61, 62, 63, 100, 103, 108], "b": 117, "back": [58, 59, 79, 85, 109, 110, 111, 112], "background": [3, 4, 13, 25], "bai": [109, 117], "balanc": 117, "bar": [44, 45], "base": [1, 2, 4, 6, 9, 10, 11, 42, 43, 44, 45, 47, 48, 59, 64, 65, 73, 79, 83, 95, 96, 97, 108, 110, 112, 117], "baselin": [42, 43, 109, 110, 111], "basic": [44, 48, 108], "becaus": [44, 45, 48, 79, 88, 108], "becom": [13, 15, 79, 88, 108], "been": [13, 18, 91, 93, 108, 116], "befor": 112, "begin": 112, "behavior": [79, 88], "behind": [13, 24], "being": [8, 9, 44, 45, 79, 80, 88, 108], "below": [44, 45, 79, 87, 88, 89, 90, 107, 108, 112], "benefit": [79, 87], "besid": [13, 14, 108], "best": 108, "better": [42, 43, 44, 45], "between": [1, 2, 5, 7, 10, 11, 13, 25, 42, 43, 44, 45, 51, 52, 58, 59, 64, 68, 77, 78, 79, 86, 88, 89, 90, 91, 93, 94, 95, 98, 100, 103, 108, 110, 112, 117], "bfd": 117, "bia": [42, 43, 51, 52, 91, 93, 108, 117], "bias": 108, "bias_estim": 42, "bias_timestep": [51, 52], "bin": [1, 2, 3, 4, 8, 9, 10, 11, 42, 43, 44, 45, 53, 54, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 110, 111, 118], "bin_and_group_datafram": 64, "bin_col_nam": [64, 74], "bin_cols_in": [1, 2, 8, 9, 10, 11, 64, 75], "bin_cols_without_df_nam": [64, 65, 73], "bin_column": 64, "blend": [79, 80], "block": [5, 6, 7, 110], "blockag": [3, 4], "blockmanag": 59, "blur": [79, 80], "bokeh": [44, 45], "bool": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 16, 22, 26, 29, 33, 35, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 63, 64, 69, 70, 71, 72, 73, 75, 79, 81, 85, 86, 87, 88, 91, 92, 93, 94, 100, 103], "boolean": [5, 6, 13, 24, 25], "boostreap": 110, "bootstrap": [1, 2, 10, 11, 42, 43, 64, 75, 110], "both": [13, 18, 58, 59, 108, 110, 113], "bound": [1, 2, 10, 11, 13, 19, 20, 21, 42, 43, 44, 45, 79, 88, 91, 92, 93], "boundari": 100, "box": [44, 45, 111], "bring": [13, 16], "brown": 108, "bsd": 116, "build": [110, 111], "built": [114, 117], "c": [49, 108, 117], "calc_floris_approx_t": [79, 80, 88], "calc_median_min_max_std": [53, 54, 55, 61, 63], "calc_wd_mean_radi": 61, "calcul": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 16, 26, 27, 29, 30, 31, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 68, 75, 79, 81, 83, 86, 88, 108, 109, 111, 117], "calculate_baselin": [42, 43], "calculate_miss": [44, 45], "calculate_wd_statist": 61, "calibr": [108, 114, 117], "call": [8, 9, 13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 112], "callabl": [42, 43], "can": [3, 4, 13, 16, 26, 28, 29, 32, 33, 38, 40, 41, 42, 43, 44, 45, 64, 65, 76, 79, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 100, 103, 108, 109, 110, 111, 112, 113, 117, 118], "cannot": [44, 48, 79, 88, 108], "capabl": 113, "captur": [79, 84], "care": 117, "carefulli": [53, 55, 108], "case": [1, 2, 10, 11, 44, 45, 64, 70, 72, 108, 109, 110, 111, 112], "categor": [44, 45], "caus": 117, "cc": [104, 105, 106], "cell": 112, "center": [1, 2, 10, 11, 53, 54, 55, 110, 111], "central": [114, 117], "certain": [44, 45, 79, 86], "challeng": 113, "chang": [1, 2, 10, 44, 45, 79, 82, 83, 85, 95, 97, 108, 115], "change_threshold": [79, 82, 83, 85], "channel": 112, "channel_name_map": [58, 59, 112], "character": [3, 4], "check": [44, 45, 49, 50, 51, 52, 64, 75, 108, 115], "check_compute_energy_ratio_input": 64, "check_flasc_format": [58, 59], "choic": [1, 2, 10, 11, 44, 45, 108], "choos": 115, "chosen": 112, "chronolog": [44, 45], "churchfield": 117, "circmean": [61, 62], "circular": [13, 22, 34, 36, 37, 53, 56, 61, 91, 93, 100, 103], "circular_col": [53, 56, 108], "circular_mean": [13, 22], "circular_stat": 108, "cite": 117, "class": [3, 4, 5, 6, 8, 9, 42, 43, 44, 45, 58, 59, 108, 112, 117], "classifi": [44, 45, 47, 48, 108], "claus": 116, "clean": [44, 45], "clock": 108, "clone": 115, "close": 108, "closest": [13, 26, 38, 79, 86], "code": [110, 112, 115], "coeffici": [42, 43, 91, 93, 108], "col_nam": [64, 74, 76], "col_out": 13, "col_prefix": [13, 22], "col_ref": 13, "collect": [111, 112], "color": [8, 9, 13, 25, 108], "color_dict": [8, 9, 111], "color_palett": 110, "cols_angular": [53, 54, 55], "cols_df1": [91, 93], "cols_df2": [91, 93], "column": [1, 2, 5, 6, 10, 11, 13, 15, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 88, 91, 93, 95, 98, 99, 108, 110, 112, 117], "column_list": 108, "com": [95, 96, 97, 115, 117], "combin": [1, 2, 10, 11, 64, 73, 79, 81, 110, 111], "come": [3, 4, 110, 111], "command": [108, 115], "commit": 115, "common": [44, 45, 91, 93, 95, 98, 104, 105, 106, 108], "commonli": 108, "commun": 114, "comon": 108, "compar": [42, 43, 49, 50, 91, 93, 108, 117], "comparison": [79, 88, 91, 93, 108, 109, 117], "complet": [44, 45, 108, 115], "compon": [8, 9], "compromis": 108, "comput": [1, 2, 8, 9, 10, 11, 42, 43, 53, 55, 61, 62, 79, 85, 88, 108, 109, 118], "compute_energy_ratio": [1, 64, 75, 110, 111], "compute_total_uplift": 10, "concaten": [5, 6], "cond": [44, 47, 108], "conda": 115, "condit": [44, 45, 47, 48, 79, 87, 88, 108, 117], "conduct": 113, "confid": 110, "configur": 115, "confirm": 108, "confus": [44, 45], "connect": [44, 45], "consecut": [44, 45, 49, 50, 108], "consequ": 117, "consid": [13, 15, 26, 29, 33, 35, 38, 41, 42, 43, 44, 45, 47, 53, 55, 58, 59, 64, 68, 79, 86, 108], "consist": [13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 52, 95, 98, 108, 110, 111, 117], "consol": [44, 45, 48, 79, 88], "constant": [44, 45, 108], "construct": [1, 2, 10, 11, 110], "contact": 116, "contain": [1, 2, 3, 4, 10, 11, 13, 24, 25, 26, 28, 29, 32, 33, 35, 38, 40, 41, 44, 45, 46, 47, 49, 50, 51, 52, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 95, 98, 99, 100, 107, 108, 110, 115, 117], "content": [108, 116], "continu": [89, 90, 110], "control": 110, "conveni": [8, 9, 112], "convent": [108, 110, 112], "converg": [44, 45], "convers": [58, 59, 112], "convert": [8, 9, 58, 59, 108], "convert_time_to_datetim": [58, 59], "convert_to_flasc_format": [58, 59, 112], "convert_to_user_format": [58, 59, 112], "coordin": [13, 24, 110, 111], "copi": [58, 59, 79, 88, 112], "copy_metadata": [58, 59], "correct": [42, 43, 44, 45, 91, 93, 108, 113, 117], "correct_y_shift": [91, 93], "correctli": 115, "correl": [42, 43, 44, 45, 91, 93, 108], "correspond": [1, 2, 13, 17, 26, 28, 29, 32, 33, 38, 40, 41, 44, 45, 64, 68], "corrupt": [13, 15], "cosin": [104, 105], "cosine_expon": [104, 105], "cost": [42, 43, 91, 92, 93, 94], "could": [58, 59, 108, 112], "count": [1, 2, 8, 9, 10, 11, 44, 46, 64, 65], "coupl": [44, 45], "cover": [42, 43, 79, 88], "creat": [8, 9, 13, 25, 44, 45, 89, 90, 110, 111, 115], "criteria": 108, "cross": [51, 52, 108], "crosscheck_northing_offset_consist": 51, "csv": 108, "cumul": 117, "curl": 117, "current": [42, 43, 108, 112, 118], "curtail": [44, 48, 108], "curv": [44, 45, 79, 80, 91, 94, 108, 117], "cut": [44, 45, 64, 79, 80, 108], "cutoff_w": [44, 45], "cwd": [110, 111], "d": [79, 85], "dai": [13, 24, 25, 51, 52, 91, 93], "dash": 108, "data": [1, 2, 5, 6, 10, 11, 13, 15, 16, 23, 24, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 64, 65, 73, 75, 77, 78, 79, 87, 88, 91, 92, 95, 98, 99, 100, 102, 103, 107, 109, 110, 111, 113, 114, 117], "data_dict": 112, "data_process": [107, 111, 113], "databas": 108, "datafram": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 93, 95, 98, 99, 100, 101, 102, 108, 111, 112, 118], "dataframe_manipul": 111, "datapoint": [44, 45], "dataset": [42, 43, 44, 45, 58, 59, 89, 90, 108, 109, 113], "date": [108, 110], "datetim": [51, 52, 53, 54, 55, 58, 59, 100, 101], "datetime_column": [13, 24], "daylight": [13, 24], "daytim": [13, 24], "deadband": [44, 45], "deal": [108, 117], "declar": [112, 115], "decreas": [44, 45], "dedic": 115, "deep": 117, "default": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 22, 24, 26, 29, 33, 35, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 70, 72, 73, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 104, 105, 106], "deficit": 108, "defin": [42, 43, 44, 45, 108, 109, 110, 111, 117], "deg": [61, 63, 79, 81, 84, 87, 88, 104, 105, 106, 108, 110, 111, 117], "degre": [1, 2, 10, 11, 42, 43, 61, 62, 63, 64, 68, 79, 80, 87, 89, 90, 100, 103, 104, 105, 106, 108], "degress": [13, 24], "demo": 113, "demonstr": [108, 112, 113], "denot": [13, 24, 79, 82, 83, 85, 104, 106, 108], "densiti": [79, 80], "dep_indices_by_wd": [79, 85], "depend": [79, 82, 83, 85, 87, 88, 115], "depict": [44, 45, 47, 89, 90], "depth": 113, "deriv": [1, 3, 4, 10, 64, 77, 78, 79, 84, 117], "descript": [44, 45], "design": [114, 117], "desir": 112, "detail": [107, 109, 117], "detect": [79, 85, 108, 117], "determin": [13, 24, 26, 28, 29, 32, 33, 35, 38, 40, 41, 42, 43, 44, 45, 61, 63, 64, 65, 79, 82, 83, 84, 85, 86, 87, 108, 117], "develop": 113, "deviat": [44, 45, 49, 50, 53, 55, 61, 63, 79, 80, 104, 105, 106, 108], "df": [1, 3, 10, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 88, 100, 102, 108, 111, 112], "df1": [91, 93], "df2": [91, 93], "df_": [1, 2, 10, 11, 58, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78], "df_1": [95, 98], "df_2": [95, 98], "df_approx": [79, 81, 88], "df_baseline_noisy_pd": 110, "df_downsampl": 53, "df_drop_nan_row": 13, "df_fi_approx": [79, 80], "df_filter": [44, 45], "df_find_and_fill_data_gaps_with_miss": 13, "df_fm_approx": [42, 43], "df_freq": [1, 2, 8, 9, 10, 11, 64, 65, 75], "df_freq_pl": [1, 10, 64, 65], "df_get_no_faulty_measur": 44, "df_impacting_turbin": [44, 48], "df_in": [13, 16, 53, 54, 55], "df_list_in": [5, 6], "df_mark_turbdata_as_faulti": 44, "df_movingaverag": 53, "df_name": [1, 2, 5, 6, 10, 11, 64, 65, 73], "df_names_subset": [8, 9], "df_opt": [89, 90], "df_out": [79, 82, 83], "df_pow_ref_mapping_func": [42, 43], "df_raw": [3, 4], "df_re": 108, "df_reduce_precis": 13, "df_resample_by_interpol": [53, 108], "df_result": [8, 9], "df_scada": [95, 99], "df_sort_and_find_dupl": 13, "df_sort_and_fix_dupl": 13, "df_upstream": [3, 4, 13, 26, 28, 29, 32, 33, 38, 40, 41, 79, 87], "df_wakesteering_noisy_pd": 110, "df_windup": 112, "df_ws_mapping_func": [42, 43], "dfm": 111, "dic": [95, 96, 97], "dict": [8, 9, 10, 11, 59, 91, 92, 95, 96, 97], "dictionari": [8, 9, 10, 91, 92, 93, 95, 96, 97, 112], "dictrionari": 112, "differ": [13, 18, 25, 42, 43, 44, 45, 64, 68, 79, 80, 108, 110, 111, 117], "differenti": [13, 25], "digit": [108, 112], "dimens": [58, 59, 89, 90], "dimension": [79, 85], "direciton": [79, 85], "direct": [1, 2, 3, 4, 8, 9, 10, 11, 13, 20, 26, 28, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 48, 61, 62, 63, 64, 68, 70, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 95, 99, 104, 105, 106, 108, 112, 117, 118], "directionm": 108, "directli": [44, 45, 64, 65, 75, 79, 80, 112, 115], "directori": 115, "discret": [42, 43, 79, 87, 108], "discuss": 117, "displai": [58, 59], "distanc": [1, 2, 10, 11, 44, 45, 64, 68, 79, 86, 100, 103], "distinguish": [13, 25], "distribut": [3, 4, 8, 9, 110], "divid": [107, 110], "do": [3, 4, 13, 16, 44, 45, 53, 55, 108, 115], "doc": 115, "document": 108, "doe": [13, 18, 42, 43, 64, 75, 108], "doekemeij": [109, 117], "done": [100, 103, 108, 110], "down": [44, 45, 89, 90], "download": [108, 113, 115], "downsampl": [53, 54, 117], "downstream": [91, 92, 111], "downtim": [44, 48], "downtimecounter_col": [58, 59], "downward": [44, 45], "dpi": [42, 43, 49], "drawn": [44, 45], "driven": 114, "drop": [13, 14, 108], "dsf22": 117, "dt": [100, 101], "dtype": [110, 111], "due": [79, 88, 108], "dumb": [110, 111], "duplic": [13, 17, 18], "duplicate_entries_idx": [13, 17], "dure": [44, 45, 108], "dwd_opt": [91, 94], "dx": [79, 84, 87], "dy": [79, 84, 87], "dy_ev": [91, 94], "e": [13, 18, 42, 43, 44, 45, 48, 79, 84, 85, 88, 100, 103, 108, 109, 112, 115, 117], "each": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 42, 43, 44, 45, 46, 48, 51, 52, 64, 68, 73, 79, 81, 82, 83, 84, 85, 87, 95, 99, 104, 106, 107, 108, 110, 112], "easi": 108, "easiest": 113, "edg": [64, 68, 70, 72, 74, 76], "edit": 115, "effect": [3, 4, 44, 45, 117], "effici": [13, 16, 108, 117], "either": [64, 65, 108], "element": [1, 2, 5, 7, 10, 11, 79, 85, 91, 94], "elimin": [79, 88], "email": 117, "emgauss": [104, 105, 106], "empir": [79, 87], "empti": [79, 85], "enabl": [64, 68, 79, 87], "encod": 117, "encourag": 113, "end": [44, 45, 89, 90, 91, 93, 95, 96, 109, 118], "energi": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 42, 43, 64, 68, 77, 78, 79, 88, 107, 108, 114, 117, 118], "energy_ratio": [110, 111], "energy_ratio_input": [110, 111], "energyratioin": 110, "energyratioinput": [1, 2, 5, 8, 9, 10, 11, 42, 43, 110, 111], "energyratiooutput": [1, 2, 8, 10, 11], "enforc": 108, "engin": 109, "ensur": [79, 88, 95, 98], "entir": [79, 87, 88, 108], "entri": [13, 14, 18, 42, 43, 44, 45, 47, 79, 82, 83, 100, 101], "env": 115, "environ": 115, "equal": [1, 2, 10, 11, 13, 15, 17, 18, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 64, 70, 72, 74, 76, 79, 84, 88, 89, 90, 110], "equip": 108, "er_in": [1, 2, 8, 9, 10, 11, 64, 75, 110, 111], "er_n_btstrp": [42, 43], "er_out": [110, 111], "er_out_2": 111, "er_out_3": 111, "er_wd_bin_width": [42, 43], "er_wd_step": [42, 43], "er_ws_step": [42, 43], "erp": [110, 111], "error": [1, 2, 58, 59, 91, 94], "essenti": [42, 43, 79, 83], "estim": [3, 4, 42, 43, 44, 45, 91, 92, 100, 101, 108, 114, 117], "estimate_dt": 100, "estimate_heterogen": [3, 4], "estimate_ti": 91, "estimate_wd_bia": [42, 43], "et": [42, 43, 109, 117], "evalu": [42, 43, 79, 80, 81, 84, 91, 92, 93, 94, 108], "even": [13, 16, 44, 45], "everi": [44, 45, 64, 75, 79, 87, 108], "everyth": 115, "exact": [44, 45, 108], "exactli": 108, "exampl": [44, 45, 47, 79, 81, 88, 104, 110, 112, 115, 117, 118], "examples_artifical_data": 108, "examples_artificial_data": [109, 113], "examples_smarteol": 113, "excel": 108, "except": [13, 18, 64, 75], "exclud": [13, 26, 28, 32, 38, 40], "exclude_column": [44, 47], "exclude_turb": [13, 26, 28, 32, 38, 40], "exhaust": 108, "exist": 108, "expand": [79, 81], "expect": [58, 59, 95, 99, 110], "experi": [113, 114, 117], "experienc": [44, 45], "explicit": [1, 2, 10, 11], "explor": 108, "expon": [104, 105], "export": 108, "export_to_windup_format": [58, 59, 112], "expr": [64, 76], "express": [64, 76], "extern": 108, "extra": [1, 2, 10, 11, 13, 15], "extract": [79, 82, 83], "extrapol": 100, "extrapolate_ti": [79, 88], "extrapolate_w": [79, 88], "f": [110, 111], "face": 110, "facilit": [42, 43], "factor": [13, 16, 108], "fair": [79, 88], "fairli": 108, "fall": [79, 88], "fals": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 16, 22, 29, 33, 35, 41, 42, 43, 44, 45, 49, 50, 53, 54, 55, 58, 59, 64, 69, 70, 71, 72, 73, 79, 81, 85, 86, 87, 91, 92, 93, 100, 103, 108, 110, 111], "far": [44, 45], "farm": [3, 4, 42, 43, 44, 45, 79, 82, 83, 84, 85, 87, 104, 105, 106, 109, 110, 111, 112, 114, 117], "fashion": [79, 88, 100, 103], "fast": [44, 45], "faster": 108, "fault": [44, 45, 48, 49, 50, 108, 117], "faulti": [44, 45, 46, 47, 48, 108], "fdf": 112, "fdf_flasc": 112, "fdf_user": 112, "feather": [58, 59, 108, 117], "few": 112, "fi": [44, 48], "field": [113, 114, 117], "fig": [44, 45, 110, 111], "fig_format": 49, "figsiz": 111, "figur": [3, 4, 8, 9, 42, 43, 44, 45, 49, 50, 51, 52, 108], "file": [13, 15, 108, 117], "file_path": [110, 111], "fill": [13, 15, 18, 79, 84, 100, 103], "filter": [13, 19, 20, 21, 64, 77, 78, 114, 117], "filter_all_nul": 64, "filter_any_nul": 64, "filter_by_condit": [44, 45], "filter_by_floris_power_curv": [44, 45], "filter_by_power_curv": [44, 45, 108], "filter_by_sensor_stuck_fault": [44, 45], "filter_df_by_faulty_impacting_turbin": 44, "filter_df_by_ti": 13, "filter_df_by_w": 13, "filter_df_by_wd": 13, "final": [108, 117], "find": [13, 15, 17, 49, 50, 79, 86, 88, 91, 93, 94, 108], "find_sensor_stuck_fault": 49, "find_timeshift_between_df": 91, "finit": [79, 88], "first": [1, 2, 10, 11, 79, 82, 104, 106, 108, 110], "firstli": 108, "five": 108, "flag": [44, 45, 47, 79, 85, 108], "flasc": [107, 108, 109, 110, 111, 115, 116], "flasc2024": 117, "flasc_datafram": 107, "flascdatafram": [5, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 79, 88, 91, 93, 95, 98, 99, 100, 102, 107, 110, 111], "flascfilt": [44, 108], "flatten": [53, 57, 110, 111], "flatten_col": 53, "fleme": [116, 117], "float": [1, 2, 3, 4, 8, 9, 10, 11, 13, 15, 19, 20, 21, 24, 26, 29, 33, 35, 38, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 56, 61, 63, 64, 68, 70, 72, 73, 75, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 94, 100, 103, 104, 105, 106], "float32": [13, 16], "float64": [13, 16], "flori": [0, 3, 4, 12, 42, 43, 44, 45, 51, 52, 60, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 95, 98, 99, 104, 105, 106, 108, 112, 114, 115, 117], "floris_input_artifici": [110, 111], "floris_tool": [13, 26, 28, 29, 32, 33, 38, 40, 41, 44, 48], "florismodel": [44, 45, 79, 81, 82, 83, 84, 85, 87, 91, 92, 95, 99, 104, 105, 106, 110, 111], "flow": [3, 4, 79, 87, 110], "fm": [3, 4, 44, 45, 51, 52, 79, 81, 84, 87, 91, 92, 110, 111], "fm_in": [79, 82, 83, 85, 95, 99], "fm_path": [110, 111], "fmin": [91, 92], "folder": 115, "follow": [1, 2, 10, 11, 42, 43, 61, 63, 91, 92, 93, 94, 108, 112, 113, 115], "form": [79, 88, 108], "format": [42, 43, 44, 45, 46, 47, 48, 58, 59, 100, 101, 111, 117], "former": [13, 17], "forth": 112, "found": [44, 45, 79, 85, 108, 112, 113, 117], "fp": [100, 103], "fraction": [79, 82, 83, 85], "frame": [79, 87, 117], "freestream": [79, 87], "freq_val": [1, 2, 10, 11], "frequenc": [1, 2, 8, 9, 10, 11, 64, 65, 75], "from": [1, 2, 3, 4, 10, 11, 13, 16, 26, 29, 33, 35, 38, 41, 42, 43, 44, 45, 58, 59, 64, 65, 68, 75, 77, 78, 79, 80, 81, 84, 86, 88, 89, 90, 95, 96, 100, 103, 108, 110, 111, 113, 115, 117, 118], "front": [108, 110, 111], "frozen": [44, 45], "ftool": [44, 48], "ftp": 108, "full": [89, 90, 112], "function": [1, 5, 10, 13, 15, 17, 18, 25, 42, 43, 44, 45, 49, 51, 53, 61, 64, 65, 68, 73, 75, 79, 80, 81, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 104, 107, 108, 110, 111, 112, 117, 118], "further": [13, 15, 16, 108, 117], "furthest": [79, 86], "g": [42, 43, 44, 45, 79, 85, 88, 108, 109, 112], "gap": [13, 15, 53, 56, 100, 103, 108], "gather": [44, 45], "gaussian": [79, 80, 117], "gch": [104, 105, 106, 110, 111], "gener": [3, 4, 5, 7, 13, 26, 28, 29, 32, 33, 38, 40, 41, 44, 45, 46, 47, 64, 70, 72, 79, 80, 88, 107, 108, 113], "generate_block_list": 5, "generate_floris_hetmap": [3, 4], "genrpm_col": [58, 59], "genrpmmean": 112, "geometr": [79, 84], "get": [5, 6, 13, 22, 23, 42, 43, 44, 46, 79, 82, 83, 84, 85, 89, 90, 95, 96, 100, 102], "get_all_dependent_turbin": 79, "get_all_impacting_turbin": [44, 48, 79], "get_all_impacting_turbines_geometr": 79, "get_column_mean": 13, "get_dependent_turbines_by_wd": [79, 82, 83], "get_df": [5, 6, 44, 45], "get_num_turbin": [13, 100], "get_power_curv": [44, 45], "get_turbine_pow": [110, 111], "get_turbs_in_radiu": 79, "get_upstream_turbs_flori": [13, 26, 28, 29, 32, 33, 38, 40, 41, 79], "get_yaw_angles_interpol": 89, "git": 115, "github": [114, 115, 117], "give": [1, 10, 64, 74, 115], "given": [1, 2, 10, 11, 13, 24, 58, 59, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 74, 76, 91, 92, 112], "go": [44, 45, 58, 59], "gone": 108, "good": [79, 87, 108, 113], "gov": [116, 117], "grab": [44, 45], "greater": [64, 70, 72, 74, 76], "green": 108, "grid": [79, 81, 88, 110, 111], "group": [64, 65, 73], "groupbi": 108, "gui": 108, "h": [91, 93], "ha": [1, 2, 10, 11, 13, 24, 42, 43, 58, 59, 64, 68, 79, 80, 87, 88, 91, 93, 108, 112, 116], "half": [1, 2, 10, 11], "hand": [44, 45, 79, 88, 104, 105, 106], "handl": [53, 55, 58, 59, 61, 62, 64, 73], "happen": [44, 45, 112], "hashabl": 59, "have": [3, 4, 13, 14, 18, 44, 45, 79, 80, 82, 84, 85, 87, 108, 112, 117], "head": [108, 111, 112], "heavili": 108, "help": [3, 4, 44, 45, 117], "helper": 112, "henc": [13, 15, 44, 45], "here": [58, 59, 108, 110], "heterogen": [3, 4], "heterogeneity_mapp": 3, "hidden": 110, "high": [44, 45, 47, 108], "higher": [44, 45, 89, 90, 108], "highest": [79, 88], "highlight": [44, 45], "histor": [79, 88, 109, 112, 114, 117], "histori": [44, 45, 110, 111], "hold": [5, 6, 13, 15], "hour": [13, 24, 108], "hous": [114, 117], "how": [1, 2, 10, 11, 61, 62, 64, 75, 108, 109, 110, 111, 117], "howev": [79, 80, 108, 110], "http": [110, 115, 117], "hypothes": [42, 43], "i": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 18, 24, 26, 29, 33, 35, 38, 41, 42, 43, 44, 45, 47, 48, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 68, 70, 72, 74, 75, 76, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118], "id_var": 112, "idea": [42, 43], "identifi": [44, 45, 46, 47, 108], "idx": [95, 97], "ignor": [1, 2, 10, 11, 13, 15, 108], "illustr": 110, "impact": [44, 48, 79, 83, 84, 117], "impacting_turbin": [79, 84], "implement": [44, 45], "implicitli": [79, 88], "import": [13, 15, 44, 48, 108, 110, 111, 112, 115, 117], "in_flasc_format": [58, 59], "includ": [1, 2, 10, 11, 13, 29, 33, 35, 41, 44, 45, 61, 63, 79, 80, 86, 95, 110, 112, 117], "include_itself": [13, 29, 33, 35, 41, 79, 86], "inclus": 108, "inconsequ": 108, "inconsist": 108, "incorpor": [89, 90], "increas": [79, 81], "index": [10, 13, 17, 18, 44, 45, 53, 54, 55, 95, 97, 112], "index_arrai": 49, "index_fault": 49, "indic": [13, 15, 17, 24, 25, 26, 28, 29, 32, 33, 38, 40, 41, 44, 45, 48, 49, 50, 51, 52, 64, 75], "individu": [44, 45, 108], "inflow": [3, 4, 44, 48, 79, 81, 88, 104, 105, 106, 112], "influenc": [79, 85], "inform": [3, 4, 44, 45, 48, 53, 56, 58, 59, 79, 81, 88, 108, 116], "inher": 117, "initi": [42, 43], "inplac": [58, 59, 112], "input": [5, 6, 13, 14, 24, 25, 53, 54, 55, 56, 57, 61, 62, 64, 65, 73, 75, 89, 90, 100, 103, 111, 118], "insert": [13, 15, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "insid": 117, "inspect": [44, 45], "instanc": [42, 43], "instanti": 112, "instead": [1, 2, 64, 73, 75, 108], "instruct": [110, 113], "int": [1, 2, 5, 6, 7, 8, 9, 10, 11, 13, 17, 22, 23, 26, 27, 28, 29, 31, 32, 33, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 58, 59, 61, 62, 63, 64, 73, 75, 79, 82, 83, 85, 86, 91, 92, 93, 95, 97, 100, 102], "int16": [13, 16], "int32": [13, 16], "int8": [13, 16], "integ": [5, 7, 13, 16, 44, 45, 104, 106], "intend": 114, "intens": [13, 19, 27, 30, 31, 32, 42, 43, 79, 81, 88, 91, 92, 117], "intention": 113, "inter": [44, 48], "interact": [108, 115], "interest": [13, 26, 29, 33, 35, 38, 41, 44, 45, 48, 79, 82, 83, 84, 85, 87, 115], "interfac": 117, "intern": [44, 45, 108], "interp_method": [53, 56, 108], "interp_with_max_gap": 100, "interpol": [13, 15, 53, 56, 79, 88, 89, 90, 100, 103, 108, 117], "interpolate_floris_from_df_approx": 79, "introduc": [112, 113], "invalid": 108, "investig": [44, 45], "io": 108, "ipynb": 113, "irregular": [79, 88], "is_dai": [13, 24, 25], "is_day_or_night": 13, "is_operation_norm": [44, 45], "is_operation_normal_": [44, 45, 108], "is_operation_normal_000": 108, "issu": [44, 45, 48, 79, 88, 108], "item": [95, 96, 97], "iter": [42, 43, 44, 45, 64, 75, 110], "iterat": [42, 43, 44, 45, 47], "its": [13, 18, 42, 43, 44, 45, 104, 106, 108, 112, 114, 115], "itself": [3, 4, 79, 86, 110], "j": [91, 92, 93, 117], "j_opt": [91, 92, 93, 94], "jensen": [104, 105, 106], "journal": 117, "jump": [13, 15], "jupyt": [58, 59, 115], "just": [44, 45], "keep": [58, 59, 110], "kei": [91, 92, 93, 95, 96, 97, 109], "kind": [100, 103], "king": 117, "know": [44, 48, 110, 111, 113, 117], "known": [44, 45, 108], "kw": [44, 45], "kwarg": [58, 59], "label": [8, 9, 44, 45, 64, 74, 110, 111], "lag": [13, 24], "lag_hour": [13, 24], "larg": [13, 15, 42, 43, 79, 81, 88, 108, 114, 117], "larger": [13, 15, 42, 43, 100, 103], "largest": [64, 70, 72, 74, 76, 108], "last": [79, 88], "lat": [79, 86], "latex": 117, "latitud": [13, 24], "layout": [3, 4, 108], "layout_i": [110, 111], "layout_visu": [110, 111], "layout_x": [110, 111], "layoutviz": [110, 111], "least": [44, 45, 46, 79, 84, 88, 117], "left": [44, 45, 64, 70, 72, 74, 76, 79, 80], "legend": [44, 45, 110, 111], "len": [110, 111], "length": [1, 2, 5, 7, 10, 11, 42, 43, 79, 84, 89, 90], "less": [1, 2, 10, 11, 64, 70, 72, 74, 76], "let": 111, "level": [53, 57, 60, 79, 85, 108, 117], "leverag": 117, "lgd": [44, 45], "librari": 108, "like": [13, 26, 28, 32, 38, 40, 44, 45, 47, 48, 64, 70, 72, 74, 76, 79, 88, 115], "limit": [3, 4, 13, 15, 44, 45], "limit_numb": [79, 82, 83, 85], "line": [42, 43, 108], "linear": [53, 56, 79, 84, 87, 88, 100, 103, 108], "linearli": [79, 88, 89, 90, 100, 103], "linearndinterpol": [89, 90], "lint": 115, "list": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 17, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 100, 101, 104, 106, 110], "literatur": [42, 43, 108], "ll": 110, "load": [42, 43, 104, 105, 106, 117], "load_floris_artifici": 104, "load_floris_smarteol": 104, "loc": [79, 82, 83], "local": [79, 88, 108, 115], "locat": [13, 24, 26, 29, 33, 35, 38, 41, 79, 86, 95, 98, 108], "log": 108, "loggingmanag": 43, "long": [1, 2, 10, 11, 58, 59, 79, 86, 108], "long_data_column": [58, 59, 112], "longer": [44, 45, 108], "longitud": [13, 24], "look": [13, 15, 44, 45, 108], "lookup": 89, "loop": [79, 82, 83], "loss": [13, 16, 42, 43, 79, 84, 87, 114, 117], "lost": [58, 59], "lot": 108, "low": [44, 45, 47], "lower": [13, 19, 20, 21, 42, 43, 79, 87, 89, 90, 108], "lowest": [79, 88], "m": [44, 45, 79, 81, 82, 83, 85, 88, 89, 90, 108, 110, 111, 117], "m_pow_lb": [44, 45], "m_pow_rb": [44, 45], "m_ws_lb": [44, 45], "m_ws_rb": [44, 45], "made": [79, 88, 108, 115], "magnitud": [79, 83, 85], "mai": [3, 4, 44, 45, 79, 85, 87, 88, 108, 112], "mailto": 117, "main": [107, 108, 118], "mainten": [44, 45, 108], "make": [13, 16, 44, 45, 79, 88, 108, 110, 111, 112], "mani": [110, 111], "manipul": [13, 58, 59], "manner": 108, "map": [3, 4, 8, 9, 53, 54, 112], "mark": [13, 15, 44, 45, 47, 79, 82, 83, 85], "mask": [42, 43], "mast": [108, 117], "match": [91, 94, 95, 98], "match_y_curves_by_offset": [91, 108], "matplotlib": [13, 25, 44, 45, 110, 111], "max": [1, 2, 10, 11, 53, 54, 55, 117], "max_gap": [53, 56, 100, 103, 108], "max_radiu": [13, 29, 33, 35, 41, 79, 86], "max_wd": [61, 63], "maxim": 117, "maximum": [1, 2, 10, 11, 13, 29, 33, 35, 41, 53, 55, 56, 61, 63, 64, 68, 70, 72, 73, 75, 79, 86, 89, 90, 100, 103, 108], "maximum_yaw_angl": [89, 90], "mean": [1, 2, 10, 11, 13, 22, 26, 28, 29, 32, 33, 35, 38, 39, 40, 41, 42, 43, 44, 45, 61, 62, 63, 79, 87, 88, 89, 90, 91, 94, 104, 105, 106, 108], "mean_wd": [61, 63], "measur": [13, 15, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 91, 92, 108, 111, 117], "measurement_arrai": 49, "meddlesom": [58, 59], "median": [44, 45, 53, 54, 55, 56, 61, 63, 108, 117], "median_wd": [61, 63], "melt": 112, "member": 110, "merg": [13, 15, 18], "met": [44, 45, 47, 108, 117], "metadata": [58, 59, 112], "method": [1, 2, 4, 6, 8, 9, 10, 11, 13, 43, 44, 45, 53, 56, 59, 64, 65, 79, 88, 100, 103, 108, 112, 117], "metmast_col": 108, "metric": 109, "michael": [116, 117], "min": [1, 2, 10, 11, 53, 54, 55, 64, 65, 117], "min_period": [53, 54, 55], "min_wd": [61, 63], "minim": [79, 87, 91, 93, 94], "minimum": [1, 2, 10, 11, 53, 54, 55, 61, 63, 64, 65, 70, 72, 73, 75, 89, 90, 110, 111], "minimum_yaw_angl": [89, 90], "minut": [44, 45, 108], "mirror_nan": [79, 88], "misalign": 117, "misc": 117, "miscalibr": 117, "miss": [13, 15, 95, 98], "missing_data_buff": [13, 15], "mode": [104, 106], "model": [79, 82, 83, 84, 85, 87, 88, 95, 104, 105, 106, 108, 109, 112, 114, 117], "model_fit": 113, "modifi": [58, 59, 64, 65], "modul": [0, 1, 3, 5, 10, 12, 13, 42, 49, 51, 58, 79, 80, 89, 91, 95, 100, 110, 113, 115, 117], "monitor": [114, 117], "monoton": 100, "month": 108, "more": [13, 16, 44, 45, 48, 79, 87, 108, 109, 112, 113, 115, 116, 117], "most": 108, "move": [53, 55, 117], "much": [13, 16], "mudafort": 117, "multi": [53, 57], "multipl": [3, 4, 44, 45, 108, 109, 117], "multipli": [44, 45], "must": [1, 2, 10, 11, 108], "n": [1, 2, 5, 7, 8, 9, 10, 11, 13, 26, 38, 64, 75, 91, 92, 110, 111, 112], "n_btstrp": [42, 43], "n_consecutive_measur": [44, 45, 49, 50], "n_eval_max": 49, "n_isnan": [44, 46], "n_turbin": [58, 59, 112], "nacel": 108, "nacwindspe": 108, "nacwindspeed_a1": 108, "nacwindspeed_a2": 108, "nacwindspeed_a3": 108, "name": [1, 2, 8, 9, 10, 11, 13, 24, 42, 43, 44, 45, 46, 64, 66, 67, 69, 70, 71, 72, 74, 75, 76, 108, 110, 112, 115], "nan": [13, 14, 15, 18, 44, 45, 47, 48, 51, 52, 61, 62, 79, 88, 95, 98, 100, 103, 108], "nan_polici": [61, 62], "nan_thrshld": [51, 52], "nativ": 112, "ndarrai": [13, 22, 53, 54, 64, 68, 70, 72, 74, 76], "nearest": [13, 26, 64, 68, 79, 88, 100, 103], "necessarili": [42, 43], "need": [13, 16, 58, 59, 79, 82, 83, 85, 108, 110], "neg": 108, "neighbor": [3, 4, 79, 84, 100, 103], "nest": [95, 96, 97], "nested_get": 95, "nested_set": 95, "new": [5, 6, 8, 9, 13, 25, 44, 45, 53, 56, 58, 59, 64, 66, 67, 68, 69, 70, 71, 72, 74, 95, 98, 109, 110, 115], "next": [1, 2, 10, 11, 108], "night": [13, 24, 25], "no_consecutive_measur": 49, "no_iter": [44, 45], "nois": 111, "nomin": [42, 43, 108], "non": [13, 18, 44, 48, 89, 90, 110], "none": [1, 2, 3, 4, 8, 9, 10, 11, 13, 22, 25, 42, 43, 44, 45, 47, 49, 53, 56, 58, 59, 64, 65, 70, 72, 73, 79, 82, 83, 85, 89, 90, 91, 93, 94, 95, 97, 99, 104, 105, 106, 108], "nonetyp": [79, 82, 83, 85], "nonhomogen": 108, "nonzero": [79, 84, 108], "normal": [44, 45, 108, 110], "normal_operation_col": [58, 59], "north": [51, 52, 108, 114, 117], "note": [3, 4, 8, 9, 42, 43, 44, 45, 53, 55, 108], "notebook": [58, 59, 110, 111, 113], "notic": [79, 87], "now": [108, 110, 111, 112, 115], "np": [3, 4, 5, 7, 13, 22, 44, 45, 49, 50, 53, 54, 56, 61, 62, 79, 81, 82, 83, 85, 91, 92, 93, 94, 95, 99, 100, 103, 110, 111, 112], "nrel": [114, 115, 116, 117], "nturb": [79, 80, 81], "null": [64, 69, 70, 71, 72, 75, 77, 78], "num": [110, 111], "num_block": [5, 6, 7, 110, 111], "num_bootstrap": 110, "num_df": [64, 73], "num_points_per_combin": [110, 111], "number": [1, 2, 5, 6, 7, 10, 11, 13, 22, 23, 24, 26, 27, 29, 30, 31, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 58, 59, 64, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 100, 102, 107, 108, 110, 111, 112], "numer": [44, 45, 113], "numpi": [61, 62, 63, 64, 68, 79, 85, 91, 93, 110, 111, 112], "object": [1, 2, 3, 4, 6, 8, 9, 10, 11, 13, 15, 42, 43, 44, 45, 51, 52, 58, 59, 64, 76, 79, 81, 82, 83, 84, 85, 87, 91, 92, 104, 105, 106, 110, 111], "obtain": 112, "obviou": 108, "obvious": 108, "occur": [13, 24, 44, 45, 108], "off": [44, 45, 79, 80], "offset": [42, 43, 44, 45, 51, 52, 89, 90, 91, 94, 108, 117], "offshor": [109, 117], "often": [44, 45, 108], "omit": [61, 62], "onc": 108, "one": [1, 2, 10, 11, 13, 18, 42, 43, 44, 45, 79, 84, 108, 109, 117, 118], "onli": [3, 4, 44, 45, 79, 85, 88, 108, 111], "onto": [53, 56, 108], "open": 112, "oper": [3, 4, 12, 13, 16, 44, 45, 53, 64, 73, 79, 85, 87, 89, 90, 104, 106, 108, 109, 110], "operation_mod": [104, 106], "opt": [44, 45], "opt_bound": [91, 93], "opt_n": [91, 93], "opt_search_brute_dx": [42, 43], "opt_search_rang": [42, 43], "opt_work": [42, 43], "optim": [42, 43, 89, 90, 108, 117], "option": [1, 2, 3, 4, 8, 9, 10, 11, 13, 14, 15, 16, 22, 24, 25, 29, 33, 35, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 58, 59, 64, 65, 73, 79, 80, 81, 84, 86, 87, 88, 89, 90, 95, 97, 99, 104, 105, 106, 109, 110, 115], "orang": 108, "order": [1, 2, 10, 11, 79, 82, 83, 100, 108, 113], "origin": [5, 6, 58, 59, 64, 68], "orrespond": [10, 11], "other": [13, 18, 24, 58, 59, 79, 85, 86, 88, 108, 114, 117], "otherwis": [58, 59], "our": [79, 88, 108], "out": [44, 45, 108, 110, 111], "outcom": [79, 87], "outer": [79, 85], "outlier": [108, 117], "output": [49, 50, 53, 55, 79, 81, 86, 91, 92, 93, 95, 99, 100, 103, 110, 112], "outsid": [44, 45, 79, 88, 108], "over": [13, 25, 42, 43, 61, 62, 64, 66, 67, 69, 70, 71, 72, 79, 82, 83, 88, 108], "overal": 112, "overlap": [1, 2, 10, 11, 64, 68, 73, 75], "overlap_dist": [64, 68], "overlay_frequ": [8, 9], "overplot": 111, "overview": 112, "overwritten": [44, 45], "own": [108, 112], "p": [44, 45, 117], "p_measur": [91, 92], "packag": [60, 79, 82, 115], "pair": [1, 2, 10, 11, 64, 75, 110], "panda": [13, 14, 24, 44, 45, 48, 58, 59, 79, 80, 81, 82, 83, 84, 87, 88, 95, 98, 108, 112, 117], "param": [79, 88], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 114, 117], "part": 108, "particular": [13, 16, 44, 45, 48, 79, 87, 109], "particularli": [44, 45], "pass": [64, 75, 110], "past": [89, 90], "path": [3, 4, 42, 43, 58, 59, 110, 111, 115], "pathlib": [110, 111], "paul": [116, 117], "pd": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 93, 95, 99, 100, 102, 108, 112], "pdf": [3, 4], "pdf_cutoff": [79, 80], "pdf_save_path": [3, 4], "pearson": [42, 43, 91, 93, 108], "per": [1, 10, 44, 45, 110, 111], "percent": [1, 2, 110], "percentag": 108, "percentil": [1, 2, 10, 11, 64, 75, 110], "perform": [42, 43, 64, 73, 100, 103, 114, 117], "perform_resampl": [5, 6], "perhap": [58, 59], "period": [13, 25, 44, 45, 53, 55, 108], "perturb": 110, "physic": [44, 45], "pink": 108, "pip": 115, "pitchangle_col": [58, 59], "pitchanglemean": 112, "pl": [1, 5, 6, 10, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 77, 78], "place": [58, 59, 64, 70, 72, 74, 76, 109, 112], "plai": 117, "platform": [44, 45], "pleas": [108, 117], "plot": [3, 4, 8, 9, 13, 25, 42, 43, 44, 45, 49, 50, 51, 52, 79, 87, 108, 110, 111], "plot_background_flow": [3, 4], "plot_energy_ratio": [8, 9, 42, 43, 110, 111], "plot_farm_mean_power_curv": [44, 45], "plot_figur": [49, 50, 51, 52], "plot_filters_custom_scatt": [44, 45], "plot_filters_custom_scatter_bokeh": [44, 45], "plot_filters_in_tim": [44, 45], "plot_filters_in_time_bokeh": [44, 45], "plot_filters_in_ws_power_curv": [44, 45], "plot_graph": [3, 4], "plot_iter_path": [42, 43], "plot_layout": [3, 4], "plot_lin": [79, 87], "plot_postprocessed_in_ws_power_curv": [44, 45], "plot_sun_altitude_with_day_night_color": 13, "plot_turbine_label": [110, 111], "plot_turbine_point": [110, 111], "plot_uplift": [8, 9, 110], "plot_waking_direct": [110, 111], "plt": [13, 25, 44, 45, 110, 111], "plu": [13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 79, 88], "png": [42, 43, 49], "point": [1, 2, 10, 11, 42, 43, 44, 45, 53, 54, 79, 80, 100, 103, 108, 110, 111, 112], "pola": 110, "polar": [1, 8, 9, 10, 42, 43, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 109, 110, 117], "polar_plot": [8, 9], "popul": [13, 15], "posit": [95, 98, 108, 112], "possibl": [13, 16, 79, 88, 108], "possibli": [13, 16, 64, 77, 78], "post": [79, 80, 117], "postprocess": [13, 15, 44, 45, 48, 79, 80, 117], "potenti": [13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 79, 88], "pow": [13, 22, 58, 59, 108], "pow_": [13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 79, 80, 81, 108], "pow_000": [44, 45, 46, 48, 79, 80, 81, 88, 110, 111, 112], "pow_001": [44, 45, 46, 48, 79, 81, 88, 110, 111, 112], "pow_002": [44, 48, 110, 111, 112], "pow_003": 111, "pow_006": [79, 81, 88], "pow_deadband": [44, 45], "pow_rang": 108, "pow_ref": [1, 2, 10, 11, 13, 26, 27, 28, 29, 38, 64, 66, 110, 111, 112], "pow_test": [64, 67, 112], "power": [1, 2, 10, 11, 13, 27, 28, 44, 45, 46, 47, 48, 64, 73, 79, 80, 81, 82, 83, 85, 88, 91, 92, 95, 99, 104, 105, 108, 110, 112, 117], "power_0": 111, "power_1": 111, "power_2": 111, "power_3": 111, "power_baseline_control": 110, "power_baseline_downstream": 110, "power_baseline_ref": 110, "power_col": [58, 59], "power_tb01": 112, "power_tb02": 112, "power_tb03": 112, "power_wakesteering_control": 110, "power_wakesteering_downstream": 110, "power_wakesteering_ref": 110, "practic": [109, 117], "pre": [1, 10, 110, 115], "precalcul": [79, 80, 88, 117], "precis": [13, 16, 44, 45], "predefin": [64, 75, 111], "predict": [42, 43, 79, 80, 87, 88, 108], "prefer": [58, 59, 112], "prefix": [13, 22], "prepar": [108, 117], "present": [1, 2, 10, 11, 79, 87, 117], "prespecifi": [44, 45, 79, 86], "prevent": [79, 88], "previou": [44, 45, 108], "previous": [44, 45], "primarili": [95, 98, 108], "print": [8, 9, 13, 14, 16, 44, 45, 48, 49, 50, 53, 56, 79, 88, 91, 92, 93, 110, 111, 112], "printout": [58, 59], "prior": [108, 110], "privat": [44, 45], "probabl": [79, 80], "problem": [42, 43, 44, 45], "procedur": 108, "process": [44, 45, 53, 64, 73, 79, 80, 107, 112, 117], "produc": [44, 45, 89, 90, 108, 110, 117], "product": [10, 44, 45, 46, 47, 48, 79, 80, 81, 88, 108, 118], "progress": [13, 14, 16], "prolong": 108, "properti": [58, 59, 61, 63], "provid": [1, 2, 8, 9, 10, 11, 13, 25, 44, 45, 64, 65, 79, 81, 108, 109, 110, 112, 113, 114, 117], "publish": 117, "purpos": 111, "put": [44, 45, 109], "pypi": 115, "pyplot": [44, 45, 110, 111], "python": [108, 115], "pywak": [79, 88], "quantif": [42, 43], "quantifi": [114, 117], "quantiti": [13, 26, 28, 29, 32, 33, 35, 38, 40, 41, 53, 55, 117], "queri": [44, 45], "question": [95, 96, 97], "quickli": [79, 84, 88], "quit": [110, 111], "r": [79, 86, 110, 111, 117], "radiu": [13, 26, 29, 33, 35, 38, 41, 64, 73, 75, 79, 86], "rais": [8, 9, 58, 59, 64, 65], "ramp": [89, 90], "ramp_down_w": [89, 90], "ramp_up_w": [89, 90], "rand": 112, "randn": [110, 111], "random": [110, 111, 112], "rang": [13, 19, 20, 21, 26, 28, 29, 32, 33, 38, 40, 41, 42, 43, 64, 68, 79, 87, 88, 91, 93, 94, 108, 110, 111], "rapid": [79, 80], "rate": [44, 45], "rather": [13, 15, 44, 45, 64, 69, 70, 71, 72, 118], "ratio": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 42, 43, 64, 68, 77, 78, 79, 88, 107, 108, 114, 117, 118], "raw": [79, 88, 107, 117], "raw_activepowermean": 112, "raw_data_process": 108, "raw_shutdowndur": 112, "raw_windspeedmean": 112, "raw_yawanglemean": 112, "re": [79, 80, 112, 115], "read": [44, 45], "readi": 115, "readili": 108, "real": [13, 16, 79, 87, 108, 113], "receiv": [64, 65], "recent": 108, "recommend": [79, 88, 108, 113, 115], "reconfigur": 109, "rectangular": [79, 81], "red": 108, "reduc": [13, 16, 108], "reduct": [13, 16], "ref": [64, 77, 78], "ref_col": [1, 2, 8, 9, 10, 11, 64, 66, 73, 77, 78], "ref_turbin": [1, 2, 10, 11, 64, 75, 111], "refer": [1, 2, 10, 11, 13, 27, 64, 73, 75, 77, 78, 79, 87, 91, 94, 95, 98, 99, 108, 109, 110, 112], "refin": [89, 90, 91, 92], "refine_with_fmin": [91, 92], "reflect": [64, 68, 73, 75], "regard": 117, "region": [44, 45, 89, 90], "rel": [44, 45, 108, 109, 117], "relat": 117, "relev": [13, 24, 29, 33, 35, 41, 51, 52], "reli": [108, 114, 117], "remain": 109, "remaind": [79, 88], "rememb": 115, "remov": [13, 14, 44, 45, 64, 69, 70, 71, 72, 73, 75, 79, 84, 91, 93, 108, 117], "remove_all_nul": [1, 2, 8, 9, 10, 11, 64, 69, 70, 71, 72, 73, 75], "renam": 108, "repeat": [5, 7, 108], "replac": [13, 18, 95, 98, 115], "replic": [95, 98], "replicate_nan_valu": 95, "report": [44, 48, 108], "repositori": [0, 12, 60, 113, 114, 115, 116, 117], "repres": [79, 85, 95, 98, 112, 117, 118], "represent": [58, 59], "requir": [1, 2, 10, 11, 44, 48, 64, 73, 77, 78, 108, 112], "resampl": [5, 6, 53, 56, 91, 93, 108], "resample_energy_t": [5, 6], "research": 117, "reset": [44, 45, 108], "reset_filt": [44, 45], "reset_index": 108, "resim_flori": 95, "resimul": [95, 98, 99], "resolut": [42, 43, 108], "respect": [42, 43, 79, 88, 89, 90, 108, 111, 117], "result": [1, 2, 8, 9, 10, 11, 44, 45, 58, 59, 64, 68, 73, 79, 80, 81, 87, 100, 103, 110], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 112, 116, 118], "return_by_column": [49, 50], "return_index_map": [53, 54], "return_influence_magnitud": [79, 85], "revers": 111, "review": 117, "rich": [114, 117], "right": [44, 45, 64, 70, 72, 74, 76, 79, 80], "role": 117, "root": 115, "rose": [79, 87, 88, 108, 109], "roughli": 113, "round": 108, "row": [5, 6, 13, 14, 15, 17, 18, 26, 28, 29, 32, 33, 38, 40, 41, 44, 48, 64, 68, 73, 79, 82, 83, 84, 85, 87, 89, 90, 110, 112], "run": [44, 45, 79, 80, 82, 83, 85, 108, 110, 111], "runtimeerror": [64, 65], "safe": [44, 45, 79, 84], "same": [5, 6, 13, 18, 42, 43, 44, 45, 58, 59, 64, 68, 79, 80, 88, 95, 98, 108, 110, 112], "sampl": [1, 2, 10, 11, 79, 88, 108], "save": [3, 4, 8, 9, 42, 43, 58, 59, 79, 81, 108, 110, 117], "save_path": [42, 43, 49], "save_turbine_inflow_conditions_to_df": [79, 81], "scada": [0, 12, 42, 43, 44, 45, 46, 47, 48, 60, 79, 87, 95, 99, 108, 109, 114, 117], "scada_col": 108, "scale": [42, 43], "scatter": [44, 45], "scenario": [79, 88], "scheme": [8, 9], "scienc": 117, "scipi": [61, 62, 89, 90], "script": 108, "seaborn": 110, "search": [42, 43], "second": [1, 2, 10, 11, 13, 15, 53, 54, 55, 79, 85, 108, 110, 111], "see": [108, 109, 115, 117], "select": 108, "self": [44, 45, 47, 58, 59, 108], "sensor": [44, 45, 49, 50, 79, 88, 108, 117], "separ": [8, 9, 42, 43], "sequenti": 112, "serial": [89, 90], "serv": [79, 87, 108], "server": 108, "set": [1, 2, 3, 4, 10, 11, 13, 24, 42, 43, 44, 45, 53, 56, 64, 77, 78, 79, 81, 87, 88, 89, 90, 95, 97, 108, 109, 110, 111, 112, 117], "set_pow_ref_by_n_closest_upstream_turbin": 13, "set_pow_ref_by_turbin": [13, 111], "set_pow_ref_by_upstream_turbin": 13, "set_pow_ref_by_upstream_turbines_in_radiu": 13, "set_ti_by_all_turbin": 13, "set_ti_by_turbin": 13, "set_ti_by_upstream_turbin": 13, "set_ti_by_upstream_turbines_in_radiu": 13, "set_wd_by_all_turbin": [13, 111], "set_wd_by_radius_from_turbin": 13, "set_wd_by_turbin": 13, "set_ws_by_all_turbin": 13, "set_ws_by_n_closest_upstream_turbin": 13, "set_ws_by_turbin": [13, 111], "set_ws_by_upstream_turbin": 13, "set_ws_by_upstream_turbines_in_radiu": 13, "set_xlabel": [110, 111], "set_ylabel": [110, 111], "setup": 115, "sever": [44, 45, 110], "share": 108, "sharex": [110, 111], "shed": [44, 48], "shift": [42, 43, 91, 92, 93, 108], "should": [1, 2, 10, 11, 13, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 55, 64, 68, 79, 84, 87, 88, 100, 104, 105, 106, 108, 112], "show": [8, 9, 42, 43, 44, 45, 48, 108, 110, 111], "show_uncorrected_data": [42, 43], "show_wind_direction_distribut": [8, 9, 110, 111], "show_wind_speed_distribut": [8, 9, 110, 111], "shown": [8, 9, 44, 45, 108, 110], "shutdown": [44, 45], "shutdowndur": 112, "side": 108, "signal": [44, 45, 108, 112], "significantli": 108, "similar": [108, 118], "similarli": [58, 59, 108], "simlei": 117, "simpl": [79, 84, 110, 111], "simpler": 108, "simpli": [13, 15, 79, 83, 108, 112], "simplifi": [79, 84, 108], "simul": [51, 52, 79, 81, 84, 117], "sinc": [44, 45, 108, 110], "singl": [8, 9, 108, 118], "sinner": [116, 117], "situat": [44, 45, 47, 108], "size": [13, 16, 42, 43, 44, 45, 64, 70, 72, 73, 75, 79, 81, 85, 88, 117], "slice": 108, "slightli": [42, 43, 44, 45, 79, 87], "slope": [79, 84, 87], "smaller": 108, "smallest": [64, 70, 72, 74, 76, 110], "smarteol": [109, 112, 118], "sn": 110, "so": [44, 45, 48, 58, 59, 79, 87, 108], "softwar": 117, "solut": [44, 45, 79, 80, 81, 88, 117], "solv": [42, 43, 113], "some": [64, 65, 111], "someon": [13, 18], "somewher": [44, 45], "sort": [13, 17, 18, 58, 59, 79, 83, 86, 100], "sort_by_dist": [79, 86], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 112, 115, 117], "space": [42, 43], "speak": 113, "specif": [44, 45, 46, 64, 73, 79, 88, 108, 109, 112], "specifi": [1, 2, 10, 11, 13, 22, 42, 43, 44, 45, 61, 62, 64, 73, 74, 76, 79, 83, 85, 104, 106, 108, 110, 117], "speed": [1, 2, 3, 4, 8, 9, 10, 11, 13, 16, 21, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 64, 72, 73, 75, 77, 78, 79, 81, 82, 83, 85, 88, 89, 90, 95, 99, 108, 112, 117], "sql": 108, "squar": [91, 94], "squeez": 110, "stackoverflow": [95, 96, 97], "standard": [44, 45, 49, 50, 53, 55, 61, 63, 79, 80, 104, 105, 106], "start": [13, 15, 89, 90, 91, 93, 109, 112], "stat": [61, 62], "state": 108, "statist": [61, 63, 64, 73, 91, 93], "statu": [44, 45, 47, 51, 52], "std": [53, 54, 55, 117], "std_wd": [61, 63], "stddev_threshold": [44, 45, 49, 50], "steer": [89, 90, 109, 110, 113, 117], "step": [1, 2, 10, 11, 42, 43, 44, 45, 51, 52, 64, 70, 72, 73, 75, 79, 80, 87, 88, 91, 92, 93, 108, 110, 111, 113], "still": [13, 29, 33, 35, 41, 79, 86, 100, 103, 112], "storag": [13, 16, 108, 117], "store": [8, 9, 58, 59, 110, 112], "str": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 22, 24, 42, 43, 44, 45, 53, 56, 58, 59, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 88, 95, 96, 97, 100, 103, 104, 105, 106], "straightforward": 112, "straightforwardli": 108, "streamlit": 108, "strictli": [1, 2, 10, 11], "string": [44, 45, 51, 52, 64, 75], "strongest": [79, 82], "strongli": [108, 115], "structur": [5, 6], "stuck": [44, 45, 49, 50, 108, 117], "style": 112, "subclass": [58, 59, 112], "subdirectori": 113, "submodul": 107, "subplot": [110, 111], "subset": [8, 9, 44, 45], "subtleti": 108, "subtract": [64, 68, 108], "suffici": [44, 48], "suggest": [44, 45], "suit": [108, 110, 114, 117], "sum": [1, 2, 10, 11, 64, 65], "sun": [13, 24, 25], "sun_altitud": [13, 24, 25], "sunris": [13, 24], "sunrise_altitud": [13, 24], "sunset": [13, 24], "sunset_altitud": [13, 24], "suppli": [111, 112], "support": [112, 117], "suppos": 112, "supposedli": [79, 84], "sure": [44, 45, 108], "surround": 108, "switch": 110, "sychron": 117, "synchron": 108, "syntax": 109, "synthet": [114, 117], "system": 112, "t": [1, 2, 10, 11, 79, 82, 83, 86, 110, 111], "t0": [91, 93, 111], "t1": [91, 93, 111], "t2": 111, "t3": 111, "t_step": [91, 93], "tabl": [5, 6, 10, 42, 43, 64, 65, 79, 81, 88, 89, 104, 105, 116], "take": [13, 15, 64, 73, 89, 90, 95, 99, 108], "taken": [112, 117], "target_i": [100, 103], "tb01": 112, "tb02": 112, "tb03": 112, "td": [51, 52], "team": [116, 117], "technic": 117, "term": [1, 2, 10, 11, 42, 43, 108], "test": [1, 2, 10, 11, 42, 43, 64, 73, 75, 77, 78, 79, 85, 87, 91, 94, 108, 109, 110, 112], "test_col": [1, 2, 8, 9, 10, 11, 64, 67, 73, 77, 78], "test_turbin": [1, 2, 10, 11, 42, 43, 64, 75, 79, 85, 110, 111], "test_turbines_subset": [42, 43], "text": [110, 111], "than": [13, 15, 42, 43, 44, 45, 48, 64, 69, 70, 71, 72, 74, 76, 100, 103, 108], "thei": [1, 2, 10, 11, 13, 29, 33, 35, 41, 64, 75, 108], "them": [44, 45, 108], "therebi": [79, 80], "therefor": [79, 88, 108], "thi": [3, 4, 5, 6, 13, 15, 16, 17, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 61, 63, 64, 65, 68, 73, 75, 79, 80, 81, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 103, 108, 110, 111, 112, 113, 115, 117], "thing": 114, "third": 110, "those": [1, 2, 10, 11, 44, 45, 79, 84, 87, 110], "though": [79, 87, 108], "three": [79, 80, 109, 117], "threshold": [44, 45, 49, 50, 51, 52], "through": [108, 113, 115], "throughout": 113, "thrown": [13, 18], "thrust": [104, 105], "thu": 108, "ti": [3, 13, 27, 30, 31, 32, 33, 44, 45, 48, 49, 50, 79, 80, 81, 88, 108, 117], "ti_": [13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "ti_000": [79, 81], "ti_006": [79, 81], "ti_arrai": [79, 81], "ti_mask": [42, 43], "ti_rang": [13, 19], "time": [5, 7, 13, 14, 15, 17, 18, 24, 25, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 58, 59, 79, 88, 91, 92, 93, 100, 101, 108, 110, 111, 112], "time_arrai": [53, 56, 100, 101, 108], "time_col": [58, 59], "time_mask": [42, 43], "time_oper": 108, "time_seri": 110, "timedelta": [51, 52, 53, 54, 55, 100, 101], "timedelta64": [91, 93], "timeseri": [79, 88, 110, 111, 117], "timeshift": [108, 117], "timestamp": [13, 24, 44, 45, 48, 108], "timestamp_startformat": 112, "timestep": [53, 56, 100, 101], "timezon": 108, "titl": [44, 45, 110, 111, 117], "to_datetim": [42, 43], "to_feath": [58, 59], "todo": [58, 59], "too": [44, 45, 58, 59], "tool": [79, 88, 108, 112, 113, 114, 115, 117], "toolbox": [108, 114], "top": [44, 45, 60], "total": [10, 117], "toward": 108, "transit": [89, 90, 110], "travers": [95, 96, 97], "treat": [53, 55], "trend": [44, 45], "tri": 110, "true": [1, 2, 5, 6, 8, 9, 10, 11, 13, 16, 33, 35, 41, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 63, 64, 73, 79, 81, 85, 88, 91, 93, 94, 100, 103, 108, 110, 111, 112], "trust": 108, "try": [44, 45], "tune": 95, "tupl": [1, 2, 3, 4, 10, 11, 42, 43, 44, 45, 53, 54, 61, 63, 64, 65, 79, 85, 91, 94], "turb_no": [13, 26, 29, 33, 35, 38, 41, 79, 86], "turbin": [1, 2, 3, 4, 10, 11, 13, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 58, 59, 64, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 99, 100, 102, 104, 106, 109, 111, 112, 114, 117], "turbine_list": [13, 22, 44, 47], "turbine_nam": [44, 45, 58, 59], "turbine_num_digit": [58, 59], "turbine_numb": [13, 27, 30, 31, 36, 37, 39], "turbine_subset": [44, 45], "turbine_upstream": [91, 92], "turbine_weight": [79, 84], "turbinenam": 112, "turbines_downstream": [91, 92], "turbopark": [104, 105, 106], "turbul": [13, 19, 27, 30, 31, 32, 42, 43, 79, 81, 88, 91, 92, 117], "turbulence_intens": [89, 90, 110, 111], "turn": 115, "two": [1, 2, 10, 11, 13, 17, 18, 24, 42, 43, 44, 45, 58, 59, 64, 77, 78, 91, 93, 94, 95, 98, 108, 110, 111, 117], "type": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 117], "typic": [13, 16, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 79, 80, 84, 87, 88, 89, 90, 108], "uncalibr": 108, "uncertain": 108, "uncertainflorismodel": [79, 80], "uncertainti": [42, 43, 104, 105, 106], "uncommon": [42, 43], "uncorrect": [42, 43], "under": [42, 43, 116], "understand": 113, "union": [8, 9, 42, 43], "uniqu": [44, 45], "unless": [8, 9, 64, 73], "unrealist": 108, "unsort": [13, 17, 18], "unstack": 108, "until": [13, 29, 33, 35, 41, 79, 80, 81], "unus": [49, 50], "unwak": [79, 87], "up": [13, 16, 44, 45, 58, 59, 79, 88, 89, 90, 108, 110, 117], "updat": [95, 98], "uplift": [1, 2, 8, 9, 10, 11, 64, 75, 112, 117], "uplift_absolut": [1, 2, 64, 75], "uplift_col": [8, 9], "uplift_df_name1_df_name2": [1, 2, 10, 11], "uplift_nam": [1, 2, 10, 11, 64, 75, 110], "uplift_names_subset": [8, 9], "uplift_pair": [1, 2, 10, 11, 64, 75, 110], "upper": [13, 19, 20, 21, 42, 43, 44, 45], "upsampl": 117, "upstream": [3, 4, 13, 26, 28, 29, 32, 33, 35, 38, 40, 41, 44, 48, 79, 87, 91, 92, 111, 117], "uq": [42, 43], "url": 117, "us": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 15, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 58, 59, 64, 65, 68, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 117, 118], "usag": [44, 45, 108, 110, 112, 117, 118], "use_circular_statist": [91, 93], "use_predefined_ref": [1, 2, 10, 11, 64, 75, 110, 111], "use_predefined_w": [1, 2, 10, 11, 64, 75, 110, 111], "use_predefined_wd": [1, 2, 10, 11, 64, 75, 110, 111], "useabl": 108, "user": [44, 45, 58, 59, 79, 88, 108, 110, 111, 113, 117], "userwarn": [64, 65], "utc": [13, 24, 112], "util": [13, 26, 28, 29, 32, 33, 38, 40, 41, 44, 48, 107, 113, 114], "v": [44, 45, 108], "v1": [109, 110], "valid": [44, 45, 53, 54, 64, 73, 75, 77, 78, 79, 88, 108, 114, 117], "valu": [1, 2, 3, 4, 5, 7, 10, 11, 13, 14, 15, 18, 27, 28, 30, 31, 32, 34, 36, 37, 39, 40, 42, 43, 44, 45, 51, 52, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 88, 91, 92, 93, 94, 95, 96, 97, 98, 100, 108, 110, 111, 112, 118], "value_column": 112, "value_nam": 112, "valueerror": [8, 9], "vane": 108, "var_nam": 112, "vari": [79, 87], "variabl": [13, 16, 26, 28, 29, 32, 33, 38, 40, 41, 42, 43, 44, 45, 47, 79, 81, 89, 90, 108, 117], "variable_column": 112, "variant": 108, "variat": [44, 45], "variou": [42, 43, 44, 45, 108], "ve": 110, "vector": [91, 93, 108], "venv": 115, "verbos": [13, 14, 16, 44, 45, 48, 49, 50, 53, 56, 79, 88, 91, 92, 93, 108], "veri": [44, 45, 46, 79, 84, 108, 117], "version": [110, 111, 112, 117], "via": [95, 96, 97, 111], "virtual": 115, "visual": [3, 4, 110, 117], "w": [1, 2, 8, 9, 10, 11, 13, 37, 38, 39, 40, 41, 58, 59, 64, 65, 71, 73, 77, 78, 79, 80, 81, 86, 88, 108, 110, 111, 112], "wa": [44, 45, 109, 112], "wai": [13, 15, 108, 112, 113], "wake": [42, 43, 44, 48, 79, 84, 87, 89, 90, 104, 105, 106, 108, 109, 110, 113, 114, 117], "wake_model": [104, 105, 106], "wake_slop": [79, 84, 87], "wakest": [110, 111], "want": [44, 45, 58, 59, 95, 98, 100, 103], "warn": [58, 59, 79, 88], "wd": [1, 2, 3, 4, 10, 11, 13, 34, 35, 36, 42, 43, 44, 48, 58, 59, 64, 65, 69, 73, 77, 78, 79, 80, 81, 82, 83, 88, 108, 110, 111, 112], "wd_": [13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 108], "wd_0": 111, "wd_000": [44, 45, 48, 79, 81, 108, 111, 112], "wd_001": [44, 48, 108, 111, 112], "wd_002": [44, 48, 111, 112], "wd_003": [44, 45, 108, 111], "wd_006": [79, 81], "wd_1": 111, "wd_2": 111, "wd_3": 111, "wd_arrai": [3, 4, 79, 81, 82, 83, 84, 85, 110, 111], "wd_bia": [42, 43], "wd_bin": [1, 2, 3, 10, 11, 64, 70], "wd_bin_overlap_radiu": [1, 2, 8, 9, 10, 11, 64, 73, 75, 110], "wd_bin_width": [3, 4, 42, 43], "wd_col": [1, 2, 8, 9, 10, 11, 64, 69, 70, 73, 77, 78], "wd_mask": [42, 43], "wd_max": [1, 2, 8, 9, 10, 11, 64, 70, 73, 75], "wd_min": [1, 2, 8, 9, 10, 11, 64, 70, 73, 75], "wd_point": [110, 111], "wd_rang": [13, 20], "wd_std": [79, 80, 104, 105, 106], "wd_step": [1, 2, 8, 9, 10, 11, 42, 43, 64, 70, 73, 75, 79, 87], "wd_turbin": [1, 2, 10, 11, 64, 75, 111], "we": [3, 4, 44, 45, 48, 58, 59, 79, 88, 108, 110, 112, 113, 115], "week": [44, 45, 108], "weight": [1, 2, 10, 11, 64, 65, 75, 79, 84], "weight_bi": [1, 2, 8, 9, 10, 11, 64, 65, 75], "weigth": [1, 2, 10, 11], "welcom": 114, "well": [13, 25, 110], "were": [44, 45, 109, 117], "west": 111, "westerli": 110, "what": [42, 43, 79, 87, 108, 117], "when": [1, 2, 10, 11, 42, 43, 44, 45, 47, 58, 59, 79, 81, 95, 98, 104, 106, 112, 115], "where": [1, 2, 3, 4, 5, 7, 10, 11, 13, 14, 15, 42, 43, 44, 45, 53, 54, 64, 68, 79, 87, 108, 110, 111, 112, 113], "whether": [3, 4, 8, 9, 13, 24, 44, 45, 47, 49, 50, 51, 52, 61, 63, 64, 75, 79, 85], "which": [1, 2, 10, 11, 13, 18, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 75, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 100, 103, 107, 108, 110, 112, 115, 117], "while": [110, 117], "whose": [64, 70, 72, 74, 76], "wide": [58, 59, 111], "widespread": 108, "width": [1, 2, 10, 11, 42, 43, 53, 54, 55], "wind": [1, 2, 3, 4, 8, 9, 10, 11, 13, 20, 21, 26, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 58, 59, 61, 62, 63, 64, 68, 70, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 99, 104, 105, 106, 109, 114, 117, 118], "wind_data": [110, 111], "wind_dir_tb01": 112, "wind_dir_tb02": 112, "wind_dir_tb03": 112, "wind_direct": [89, 90, 110, 111], "wind_spe": [89, 90, 110, 111], "wind_speed_tb01": 112, "wind_speed_tb02": 112, "wind_speed_tb03": 112, "winddirection_80m": 108, "winddirection_col": [58, 59], "window": [44, 45, 53, 54, 55, 108], "window_add": 108, "window_width": [53, 54, 55], "windspe": 108, "windspeed_col": [58, 59], "windspeedmean": 112, "wise": [44, 45], "within": [13, 15, 29, 33, 35, 41, 44, 45, 64, 68, 73, 79, 86, 108, 109, 110, 112, 117], "without": [13, 16, 64, 65, 73, 79, 80, 84, 110], "work": [58, 59, 110, 111, 112, 115], "worker": [42, 43], "workflow": 112, "would": [44, 45, 108, 117], "wrap": [64, 68, 91, 94, 100, 103, 108, 117], "wrap_0deg_to_360deg": [79, 88], "wrap_around_360": [100, 103], "wrapper": [61, 62, 79, 82, 83], "write": [79, 81, 117], "ws_": [13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 108], "ws_0": 111, "ws_000": [44, 45, 46, 79, 81, 108, 111, 112], "ws_001": [44, 45, 46, 111, 112], "ws_002": 112, "ws_003": [44, 45], "ws_006": [79, 81], "ws_1": 111, "ws_arrai": [79, 81, 110, 111], "ws_bin": [1, 2, 10, 11, 44, 45, 64, 70, 72], "ws_col": [1, 2, 8, 9, 10, 11, 64, 71, 72, 73, 77, 78], "ws_deadband": [44, 45], "ws_mask": [42, 43], "ws_max": [1, 2, 8, 9, 10, 11, 64, 70, 72, 73, 75], "ws_min": [1, 2, 8, 9, 10, 11, 64, 70, 72, 73, 75], "ws_point": [110, 111], "ws_rang": [3, 4, 13, 21, 108], "ws_step": [1, 2, 8, 9, 10, 11, 42, 43, 64, 70, 72, 73, 75], "ws_test": [79, 82, 83, 85], "ws_turbin": [1, 2, 10, 11, 64, 75, 111], "www": 110, "x": [13, 26, 29, 33, 35, 38, 41, 44, 45, 79, 85, 91, 92, 93, 100, 103, 110, 111, 112], "x_col": [44, 45], "x_opt": [91, 92, 93], "x_turb": [13, 26, 29, 33, 35, 38, 41, 79, 86], "xlabel": [44, 45, 110, 111], "xp": [100, 103], "y": [3, 4, 13, 26, 29, 33, 35, 38, 41, 44, 45, 91, 93, 100, 103, 110, 111], "y_col": [44, 45], "y_shift_rang": [91, 93], "y_turb": [13, 26, 29, 33, 35, 38, 41, 79, 86], "yaml": [110, 111], "yaw": [89, 90, 95, 99, 108, 110, 111, 117], "yaw_": 108, "yaw_000": 108, "yaw_001": 108, "yaw_angl": [95, 99, 110], "yaw_angles_opt": [89, 90], "yaw_optimizer_visu": 117, "yawanglemean": 112, "year": 117, "yet": [44, 45, 108], "yield": [79, 81, 87, 109], "ylabel": [44, 45, 110, 111], "ylim": [3, 4], "you": [44, 45, 47, 95, 98, 100, 103, 108, 113, 115, 117], "your": [13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 79, 87, 88, 115, 117], "yref": [91, 94], "ytest": [91, 94], "zero": [1, 2, 10, 11, 44, 45, 89, 90, 110], "zoh": [13, 15]}, "titles": ["flasc.analysis", "flasc.analysis.energy_ratio", "flasc.analysis.energy_ratio.compute_energy_ratio", "flasc.analysis.energy_ratio_heterogeneity_mapper", "flasc.analysis.energy_ratio_heterogeneity_mapper.heterogeneity_mapper", "flasc.analysis.energy_ratio_input", "flasc.analysis.energy_ratio_input.EnergyRatioInput", "flasc.analysis.energy_ratio_input.generate_block_list", "flasc.analysis.energy_ratio_output", "flasc.analysis.energy_ratio_output.EnergyRatioOutput", "flasc.analysis.total_uplift", "flasc.analysis.total_uplift.compute_total_uplift", "flasc.data_processing", "flasc.data_processing.dataframe_manipulations", "flasc.data_processing.dataframe_manipulations.df_drop_nan_rows", "flasc.data_processing.dataframe_manipulations.df_find_and_fill_data_gaps_with_missing", "flasc.data_processing.dataframe_manipulations.df_reduce_precision", "flasc.data_processing.dataframe_manipulations.df_sort_and_find_duplicates", "flasc.data_processing.dataframe_manipulations.df_sort_and_fix_duplicates", "flasc.data_processing.dataframe_manipulations.filter_df_by_ti", "flasc.data_processing.dataframe_manipulations.filter_df_by_wd", "flasc.data_processing.dataframe_manipulations.filter_df_by_ws", "flasc.data_processing.dataframe_manipulations.get_column_mean", "flasc.data_processing.dataframe_manipulations.get_num_turbines", "flasc.data_processing.dataframe_manipulations.is_day_or_night", "flasc.data_processing.dataframe_manipulations.plot_sun_altitude_with_day_night_color", "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_n_closest_upstream_turbines", "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_turbines", "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines", "flasc.data_processing.dataframe_manipulations.set_pow_ref_by_upstream_turbines_in_radius", "flasc.data_processing.dataframe_manipulations.set_ti_by_all_turbines", "flasc.data_processing.dataframe_manipulations.set_ti_by_turbines", "flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines", "flasc.data_processing.dataframe_manipulations.set_ti_by_upstream_turbines_in_radius", "flasc.data_processing.dataframe_manipulations.set_wd_by_all_turbines", "flasc.data_processing.dataframe_manipulations.set_wd_by_radius_from_turbine", "flasc.data_processing.dataframe_manipulations.set_wd_by_turbines", "flasc.data_processing.dataframe_manipulations.set_ws_by_all_turbines", "flasc.data_processing.dataframe_manipulations.set_ws_by_n_closest_upstream_turbines", "flasc.data_processing.dataframe_manipulations.set_ws_by_turbines", "flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines", "flasc.data_processing.dataframe_manipulations.set_ws_by_upstream_turbines_in_radius", "flasc.data_processing.energy_ratio_wd_bias_estimation", "flasc.data_processing.energy_ratio_wd_bias_estimation.bias_estimation", "flasc.data_processing.filtering", "flasc.data_processing.filtering.FlascFilter", "flasc.data_processing.filtering.df_get_no_faulty_measurements", "flasc.data_processing.filtering.df_mark_turbdata_as_faulty", "flasc.data_processing.filtering.filter_df_by_faulty_impacting_turbines", "flasc.data_processing.find_sensor_faults", "flasc.data_processing.find_sensor_faults.find_sensor_stuck_faults", "flasc.data_processing.northing_offset", "flasc.data_processing.northing_offset.crosscheck_northing_offset_consistency", "flasc.data_processing.time_operations", "flasc.data_processing.time_operations.df_downsample", "flasc.data_processing.time_operations.df_movingaverage", "flasc.data_processing.time_operations.df_resample_by_interpolation", "flasc.data_processing.time_operations.flatten_cols", "flasc.flasc_dataframe", "flasc.flasc_dataframe.FlascDataFrame", "flasc.utilities", "flasc.utilities.circular_statistics", "flasc.utilities.circular_statistics.calc_wd_mean_radial", "flasc.utilities.circular_statistics.calculate_wd_statistics", "flasc.utilities.energy_ratio_utilities", "flasc.utilities.energy_ratio_utilities.add_bin_weights", "flasc.utilities.energy_ratio_utilities.add_power_ref", "flasc.utilities.energy_ratio_utilities.add_power_test", "flasc.utilities.energy_ratio_utilities.add_reflected_rows", "flasc.utilities.energy_ratio_utilities.add_wd", "flasc.utilities.energy_ratio_utilities.add_wd_bin", "flasc.utilities.energy_ratio_utilities.add_ws", "flasc.utilities.energy_ratio_utilities.add_ws_bin", "flasc.utilities.energy_ratio_utilities.bin_and_group_dataframe", "flasc.utilities.energy_ratio_utilities.bin_column", "flasc.utilities.energy_ratio_utilities.check_compute_energy_ratio_inputs", "flasc.utilities.energy_ratio_utilities.cut", "flasc.utilities.energy_ratio_utilities.filter_all_nulls", "flasc.utilities.energy_ratio_utilities.filter_any_nulls", "flasc.utilities.floris_tools", "flasc.utilities.floris_tools.add_gaussian_blending_to_floris_approx_table", "flasc.utilities.floris_tools.calc_floris_approx_table", "flasc.utilities.floris_tools.get_all_dependent_turbines", "flasc.utilities.floris_tools.get_all_impacting_turbines", "flasc.utilities.floris_tools.get_all_impacting_turbines_geometrical", "flasc.utilities.floris_tools.get_dependent_turbines_by_wd", "flasc.utilities.floris_tools.get_turbs_in_radius", "flasc.utilities.floris_tools.get_upstream_turbs_floris", "flasc.utilities.floris_tools.interpolate_floris_from_df_approx", "flasc.utilities.lookup_table_tools", "flasc.utilities.lookup_table_tools.get_yaw_angles_interpolant", "flasc.utilities.optimization", "flasc.utilities.optimization.estimate_ti", "flasc.utilities.optimization.find_timeshift_between_dfs", "flasc.utilities.optimization.match_y_curves_by_offset", "flasc.utilities.tuner_utilities", "flasc.utilities.tuner_utilities.nested_get", "flasc.utilities.tuner_utilities.nested_set", "flasc.utilities.tuner_utilities.replicate_nan_values", "flasc.utilities.tuner_utilities.resim_floris", "flasc.utilities.utilities", "flasc.utilities.utilities.estimate_dt", "flasc.utilities.utilities.get_num_turbines", "flasc.utilities.utilities.interp_with_max_gap", "flasc.utilities.utilities_examples", "flasc.utilities.utilities_examples.load_floris_artificial", "flasc.utilities.utilities_examples.load_floris_smarteole", "API Documentation", "Raw data processing", "Energy ratio analysis", "Demonstrate energy ratio syntax", "Demonstrate energy ratio options", "FLASC data format", "Getting started", "FLASC documentation", "Installation", "Licensing", "Overview", "Total uplift"], "titleterms": {"0": 110, "2": 110, "a_00_initial_download": 108, "a_01_to_common_format_df": 108, "a_02_basic_filt": 108, "a_03_check_sensor_stuck_fault": 108, "a_04_wspowercurve_filtering_cod": 108, "a_04_wspowercurve_filtering_gui": 108, "a_05a_plot_faults_with_layout": 108, "a_05b_cross_compare_wd_measurement_calibr": 108, "a_06a_determine_timeshift_datasourc": 108, "a_06b_apply_timeshift_df": 108, "a_07a_estimate_wd_bias_per_turbin": 108, "a_07b_wd_bias_to_df": 108, "a_08_plot_energy_ratio": 108, "add": 110, "add_bin_weight": 65, "add_gaussian_blending_to_floris_approx_t": 80, "add_power_ref": 66, "add_power_test": 67, "add_reflected_row": 68, "add_w": 71, "add_wd": 69, "add_wd_bin": 70, "add_ws_bin": 72, "analysi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 109, 117], "api": 107, "assembl": 110, "bias_estim": 43, "bin_and_group_datafram": 73, "bin_column": 74, "calc_floris_approx_t": 81, "calc_wd_mean_radi": 62, "calcul": 110, "calculate_wd_statist": 63, "chang": 110, "check_compute_energy_ratio_input": 75, "circular_statist": [61, 62, 63], "citat": 117, "comput": [110, 111], "compute_energy_ratio": 2, "compute_total_uplift": 11, "convert": 112, "creat": 112, "crosscheck_northing_offset_consist": 52, "cut": 76, "data": [108, 112], "data_process": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 117], "datafram": 110, "dataframe_manipul": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "dataset": [110, 111], "demonstr": [109, 110, 111], "develop": 115, "df_downsampl": 54, "df_drop_nan_row": 14, "df_find_and_fill_data_gaps_with_miss": 15, "df_get_no_faulty_measur": 46, "df_mark_turbdata_as_faulti": 47, "df_movingaverag": 55, "df_reduce_precis": 16, "df_resample_by_interpol": 56, "df_sort_and_find_dupl": 17, "df_sort_and_fix_dupl": 18, "direct": [110, 111], "document": [107, 114], "energi": [109, 110, 111], "energy_ratio": [1, 2], "energy_ratio_heterogeneity_mapp": [3, 4], "energy_ratio_input": [5, 6, 7], "energy_ratio_output": [8, 9], "energy_ratio_util": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "energy_ratio_wd_bias_estim": [42, 43], "energyratioinput": 6, "energyratiooutput": [9, 110], "estimate_dt": 101, "estimate_ti": 92, "exampl": [108, 109, 113], "export": 112, "farm": 108, "filter": [44, 45, 46, 47, 48, 108], "filter_all_nul": 77, "filter_any_nul": 78, "filter_df_by_faulty_impacting_turbin": 48, "filter_df_by_ti": 19, "filter_df_by_w": 21, "filter_df_by_wd": 20, "find_sensor_fault": [49, 50], "find_sensor_stuck_fault": 50, "find_timeshift_between_df": 93, "flasc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 112, 113, 114, 117], "flasc_datafram": [58, 59], "flascdatafram": [59, 112], "flascfilt": 45, "flatten_col": 57, "flori": [110, 111], "floris_tool": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "format": [108, 112], "from": 112, "gener": [110, 111], "generate_block_list": 7, "get": 113, "get_all_dependent_turbin": 82, "get_all_impacting_turbin": 83, "get_all_impacting_turbines_geometr": 84, "get_column_mean": 22, "get_dependent_turbines_by_wd": 85, "get_num_turbin": [23, 102], "get_turbs_in_radiu": 86, "get_upstream_turbs_flori": 87, "get_yaw_angles_interpol": 90, "heterogeneity_mapp": 4, "illustr": 111, "input": 110, "instal": [113, 115], "interp_with_max_gap": 103, "interpolate_floris_from_df_approx": 88, "is_day_or_night": 24, "licens": 116, "literatur": 117, "load_floris_artifici": 105, "load_floris_smarteol": 106, "long": 112, "lookup_table_tool": [89, 90], "match_y_curves_by_offset": 94, "necessari": 108, "nested_get": 96, "nested_set": 97, "nois": 110, "northing_offset": [51, 52], "optim": [91, 92, 93, 94], "option": [108, 111], "overview": 117, "packag": 117, "panda": 110, "plot_sun_altitude_with_day_night_color": 25, "power": 111, "pre": 111, "process": 108, "py": 108, "question": 117, "ratio": [109, 110, 111], "raw": 108, "refer": 111, "replicate_nan_valu": 98, "resim_flori": 99, "respect": 110, "retriev": 108, "set_pow_ref_by_n_closest_upstream_turbin": 26, "set_pow_ref_by_turbin": 27, "set_pow_ref_by_upstream_turbin": 28, "set_pow_ref_by_upstream_turbines_in_radiu": 29, "set_ti_by_all_turbin": 30, "set_ti_by_turbin": 31, "set_ti_by_upstream_turbin": 32, "set_ti_by_upstream_turbines_in_radiu": 33, "set_wd_by_all_turbin": 34, "set_wd_by_radius_from_turbin": 35, "set_wd_by_turbin": 36, "set_ws_by_all_turbin": 37, "set_ws_by_n_closest_upstream_turbin": 38, "set_ws_by_turbin": 39, "set_ws_by_upstream_turbin": 40, "set_ws_by_upstream_turbines_in_radiu": 41, "signal": 110, "some": 110, "speed": [110, 111], "start": 113, "syntax": 110, "tabl": 108, "tall": 108, "three": 108, "time_oper": [53, 54, 55, 56, 57], "total": 118, "total_uplift": [10, 11], "tuner_util": [95, 96, 97, 98, 99], "turbin": [108, 110], "uncertainti": 110, "up": 112, "uplift": [110, 118], "us": 112, "usag": 109, "user": 112, "util": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 117], "utilities_exampl": [104, 105, 106], "wide": [108, 112], "wind": [108, 110, 111, 112]}})